// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="setupLDPC,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tffv676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.881000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=104}" *)

module setupLDPC (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        size_V,
        rate_V,
        nR_M_V,
        nR_M_V_ap_vld,
        etaIndexM_M_V,
        etaIndexM_M_V_ap_vld,
        pCodeM_V,
        pCodeM_V_ap_vld,
        pMaxIterations_V,
        pMaxIterations_V_ap_vld,
        numbits_V,
        numbits_V_ap_vld,
        split_V,
        split_V_ap_vld
);

parameter    ap_const_lv16_2800 = 16'b10100000000000;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv16_1C00 = 16'b1110000000000;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv16_1600 = 16'b1011000000000;
parameter    ap_const_lv5_6 = 5'b110;
parameter    ap_const_lv16_A00 = 16'b101000000000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv16_700 = 16'b11100000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv16_580 = 16'b10110000000;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv16_9000 = 16'b1001000000000000;
parameter    ap_const_lv16_6800 = 16'b110100000000000;
parameter    ap_const_lv16_5400 = 16'b101010000000000;
parameter    ap_const_lv16_2400 = 16'b10010000000000;
parameter    ap_const_lv16_1A00 = 16'b1101000000000;
parameter    ap_const_lv16_1500 = 16'b1010100000000;
parameter    ap_const_lv16_1800 = 16'b1100000000000;
parameter    ap_const_lv16_C00 = 16'b110000000000;
parameter    ap_const_lv16_600 = 16'b11000000000;
parameter    ap_const_lv16_300 = 16'b1100000000;
parameter    ap_const_lv16_180 = 16'b110000000;
parameter    ap_const_lv16_3 = 16'b11;
parameter    ap_const_lv16_1E = 16'b11110;
parameter    ap_const_lv16_2000 = 16'b10000000000000;
parameter    ap_const_lv16_1400 = 16'b1010000000000;
parameter    ap_const_lv16_800 = 16'b100000000000;
parameter    ap_const_lv16_500 = 16'b10100000000;
parameter    ap_const_lv16_400 = 16'b10000000000;
parameter    ap_const_lv16_200 = 16'b1000000000;
parameter    ap_const_lv16_100 = 16'b100000000;
parameter    ap_const_lv16_C0 = 16'b11000000;
parameter    ap_const_lv16_80 = 16'b10000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_5 = 3'b101;

input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] size_V;
input  [1:0] rate_V;
output  [15:0] nR_M_V;
output   nR_M_V_ap_vld;
output  [15:0] etaIndexM_M_V;
output   etaIndexM_M_V_ap_vld;
output  [15:0] pCodeM_V;
output   pCodeM_V_ap_vld;
output  [15:0] pMaxIterations_V;
output   pMaxIterations_V_ap_vld;
output  [15:0] numbits_V;
output   numbits_V_ap_vld;
output  [15:0] split_V;
output   split_V_ap_vld;

reg[15:0] nR_M_V;
reg nR_M_V_ap_vld;
reg[15:0] etaIndexM_M_V;
reg etaIndexM_M_V_ap_vld;
reg[15:0] pCodeM_V;
reg pCodeM_V_ap_vld;
reg[15:0] pMaxIterations_V;
reg pMaxIterations_V_ap_vld;
reg[15:0] numbits_V;
reg numbits_V_ap_vld;
reg[15:0] split_V;
reg split_V_ap_vld;

wire   [4:0] mode_fu_231_p2;
wire   [3:0] p_shl_fu_199_p3;
wire   [4:0] p_shl_cast_fu_207_p1;
wire   [4:0] tmp_cast2_fu_195_p1;
wire   [2:0] tmp_2_cast_fu_217_p1;
wire   [2:0] tmp1_fu_221_p2;
wire   [4:0] tmp_1_fu_211_p2;
wire  signed [4:0] tmp1_cast_fu_227_p1;

always @ (*) begin
    if (~(ap_start == 1'b0)) begin
        if ((mode_fu_231_p2 == ap_const_lv5_3)) begin
            etaIndexM_M_V = ap_const_lv16_1500;
        end else if ((mode_fu_231_p2 == ap_const_lv5_2)) begin
            etaIndexM_M_V = ap_const_lv16_1A00;
        end else if ((mode_fu_231_p2 == ap_const_lv5_1)) begin
            etaIndexM_M_V = ap_const_lv16_2400;
        end else if ((mode_fu_231_p2 == ap_const_lv5_6)) begin
            etaIndexM_M_V = ap_const_lv16_5400;
        end else if ((mode_fu_231_p2 == ap_const_lv5_5)) begin
            etaIndexM_M_V = ap_const_lv16_6800;
        end else if ((mode_fu_231_p2 == ap_const_lv5_4)) begin
            etaIndexM_M_V = ap_const_lv16_9000;
        end else begin
            etaIndexM_M_V = 'bx;
        end
    end else begin
        etaIndexM_M_V = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3)))) begin
        etaIndexM_M_V_ap_vld = 1'b1;
    end else begin
        etaIndexM_M_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (~(ap_start == 1'b0)) begin
        if ((mode_fu_231_p2 == ap_const_lv5_3)) begin
            nR_M_V = ap_const_lv16_580;
        end else if ((mode_fu_231_p2 == ap_const_lv5_2)) begin
            nR_M_V = ap_const_lv16_700;
        end else if ((mode_fu_231_p2 == ap_const_lv5_1)) begin
            nR_M_V = ap_const_lv16_A00;
        end else if ((mode_fu_231_p2 == ap_const_lv5_6)) begin
            nR_M_V = ap_const_lv16_1600;
        end else if ((mode_fu_231_p2 == ap_const_lv5_5)) begin
            nR_M_V = ap_const_lv16_1C00;
        end else if ((mode_fu_231_p2 == ap_const_lv5_4)) begin
            nR_M_V = ap_const_lv16_2800;
        end else begin
            nR_M_V = 'bx;
        end
    end else begin
        nR_M_V = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3)))) begin
        nR_M_V_ap_vld = 1'b1;
    end else begin
        nR_M_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (~(ap_start == 1'b0)) begin
        if ((mode_fu_231_p2 == ap_const_lv5_3)) begin
            numbits_V = ap_const_lv16_500;
        end else if ((mode_fu_231_p2 == ap_const_lv5_2)) begin
            numbits_V = ap_const_lv16_600;
        end else if ((mode_fu_231_p2 == ap_const_lv5_1)) begin
            numbits_V = ap_const_lv16_800;
        end else if ((mode_fu_231_p2 == ap_const_lv5_6)) begin
            numbits_V = ap_const_lv16_1400;
        end else if ((mode_fu_231_p2 == ap_const_lv5_5)) begin
            numbits_V = ap_const_lv16_1800;
        end else if ((mode_fu_231_p2 == ap_const_lv5_4)) begin
            numbits_V = ap_const_lv16_2000;
        end else begin
            numbits_V = 'bx;
        end
    end else begin
        numbits_V = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3)))) begin
        numbits_V_ap_vld = 1'b1;
    end else begin
        numbits_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3))) begin
        pCodeM_V = ap_const_lv16_180;
    end else if ((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2))) begin
        pCodeM_V = ap_const_lv16_300;
    end else if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)))) begin
        pCodeM_V = ap_const_lv16_600;
    end else if ((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5))) begin
        pCodeM_V = ap_const_lv16_C00;
    end else if ((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4))) begin
        pCodeM_V = ap_const_lv16_1800;
    end else begin
        pCodeM_V = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3)))) begin
        pCodeM_V_ap_vld = 1'b1;
    end else begin
        pCodeM_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3))) begin
        pMaxIterations_V = ap_const_lv16_1E;
    end else if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)))) begin
        pMaxIterations_V = ap_const_lv16_3;
    end else begin
        pMaxIterations_V = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3)))) begin
        pMaxIterations_V_ap_vld = 1'b1;
    end else begin
        pMaxIterations_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (~(ap_start == 1'b0)) begin
        if ((mode_fu_231_p2 == ap_const_lv5_3)) begin
            split_V = ap_const_lv16_80;
        end else if ((mode_fu_231_p2 == ap_const_lv5_2)) begin
            split_V = ap_const_lv16_C0;
        end else if ((mode_fu_231_p2 == ap_const_lv5_1)) begin
            split_V = ap_const_lv16_100;
        end else if ((mode_fu_231_p2 == ap_const_lv5_6)) begin
            split_V = ap_const_lv16_200;
        end else if ((mode_fu_231_p2 == ap_const_lv5_5)) begin
            split_V = ap_const_lv16_300;
        end else if ((mode_fu_231_p2 == ap_const_lv5_4)) begin
            split_V = ap_const_lv16_400;
        end else begin
            split_V = 'bx;
        end
    end else begin
        split_V = 'bx;
    end
end

always @ (*) begin
    if (((~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_4)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_5)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_6)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_1)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_2)) | (~(ap_start == 1'b0) & (mode_fu_231_p2 == ap_const_lv5_3)))) begin
        split_V_ap_vld = 1'b1;
    end else begin
        split_V_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign mode_fu_231_p2 = ($signed(tmp_1_fu_211_p2) + $signed(tmp1_cast_fu_227_p1));

assign p_shl_cast_fu_207_p1 = p_shl_fu_199_p3;

assign p_shl_fu_199_p3 = {{size_V}, {ap_const_lv2_0}};

assign tmp1_cast_fu_227_p1 = $signed(tmp1_fu_221_p2);

assign tmp1_fu_221_p2 = ($signed(tmp_2_cast_fu_217_p1) + $signed(ap_const_lv3_5));

assign tmp_1_fu_211_p2 = (p_shl_cast_fu_207_p1 - tmp_cast2_fu_195_p1);

assign tmp_2_cast_fu_217_p1 = rate_V;

assign tmp_cast2_fu_195_p1 = size_V;

endmodule //setupLDPC
