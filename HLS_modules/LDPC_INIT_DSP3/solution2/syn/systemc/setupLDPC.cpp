// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "setupLDPC.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic setupLDPC::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic setupLDPC::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> setupLDPC::ap_const_lv16_2800 = "10100000000000";
const sc_lv<5> setupLDPC::ap_const_lv5_4 = "100";
const sc_lv<16> setupLDPC::ap_const_lv16_1C00 = "1110000000000";
const sc_lv<5> setupLDPC::ap_const_lv5_5 = "101";
const sc_lv<16> setupLDPC::ap_const_lv16_1600 = "1011000000000";
const sc_lv<5> setupLDPC::ap_const_lv5_6 = "110";
const sc_lv<16> setupLDPC::ap_const_lv16_A00 = "101000000000";
const sc_lv<5> setupLDPC::ap_const_lv5_1 = "1";
const sc_lv<16> setupLDPC::ap_const_lv16_700 = "11100000000";
const sc_lv<5> setupLDPC::ap_const_lv5_2 = "10";
const sc_lv<16> setupLDPC::ap_const_lv16_580 = "10110000000";
const sc_lv<5> setupLDPC::ap_const_lv5_3 = "11";
const sc_lv<16> setupLDPC::ap_const_lv16_9000 = "1001000000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_6800 = "110100000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_5400 = "101010000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_2400 = "10010000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_1A00 = "1101000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_1500 = "1010100000000";
const sc_lv<16> setupLDPC::ap_const_lv16_1800 = "1100000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_C00 = "110000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_600 = "11000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_300 = "1100000000";
const sc_lv<16> setupLDPC::ap_const_lv16_180 = "110000000";
const sc_lv<16> setupLDPC::ap_const_lv16_3 = "11";
const sc_lv<16> setupLDPC::ap_const_lv16_1E = "11110";
const sc_lv<16> setupLDPC::ap_const_lv16_2000 = "10000000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_1400 = "1010000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_800 = "100000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_500 = "10100000000";
const sc_lv<16> setupLDPC::ap_const_lv16_400 = "10000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_200 = "1000000000";
const sc_lv<16> setupLDPC::ap_const_lv16_100 = "100000000";
const sc_lv<16> setupLDPC::ap_const_lv16_C0 = "11000000";
const sc_lv<16> setupLDPC::ap_const_lv16_80 = "10000000";
const sc_lv<2> setupLDPC::ap_const_lv2_0 = "00";
const sc_lv<3> setupLDPC::ap_const_lv3_5 = "101";

setupLDPC::setupLDPC(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );

    SC_METHOD(thread_etaIndexM_M_V);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_etaIndexM_M_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_mode_fu_231_p2);
    sensitive << ( tmp_1_fu_211_p2 );
    sensitive << ( tmp1_cast_fu_227_p1 );

    SC_METHOD(thread_nR_M_V);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_nR_M_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_numbits_V);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_numbits_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_pCodeM_V);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_pCodeM_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_pMaxIterations_V);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_pMaxIterations_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_p_shl_cast_fu_207_p1);
    sensitive << ( p_shl_fu_199_p3 );

    SC_METHOD(thread_p_shl_fu_199_p3);
    sensitive << ( size_V );

    SC_METHOD(thread_split_V);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_split_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( mode_fu_231_p2 );

    SC_METHOD(thread_tmp1_cast_fu_227_p1);
    sensitive << ( tmp1_fu_221_p2 );

    SC_METHOD(thread_tmp1_fu_221_p2);
    sensitive << ( tmp_2_cast_fu_217_p1 );

    SC_METHOD(thread_tmp_1_fu_211_p2);
    sensitive << ( p_shl_cast_fu_207_p1 );
    sensitive << ( tmp_cast2_fu_195_p1 );

    SC_METHOD(thread_tmp_2_cast_fu_217_p1);
    sensitive << ( rate_V );

    SC_METHOD(thread_tmp_cast2_fu_195_p1);
    sensitive << ( size_V );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_virtual_clock.pos() );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "setupLDPC_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, size_V, "(port)size_V");
    sc_trace(mVcdFile, rate_V, "(port)rate_V");
    sc_trace(mVcdFile, nR_M_V, "(port)nR_M_V");
    sc_trace(mVcdFile, nR_M_V_ap_vld, "(port)nR_M_V_ap_vld");
    sc_trace(mVcdFile, etaIndexM_M_V, "(port)etaIndexM_M_V");
    sc_trace(mVcdFile, etaIndexM_M_V_ap_vld, "(port)etaIndexM_M_V_ap_vld");
    sc_trace(mVcdFile, pCodeM_V, "(port)pCodeM_V");
    sc_trace(mVcdFile, pCodeM_V_ap_vld, "(port)pCodeM_V_ap_vld");
    sc_trace(mVcdFile, pMaxIterations_V, "(port)pMaxIterations_V");
    sc_trace(mVcdFile, pMaxIterations_V_ap_vld, "(port)pMaxIterations_V_ap_vld");
    sc_trace(mVcdFile, numbits_V, "(port)numbits_V");
    sc_trace(mVcdFile, numbits_V_ap_vld, "(port)numbits_V_ap_vld");
    sc_trace(mVcdFile, split_V, "(port)split_V");
    sc_trace(mVcdFile, split_V_ap_vld, "(port)split_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, mode_fu_231_p2, "mode_fu_231_p2");
    sc_trace(mVcdFile, p_shl_fu_199_p3, "p_shl_fu_199_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_207_p1, "p_shl_cast_fu_207_p1");
    sc_trace(mVcdFile, tmp_cast2_fu_195_p1, "tmp_cast2_fu_195_p1");
    sc_trace(mVcdFile, tmp_2_cast_fu_217_p1, "tmp_2_cast_fu_217_p1");
    sc_trace(mVcdFile, tmp1_fu_221_p2, "tmp1_fu_221_p2");
    sc_trace(mVcdFile, tmp_1_fu_211_p2, "tmp_1_fu_211_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_227_p1, "tmp1_cast_fu_227_p1");
#endif

    }
    mHdltvinHandle.open("setupLDPC.hdltvin.dat");
    mHdltvoutHandle.open("setupLDPC.hdltvout.dat");
}

setupLDPC::~setupLDPC() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void setupLDPC::thread_ap_done() {
    ap_done = ap_start.read();
}

void setupLDPC::thread_ap_idle() {
    ap_idle = ap_const_logic_1;
}

void setupLDPC::thread_ap_ready() {
    ap_ready = ap_start.read();
}

void setupLDPC::thread_etaIndexM_M_V() {
    if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
        if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)) {
            etaIndexM_M_V = ap_const_lv16_1500;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) {
            etaIndexM_M_V = ap_const_lv16_1A00;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) {
            etaIndexM_M_V = ap_const_lv16_2400;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) {
            etaIndexM_M_V = ap_const_lv16_5400;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) {
            etaIndexM_M_V = ap_const_lv16_6800;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) {
            etaIndexM_M_V = ap_const_lv16_9000;
        } else {
            etaIndexM_M_V = "XXXXXXXXXXXXXXXX";
        }
    } else {
        etaIndexM_M_V = "XXXXXXXXXXXXXXXX";
    }
}

void setupLDPC::thread_etaIndexM_M_V_ap_vld() {
    if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)))) {
        etaIndexM_M_V_ap_vld = ap_const_logic_1;
    } else {
        etaIndexM_M_V_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC::thread_mode_fu_231_p2() {
    mode_fu_231_p2 = (!tmp_1_fu_211_p2.read().is_01() || !tmp1_cast_fu_227_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_1_fu_211_p2.read()) + sc_bigint<5>(tmp1_cast_fu_227_p1.read()));
}

void setupLDPC::thread_nR_M_V() {
    if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
        if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)) {
            nR_M_V = ap_const_lv16_580;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) {
            nR_M_V = ap_const_lv16_700;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) {
            nR_M_V = ap_const_lv16_A00;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) {
            nR_M_V = ap_const_lv16_1600;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) {
            nR_M_V = ap_const_lv16_1C00;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) {
            nR_M_V = ap_const_lv16_2800;
        } else {
            nR_M_V = "XXXXXXXXXXXXXXXX";
        }
    } else {
        nR_M_V = "XXXXXXXXXXXXXXXX";
    }
}

void setupLDPC::thread_nR_M_V_ap_vld() {
    if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)))) {
        nR_M_V_ap_vld = ap_const_logic_1;
    } else {
        nR_M_V_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC::thread_numbits_V() {
    if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
        if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)) {
            numbits_V = ap_const_lv16_500;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) {
            numbits_V = ap_const_lv16_600;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) {
            numbits_V = ap_const_lv16_800;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) {
            numbits_V = ap_const_lv16_1400;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) {
            numbits_V = ap_const_lv16_1800;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) {
            numbits_V = ap_const_lv16_2000;
        } else {
            numbits_V = "XXXXXXXXXXXXXXXX";
        }
    } else {
        numbits_V = "XXXXXXXXXXXXXXXX";
    }
}

void setupLDPC::thread_numbits_V_ap_vld() {
    if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)))) {
        numbits_V_ap_vld = ap_const_logic_1;
    } else {
        numbits_V_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC::thread_pCodeM_V() {
    if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3))) {
        pCodeM_V = ap_const_lv16_180;
    } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2))) {
        pCodeM_V = ap_const_lv16_300;
    } else if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
                (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)))) {
        pCodeM_V = ap_const_lv16_600;
    } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5))) {
        pCodeM_V = ap_const_lv16_C00;
    } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4))) {
        pCodeM_V = ap_const_lv16_1800;
    } else {
        pCodeM_V = "XXXXXXXXXXXXXXXX";
    }
}

void setupLDPC::thread_pCodeM_V_ap_vld() {
    if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)))) {
        pCodeM_V_ap_vld = ap_const_logic_1;
    } else {
        pCodeM_V_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC::thread_pMaxIterations_V() {
    if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3))) {
        pMaxIterations_V = ap_const_lv16_1E;
    } else if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
                (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
                (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
                (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
                (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                 esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)))) {
        pMaxIterations_V = ap_const_lv16_3;
    } else {
        pMaxIterations_V = "XXXXXXXXXXXXXXXX";
    }
}

void setupLDPC::thread_pMaxIterations_V_ap_vld() {
    if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)))) {
        pMaxIterations_V_ap_vld = ap_const_logic_1;
    } else {
        pMaxIterations_V_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC::thread_p_shl_cast_fu_207_p1() {
    p_shl_cast_fu_207_p1 = esl_zext<5,4>(p_shl_fu_199_p3.read());
}

void setupLDPC::thread_p_shl_fu_199_p3() {
    p_shl_fu_199_p3 = esl_concat<2,2>(size_V.read(), ap_const_lv2_0);
}

void setupLDPC::thread_split_V() {
    if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
        if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)) {
            split_V = ap_const_lv16_80;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) {
            split_V = ap_const_lv16_C0;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) {
            split_V = ap_const_lv16_100;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) {
            split_V = ap_const_lv16_200;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) {
            split_V = ap_const_lv16_300;
        } else if (esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) {
            split_V = ap_const_lv16_400;
        } else {
            split_V = "XXXXXXXXXXXXXXXX";
        }
    } else {
        split_V = "XXXXXXXXXXXXXXXX";
    }
}

void setupLDPC::thread_split_V_ap_vld() {
    if (((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_4)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_5)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_6)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_1)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_2)) || 
         (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,5,5>(mode_fu_231_p2.read(), ap_const_lv5_3)))) {
        split_V_ap_vld = ap_const_logic_1;
    } else {
        split_V_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC::thread_tmp1_cast_fu_227_p1() {
    tmp1_cast_fu_227_p1 = esl_sext<5,3>(tmp1_fu_221_p2.read());
}

void setupLDPC::thread_tmp1_fu_221_p2() {
    tmp1_fu_221_p2 = (!tmp_2_cast_fu_217_p1.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_2_cast_fu_217_p1.read()) + sc_bigint<3>(ap_const_lv3_5));
}

void setupLDPC::thread_tmp_1_fu_211_p2() {
    tmp_1_fu_211_p2 = (!p_shl_cast_fu_207_p1.read().is_01() || !tmp_cast2_fu_195_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_207_p1.read()) - sc_biguint<5>(tmp_cast2_fu_195_p1.read()));
}

void setupLDPC::thread_tmp_2_cast_fu_217_p1() {
    tmp_2_cast_fu_217_p1 = esl_zext<3,2>(rate_V.read());
}

void setupLDPC::thread_tmp_cast2_fu_195_p1() {
    tmp_cast2_fu_195_p1 = esl_zext<5,2>(size_V.read());
}

void setupLDPC::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"size_V\" :  \"" << size_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rate_V\" :  \"" << rate_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nR_M_V\" :  \"" << nR_M_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nR_M_V_ap_vld\" :  \"" << nR_M_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"etaIndexM_M_V\" :  \"" << etaIndexM_M_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"etaIndexM_M_V_ap_vld\" :  \"" << etaIndexM_M_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pCodeM_V\" :  \"" << pCodeM_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pCodeM_V_ap_vld\" :  \"" << pCodeM_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pMaxIterations_V\" :  \"" << pMaxIterations_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pMaxIterations_V_ap_vld\" :  \"" << pMaxIterations_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"numbits_V\" :  \"" << numbits_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"numbits_V_ap_vld\" :  \"" << numbits_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"split_V\" :  \"" << split_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"split_V_ap_vld\" :  \"" << split_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

