// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _setupLDPC_load_etaIndexM_HH_
#define _setupLDPC_load_etaIndexM_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct setupLDPC_load_etaIndexM : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<17> > num;
    sc_out< sc_lv<16> > etaIndexM_V_address0;
    sc_out< sc_logic > etaIndexM_V_ce0;
    sc_out< sc_logic > etaIndexM_V_we0;
    sc_out< sc_lv<16> > etaIndexM_V_d0;
    sc_out< sc_lv<1> > dout;
    sc_out< sc_logic > dout_ap_vld;
    sc_in< sc_lv<1> > din;
    sc_out< sc_lv<1> > cs;
    sc_out< sc_logic > cs_ap_vld;
    sc_out< sc_lv<1> > clk;
    sc_out< sc_logic > clk_ap_vld;


    // Module declarations
    setupLDPC_load_etaIndexM(sc_module_name name);
    SC_HAS_PROCESS(setupLDPC_load_etaIndexM);

    ~setupLDPC_load_etaIndexM();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<4> > loop_3_fu_150_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_55;
    sc_signal< sc_lv<8> > read_3_fu_170_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_144_p2;
    sc_signal< sc_lv<5> > loop_4_fu_182_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_70;
    sc_signal< sc_lv<16> > pos_1_fu_203_p2;
    sc_signal< sc_lv<16> > pos_1_reg_290;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_lv<1> > tmp_9_fu_198_p2;
    sc_signal< sc_lv<5> > loop_5_fu_231_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_94;
    sc_signal< sc_lv<16> > data_V_2_fu_249_p3;
    sc_signal< sc_lv<1> > exitcond_fu_225_p2;
    sc_signal< sc_lv<4> > loop_reg_76;
    sc_signal< sc_lv<8> > read_reg_87;
    sc_signal< sc_lv<5> > loop_1_reg_98;
    sc_signal< sc_lv<1> > exitcond2_fu_176_p2;
    sc_signal< sc_lv<16> > pos_reg_109;
    sc_signal< sc_lv<16> > p_s_reg_121;
    sc_signal< sc_lv<5> > loop_2_reg_133;
    sc_signal< sc_lv<64> > tmp_s_fu_256_p1;
    sc_signal< sc_lv<17> > pos_cast_fu_194_p1;
    sc_signal< sc_lv<16> > r_V_fu_237_p2;
    sc_signal< sc_lv<16> > data_V_1_fu_243_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<5> ap_const_lv5_10;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_55();
    void thread_ap_sig_bdd_70();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_bdd_94();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_clk();
    void thread_clk_ap_vld();
    void thread_cs();
    void thread_cs_ap_vld();
    void thread_data_V_1_fu_243_p2();
    void thread_data_V_2_fu_249_p3();
    void thread_dout();
    void thread_dout_ap_vld();
    void thread_etaIndexM_V_address0();
    void thread_etaIndexM_V_ce0();
    void thread_etaIndexM_V_d0();
    void thread_etaIndexM_V_we0();
    void thread_exitcond1_fu_144_p2();
    void thread_exitcond2_fu_176_p2();
    void thread_exitcond_fu_225_p2();
    void thread_loop_3_fu_150_p2();
    void thread_loop_4_fu_182_p2();
    void thread_loop_5_fu_231_p2();
    void thread_pos_1_fu_203_p2();
    void thread_pos_cast_fu_194_p1();
    void thread_r_V_fu_237_p2();
    void thread_read_3_fu_170_p2();
    void thread_tmp_9_fu_198_p2();
    void thread_tmp_s_fu_256_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
