// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "setupLDPC_load_etaIndexM.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic setupLDPC_load_etaIndexM::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic setupLDPC_load_etaIndexM::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> setupLDPC_load_etaIndexM::ap_ST_st1_fsm_0 = "1";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_ST_st2_fsm_1 = "10";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_ST_st3_fsm_2 = "100";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_ST_st4_fsm_3 = "1000";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_ST_st5_fsm_4 = "10000";
const sc_lv<32> setupLDPC_load_etaIndexM::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> setupLDPC_load_etaIndexM::ap_const_lv1_1 = "1";
const sc_lv<32> setupLDPC_load_etaIndexM::ap_const_lv32_1 = "1";
const sc_lv<1> setupLDPC_load_etaIndexM::ap_const_lv1_0 = "0";
const sc_lv<32> setupLDPC_load_etaIndexM::ap_const_lv32_2 = "10";
const sc_lv<32> setupLDPC_load_etaIndexM::ap_const_lv32_3 = "11";
const sc_lv<32> setupLDPC_load_etaIndexM::ap_const_lv32_4 = "100";
const sc_lv<4> setupLDPC_load_etaIndexM::ap_const_lv4_0 = "0000";
const sc_lv<8> setupLDPC_load_etaIndexM::ap_const_lv8_3 = "11";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_const_lv5_0 = "00000";
const sc_lv<16> setupLDPC_load_etaIndexM::ap_const_lv16_0 = "0000000000000000";
const sc_lv<4> setupLDPC_load_etaIndexM::ap_const_lv4_8 = "1000";
const sc_lv<4> setupLDPC_load_etaIndexM::ap_const_lv4_1 = "1";
const sc_lv<32> setupLDPC_load_etaIndexM::ap_const_lv32_7 = "111";
const sc_lv<8> setupLDPC_load_etaIndexM::ap_const_lv8_1 = "1";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_const_lv5_18 = "11000";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_const_lv5_1 = "1";
const sc_lv<16> setupLDPC_load_etaIndexM::ap_const_lv16_1 = "1";
const sc_lv<5> setupLDPC_load_etaIndexM::ap_const_lv5_10 = "10000";

setupLDPC_load_etaIndexM::setupLDPC_load_etaIndexM(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_9_fu_198_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_9_fu_198_p2 );

    SC_METHOD(thread_ap_sig_bdd_23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_23 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_55 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_70 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_79 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_94 );

    SC_METHOD(thread_clk);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_9_fu_198_p2 );

    SC_METHOD(thread_clk_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_9_fu_198_p2 );

    SC_METHOD(thread_cs);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_9_fu_198_p2 );

    SC_METHOD(thread_cs_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_9_fu_198_p2 );

    SC_METHOD(thread_data_V_1_fu_243_p2);
    sensitive << ( r_V_fu_237_p2 );

    SC_METHOD(thread_data_V_2_fu_249_p3);
    sensitive << ( din );
    sensitive << ( r_V_fu_237_p2 );
    sensitive << ( data_V_1_fu_243_p2 );

    SC_METHOD(thread_dout);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_144_p2 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( read_reg_87 );
    sensitive << ( exitcond2_fu_176_p2 );

    SC_METHOD(thread_dout_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_144_p2 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond2_fu_176_p2 );

    SC_METHOD(thread_etaIndexM_V_address0);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_s_fu_256_p1 );

    SC_METHOD(thread_etaIndexM_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_etaIndexM_V_d0);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( p_s_reg_121 );

    SC_METHOD(thread_etaIndexM_V_we0);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond_fu_225_p2 );

    SC_METHOD(thread_exitcond1_fu_144_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( loop_reg_76 );

    SC_METHOD(thread_exitcond2_fu_176_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( loop_1_reg_98 );

    SC_METHOD(thread_exitcond_fu_225_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( loop_2_reg_133 );

    SC_METHOD(thread_loop_3_fu_150_p2);
    sensitive << ( loop_reg_76 );

    SC_METHOD(thread_loop_4_fu_182_p2);
    sensitive << ( loop_1_reg_98 );

    SC_METHOD(thread_loop_5_fu_231_p2);
    sensitive << ( loop_2_reg_133 );

    SC_METHOD(thread_pos_1_fu_203_p2);
    sensitive << ( pos_reg_109 );

    SC_METHOD(thread_pos_cast_fu_194_p1);
    sensitive << ( pos_reg_109 );

    SC_METHOD(thread_r_V_fu_237_p2);
    sensitive << ( p_s_reg_121 );

    SC_METHOD(thread_read_3_fu_170_p2);
    sensitive << ( read_reg_87 );

    SC_METHOD(thread_tmp_9_fu_198_p2);
    sensitive << ( num );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( pos_cast_fu_194_p1 );

    SC_METHOD(thread_tmp_s_fu_256_p1);
    sensitive << ( pos_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_144_p2 );
    sensitive << ( tmp_9_fu_198_p2 );
    sensitive << ( exitcond_fu_225_p2 );
    sensitive << ( exitcond2_fu_176_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "setupLDPC_load_etaIndexM_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, num, "(port)num");
    sc_trace(mVcdFile, etaIndexM_V_address0, "(port)etaIndexM_V_address0");
    sc_trace(mVcdFile, etaIndexM_V_ce0, "(port)etaIndexM_V_ce0");
    sc_trace(mVcdFile, etaIndexM_V_we0, "(port)etaIndexM_V_we0");
    sc_trace(mVcdFile, etaIndexM_V_d0, "(port)etaIndexM_V_d0");
    sc_trace(mVcdFile, dout, "(port)dout");
    sc_trace(mVcdFile, dout_ap_vld, "(port)dout_ap_vld");
    sc_trace(mVcdFile, din, "(port)din");
    sc_trace(mVcdFile, cs, "(port)cs");
    sc_trace(mVcdFile, cs_ap_vld, "(port)cs_ap_vld");
    sc_trace(mVcdFile, clk, "(port)clk");
    sc_trace(mVcdFile, clk_ap_vld, "(port)clk_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_23, "ap_sig_bdd_23");
    sc_trace(mVcdFile, loop_3_fu_150_p2, "loop_3_fu_150_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_55, "ap_sig_bdd_55");
    sc_trace(mVcdFile, read_3_fu_170_p2, "read_3_fu_170_p2");
    sc_trace(mVcdFile, exitcond1_fu_144_p2, "exitcond1_fu_144_p2");
    sc_trace(mVcdFile, loop_4_fu_182_p2, "loop_4_fu_182_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_70, "ap_sig_bdd_70");
    sc_trace(mVcdFile, pos_1_fu_203_p2, "pos_1_fu_203_p2");
    sc_trace(mVcdFile, pos_1_reg_290, "pos_1_reg_290");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_79, "ap_sig_bdd_79");
    sc_trace(mVcdFile, tmp_9_fu_198_p2, "tmp_9_fu_198_p2");
    sc_trace(mVcdFile, loop_5_fu_231_p2, "loop_5_fu_231_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_94, "ap_sig_bdd_94");
    sc_trace(mVcdFile, data_V_2_fu_249_p3, "data_V_2_fu_249_p3");
    sc_trace(mVcdFile, exitcond_fu_225_p2, "exitcond_fu_225_p2");
    sc_trace(mVcdFile, loop_reg_76, "loop_reg_76");
    sc_trace(mVcdFile, read_reg_87, "read_reg_87");
    sc_trace(mVcdFile, loop_1_reg_98, "loop_1_reg_98");
    sc_trace(mVcdFile, exitcond2_fu_176_p2, "exitcond2_fu_176_p2");
    sc_trace(mVcdFile, pos_reg_109, "pos_reg_109");
    sc_trace(mVcdFile, p_s_reg_121, "p_s_reg_121");
    sc_trace(mVcdFile, loop_2_reg_133, "loop_2_reg_133");
    sc_trace(mVcdFile, tmp_s_fu_256_p1, "tmp_s_fu_256_p1");
    sc_trace(mVcdFile, pos_cast_fu_194_p1, "pos_cast_fu_194_p1");
    sc_trace(mVcdFile, r_V_fu_237_p2, "r_V_fu_237_p2");
    sc_trace(mVcdFile, data_V_1_fu_243_p2, "data_V_1_fu_243_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

setupLDPC_load_etaIndexM::~setupLDPC_load_etaIndexM() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void setupLDPC_load_etaIndexM::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_144_p2.read(), ap_const_lv1_0))) {
        loop_1_reg_98 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_176_p2.read()))) {
        loop_1_reg_98 = loop_4_fu_182_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read()))) {
        loop_2_reg_133 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_225_p2.read()))) {
        loop_2_reg_133 = loop_5_fu_231_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_144_p2.read(), ap_const_lv1_0))) {
        loop_reg_76 = loop_3_fu_150_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        loop_reg_76 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read()))) {
        p_s_reg_121 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_225_p2.read()))) {
        p_s_reg_121 = data_V_2_fu_249_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_176_p2.read()))) {
        pos_reg_109 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_225_p2.read()))) {
        pos_reg_109 = pos_1_reg_290.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_144_p2.read(), ap_const_lv1_0))) {
        read_reg_87 = read_3_fu_170_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        read_reg_87 = ap_const_lv8_3;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        pos_1_reg_290 = pos_1_fu_203_p2.read();
    }
}

void setupLDPC_load_etaIndexM::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_sig_bdd_23() {
    ap_sig_bdd_23 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void setupLDPC_load_etaIndexM::thread_ap_sig_bdd_55() {
    ap_sig_bdd_55 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void setupLDPC_load_etaIndexM::thread_ap_sig_bdd_70() {
    ap_sig_bdd_70 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void setupLDPC_load_etaIndexM::thread_ap_sig_bdd_79() {
    ap_sig_bdd_79 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void setupLDPC_load_etaIndexM::thread_ap_sig_bdd_94() {
    ap_sig_bdd_94 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void setupLDPC_load_etaIndexM::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_23.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_55.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_70.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_79.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_94.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_clk() {
    clk = ap_const_lv1_0;
}

void setupLDPC_load_etaIndexM::thread_clk_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read()))) {
        clk_ap_vld = ap_const_logic_1;
    } else {
        clk_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_cs() {
    cs = ap_const_lv1_1;
}

void setupLDPC_load_etaIndexM::thread_cs_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read()))) {
        cs_ap_vld = ap_const_logic_1;
    } else {
        cs_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_data_V_1_fu_243_p2() {
    data_V_1_fu_243_p2 = (r_V_fu_237_p2.read() | ap_const_lv16_1);
}

void setupLDPC_load_etaIndexM::thread_data_V_2_fu_249_p3() {
    data_V_2_fu_249_p3 = (!din.read()[0].is_01())? sc_lv<16>(): ((din.read()[0].to_bool())? data_V_1_fu_243_p2.read(): r_V_fu_237_p2.read());
}

void setupLDPC_load_etaIndexM::thread_dout() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_176_p2.read()))) {
        dout = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_144_p2.read(), ap_const_lv1_0))) {
        dout = read_reg_87.read().range(7, 7);
    } else {
        dout = "X";
    }
}

void setupLDPC_load_etaIndexM::thread_dout_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_144_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_176_p2.read())))) {
        dout_ap_vld = ap_const_logic_1;
    } else {
        dout_ap_vld = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_etaIndexM_V_address0() {
    etaIndexM_V_address0 =  (sc_lv<16>) (tmp_s_fu_256_p1.read());
}

void setupLDPC_load_etaIndexM::thread_etaIndexM_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        etaIndexM_V_ce0 = ap_const_logic_1;
    } else {
        etaIndexM_V_ce0 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_etaIndexM_V_d0() {
    etaIndexM_V_d0 = p_s_reg_121.read();
}

void setupLDPC_load_etaIndexM::thread_etaIndexM_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_225_p2.read())))) {
        etaIndexM_V_we0 = ap_const_logic_1;
    } else {
        etaIndexM_V_we0 = ap_const_logic_0;
    }
}

void setupLDPC_load_etaIndexM::thread_exitcond1_fu_144_p2() {
    exitcond1_fu_144_p2 = (!loop_reg_76.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(loop_reg_76.read() == ap_const_lv4_8);
}

void setupLDPC_load_etaIndexM::thread_exitcond2_fu_176_p2() {
    exitcond2_fu_176_p2 = (!loop_1_reg_98.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(loop_1_reg_98.read() == ap_const_lv5_18);
}

void setupLDPC_load_etaIndexM::thread_exitcond_fu_225_p2() {
    exitcond_fu_225_p2 = (!loop_2_reg_133.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(loop_2_reg_133.read() == ap_const_lv5_10);
}

void setupLDPC_load_etaIndexM::thread_loop_3_fu_150_p2() {
    loop_3_fu_150_p2 = (!loop_reg_76.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(loop_reg_76.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void setupLDPC_load_etaIndexM::thread_loop_4_fu_182_p2() {
    loop_4_fu_182_p2 = (!loop_1_reg_98.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(loop_1_reg_98.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void setupLDPC_load_etaIndexM::thread_loop_5_fu_231_p2() {
    loop_5_fu_231_p2 = (!loop_2_reg_133.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(loop_2_reg_133.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void setupLDPC_load_etaIndexM::thread_pos_1_fu_203_p2() {
    pos_1_fu_203_p2 = (!pos_reg_109.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(pos_reg_109.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void setupLDPC_load_etaIndexM::thread_pos_cast_fu_194_p1() {
    pos_cast_fu_194_p1 = esl_zext<17,16>(pos_reg_109.read());
}

void setupLDPC_load_etaIndexM::thread_r_V_fu_237_p2() {
    r_V_fu_237_p2 = (!ap_const_lv16_1.is_01())? sc_lv<16>(): p_s_reg_121.read() << (unsigned short)ap_const_lv16_1.to_uint();
}

void setupLDPC_load_etaIndexM::thread_read_3_fu_170_p2() {
    read_3_fu_170_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): read_reg_87.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void setupLDPC_load_etaIndexM::thread_tmp_9_fu_198_p2() {
    tmp_9_fu_198_p2 = (!pos_cast_fu_194_p1.read().is_01() || !num.read().is_01())? sc_lv<1>(): (sc_bigint<17>(pos_cast_fu_194_p1.read()) < sc_bigint<17>(num.read()));
}

void setupLDPC_load_etaIndexM::thread_tmp_s_fu_256_p1() {
    tmp_s_fu_256_p1 = esl_zext<64,16>(pos_reg_109.read());
}

void setupLDPC_load_etaIndexM::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond1_fu_144_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_176_p2.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_198_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_225_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

