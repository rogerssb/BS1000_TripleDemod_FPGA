-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mcalcAA_23_varinxsc4_rom is 
    generic(
             dwidth     : integer := 30; 
             awidth     : integer := 8; 
             mem_size    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mcalcAA_23_varinxsc4_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "010110010000001011000011000111", 1 => "010110100000001011100011001000", 
    2 => "010110110000001100000011001001", 3 => "010111000000001100100011001010", 
    4 => "010111010000001101000011001011", 5 => "010111100000001101100011001100", 
    6 => "010111110000001110000011001101", 7 => "011000000000001110100011001110", 
    8 => "011000010000001111000011001111", 9 => "011000100000001111100011010000", 
    10 => "011000110000010000000011010001", 11 => "011001000000010000100011010010", 
    12 => "011001010000010001000011010011", 13 => "011001100000010001100011010100", 
    14 => "011001110000010010000011010101", 15 => "011010000000010010100011010110", 
    16 => "011010010000010011000011010111", 17 => "011010100000010011100011011000", 
    18 => "011010110000010100000011011001", 19 => "011011000000010100100011011010", 
    20 => "011011010000010101000011011011", 21 => "011011100000010101100011011100", 
    22 => "011011110000010110000011011101", 23 => "011100000000010110100011011110", 
    24 => "011100010000010111000011011111", 25 => "011100100000010111100011100000", 
    26 => "011100110000011000000011100001", 27 => "011101000000011000100011100010", 
    28 => "011101010000011001000011100011", 29 => "011101100000011001100011100100", 
    30 => "011101110000011010000011100101", 31 => "011110000000011010100011100110", 
    32 => "011110010000011011000011100111", 33 => "011110100000011011100011101000", 
    34 => "011110110000011100000011101001", 35 => "011111000000011100100011101010", 
    36 => "011111010000011101000011101011", 37 => "011111100000011101100011101100", 
    38 => "011111110000011110000011101101", 39 => "010000000000011110100011101110", 
    40 => "010000010000011111000011101111", 41 => "010000100000011111100011110000", 
    42 => "010000110000000000000011110001", 43 => "010001000000000000100011110010", 
    44 => "010001010000000001000011110011", 45 => "010001100000000001100011110100", 
    46 => "010001110000000010000011110101", 47 => "010010000000000010100011110110", 
    48 => "010010010000000011000011110111", 49 => "010010100000000011100011111000", 
    50 => "010010110000000100000011111001", 51 => "010011000000000100100011111010", 
    52 => "010011010000000101000011111011", 53 => "010011100000000101100011111100", 
    54 => "010011110000000110000011111101", 55 => "010100000000000110100011111110", 
    56 => "010100010000000111000011111111", 57 => "010100100000000111100011000000", 
    58 => "010100110000001000000011000001", 59 => "010101000000001000100011000010", 
    60 => "010101010000001001000011000011", 61 => "010101100000001001100011000100", 
    62 => "010101110000001010000011000101", 63 => "010110000000001010100011000110", 
    64 => "100111010000110110000011011110", 65 => "100111100000110110100011011111", 
    66 => "100111110000110111000011100000", 67 => "101000000000110111100011100001", 
    68 => "101000010000111000000011100010", 69 => "101000100000111000100011100011", 
    70 => "101000110000111001000011100100", 71 => "101001000000111001100011100101", 
    72 => "101001010000111010000011100110", 73 => "101001100000111010100011100111", 
    74 => "101001110000111011000011101000", 75 => "101010000000111011100011101001", 
    76 => "101010010000111100000011101010", 77 => "101010100000111100100011101011", 
    78 => "101010110000111101000011101100", 79 => "101011000000111101100011101101", 
    80 => "101011010000111110000011101110", 81 => "101011100000111110100011101111", 
    82 => "101011110000111111000011110000", 83 => "101100000000111111100011110001", 
    84 => "101100010000100000000011110010", 85 => "101100100000100000100011110011", 
    86 => "101100110000100001000011110100", 87 => "101101000000100001100011110101", 
    88 => "101101010000100010000011110110", 89 => "101101100000100010100011110111", 
    90 => "101101110000100011000011111000", 91 => "101110000000100011100011111001", 
    92 => "101110010000100100000011111010", 93 => "101110100000100100100011111011", 
    94 => "101110110000100101000011111100", 95 => "101111000000100101100011111101", 
    96 => "101111010000100110000011111110", 97 => "101111100000100110100011111111", 
    98 => "101111110000100111000011000000", 99 => "100000000000100111100011000001", 
    100 => "100000010000101000000011000010", 101 => "100000100000101000100011000011", 
    102 => "100000110000101001000011000100", 103 => "100001000000101001100011000101", 
    104 => "100001010000101010000011000110", 105 => "100001100000101010100011000111", 
    106 => "100001110000101011000011001000", 107 => "100010000000101011100011001001", 
    108 => "100010010000101100000011001010", 109 => "100010100000101100100011001011", 
    110 => "100010110000101101000011001100", 111 => "100011000000101101100011001101", 
    112 => "100011010000101110000011001110", 113 => "100011100000101110100011001111", 
    114 => "100011110000101111000011010000", 115 => "100100000000101111100011010001", 
    116 => "100100010000110000000011010010", 117 => "100100100000110000100011010011", 
    118 => "100100110000110001000011010100", 119 => "100101000000110001100011010101", 
    120 => "100101010000110010000011010110", 121 => "100101100000110010100011010111", 
    122 => "100101110000110011000011011000", 123 => "100110000000110011100011011001", 
    124 => "100110010000110100000011011010", 125 => "100110100000110100100011011011", 
    126 => "100110110000110101000011011100", 127 => "100111000000110101100011011101", 
    128 => "110011010001010100100001100101", 129 => "110011100001010101000001100110", 
    130 => "110011110001010101100001100111", 131 => "110100000001010110000001101000", 
    132 => "110100010001010110100001101001", 133 => "110100100001010111000001101010", 
    134 => "110100110001010111100001101011", 135 => "110101000001011000000001101100", 
    136 => "110101010001011000100001101101", 137 => "110101100001011001000001101110", 
    138 => "110101110001011001100001101111", 139 => "110110000001011010000001110000", 
    140 => "110110010001011010100001110001", 141 => "110110100001011011000001110010", 
    142 => "110110110001011011100001110011", 143 => "110111000001011100000001110100", 
    144 => "110111010001011100100001110101", 145 => "110111100001011101000001110110", 
    146 => "110111110001011101100001110111", 147 => "111000000001011110000001111000", 
    148 => "111000010001011110100001111001", 149 => "111000100001011111000001111010", 
    150 => "111000110001011111100001111011", 151 => "111001000001000000000001111100", 
    152 => "111001010001000000100001111101", 153 => "111001100001000001000001111110", 
    154 => "111001110001000001100001111111", 155 => "111010000001000010000001000000", 
    156 => "111010010001000010100001000001", 157 => "111010100001000011000001000010", 
    158 => "111010110001000011100001000011", 159 => "111011000001000100000001000100", 
    160 => "111011010001000100100001000101", 161 => "111011100001000101000001000110", 
    162 => "111011110001000101100001000111", 163 => "111100000001000110000001001000", 
    164 => "111100010001000110100001001001", 165 => "111100100001000111000001001010", 
    166 => "111100110001000111100001001011", 167 => "111101000001001000000001001100", 
    168 => "111101010001001000100001001101", 169 => "111101100001001001000001001110", 
    170 => "111101110001001001100001001111", 171 => "111110000001001010000001010000", 
    172 => "111110010001001010100001010001", 173 => "111110100001001011000001010010", 
    174 => "111110110001001011100001010011", 175 => "111111000001001100000001010100", 
    176 => "111111010001001100100001010101", 177 => "111111100001001101000001010110", 
    178 => "111111110001001101100001010111", 179 => "110000000001001110000001011000", 
    180 => "110000010001001110100001011001", 181 => "110000100001001111000001011010", 
    182 => "110000110001001111100001011011", 183 => "110001000001010000000001011100", 
    184 => "110001010001010000100001011101", 185 => "110001100001010001000001011110", 
    186 => "110001110001010001100001011111", 187 => "110010000001010010000001100000", 
    188 => "110010010001010010100001100001", 189 => "110010100001010011000001100010", 
    190 => "110010110001010011100001100011", 191 => "110011000001010100000001100100", 
    192 => "110001000000000011100010001100", 193 => "110001010000000100000010001101", 
    194 => "110001100000000100100010001110", 195 => "110001110000000101000010001111", 
    196 => "110010000000000101100010010000", 197 => "110010010000000110000010010001", 
    198 => "110010100000000110100010010010", 199 => "110010110000000111000010010011", 
    200 => "110011000000000111100010010100", 201 => "110011010000001000000010010101", 
    202 => "110011100000001000100010010110", 203 => "110011110000001001000010010111", 
    204 => "110100000000001001100010011000", 205 => "110100010000001010000010011001", 
    206 => "110100100000001010100010011010", 207 => "110100110000001011000010011011", 
    208 => "110101000000001011100010011100", 209 => "110101010000001100000010011101", 
    210 => "110101100000001100100010011110", 211 => "110101110000001101000010011111", 
    212 => "110110000000001101100010100000", 213 => "110110010000001110000010100001", 
    214 => "110110100000001110100010100010", 215 => "110110110000001111000010100011", 
    216 => "110111000000001111100010100100", 217 => "110111010000010000000010100101", 
    218 => "110111100000010000100010100110", 219 => "110111110000010001000010100111", 
    220 => "111000000000010001100010101000", 221 => "111000010000010010000010101001", 
    222 => "111000100000010010100010101010", 223 => "111000110000010011000010101011", 
    224 => "111001000000010011100010101100", 225 => "111001010000010100000010101101", 
    226 => "111001100000010100100010101110", 227 => "111001110000010101000010101111", 
    228 => "111010000000010101100010110000", 229 => "111010010000010110000010110001", 
    230 => "111010100000010110100010110010", 231 => "111010110000010111000010110011", 
    232 => "111011000000010111100010110100", 233 => "111011010000011000000010110101", 
    234 => "111011100000011000100010110110", 235 => "111011110000011001000010110111", 
    236 => "111100000000011001100010111000", 237 => "111100010000011010000010111001", 
    238 => "111100100000011010100010111010", 239 => "111100110000011011000010111011", 
    240 => "111101000000011011100010111100", 241 => "111101010000011100000010111101", 
    242 => "111101100000011100100010111110", 243 => "111101110000011101000010111111", 
    244 => "111110000000011101100010000000", 245 => "111110010000011110000010000001", 
    246 => "111110100000011110100010000010", 247 => "111110110000011111000010000011", 
    248 => "111111000000011111100010000100", 249 => "111111010000000000000010000101", 
    250 => "111111100000000000100010000110", 251 => "111111110000000001000010000111", 
    252 => "110000000000000001100010001000", 253 => "110000010000000010000010001001", 
    254 => "110000100000000010100010001010", 255 => "110000110000000011000010001011" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity mcalcAA_23_varinxsc4 is
    generic (
        DataWidth : INTEGER := 30;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mcalcAA_23_varinxsc4 is
    component mcalcAA_23_varinxsc4_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mcalcAA_23_varinxsc4_rom_U :  component mcalcAA_23_varinxsc4_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


