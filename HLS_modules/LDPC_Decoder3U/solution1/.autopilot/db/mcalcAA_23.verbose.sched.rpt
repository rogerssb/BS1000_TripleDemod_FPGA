

================================================================
== Vivado HLS Report for 'mcalcAA_23'
================================================================
* Date:           Thu Aug 11 10:24:39 2022

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        LDPC_Decoder3U
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      5.56|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    3|    3|    2|    2| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 4
* Pipeline: 1
  Pipeline-0: II = 2, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: num_nt_read (63)  [1/1] 0.00ns
_ifconv:2  %num_nt_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %num_nt)

ST_1: tmp_s (68)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:7  %tmp_s = sext i16 %num_nt_read to i32

ST_1: varinx3_1024_23_addr (69)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:8  %varinx3_1024_23_addr = getelementptr [256 x i30]* @varinx3_1024_23, i32 0, i32 %tmp_s

ST_1: varinx3_1024_23_load (70)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:9  %varinx3_1024_23_load = load i30* %varinx3_1024_23_addr, align 4

ST_1: varinx10A_1024_a_add (82)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:21  %varinx10A_1024_a_add = getelementptr [256 x i30]* @varinx10A_1024_a, i32 0, i32 %tmp_s

ST_1: varinx10A_1024_a_loa (83)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:22  %varinx10A_1024_a_loa = load i30* %varinx10A_1024_a_add, align 4

ST_1: varinx10A_1024_b_add (88)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:27  %varinx10A_1024_b_add = getelementptr [256 x i30]* @varinx10A_1024_b, i32 0, i32 %tmp_s

ST_1: varinx10A_1024_b_loa (89)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:28  %varinx10A_1024_b_loa = load i30* %varinx10A_1024_b_add, align 4

ST_1: varinx10A_1024_c_add (94)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:33  %varinx10A_1024_c_add = getelementptr [256 x i30]* @varinx10A_1024_c, i32 0, i32 %tmp_s

ST_1: varinx10A_1024_c_loa (95)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:34  %varinx10A_1024_c_loa = load i30* %varinx10A_1024_c_add, align 4

ST_1: varinx10A_1024_d_V_a (100)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:39  %varinx10A_1024_d_V_a = getelementptr [256 x i8]* @varinx10A_1024_d_V, i32 0, i32 %tmp_s

ST_1: varinx10A_1024_d_V_l (101)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:40  %varinx10A_1024_d_V_l = load i8* %varinx10A_1024_d_V_a, align 1

ST_1: varinx10B_1024_a_add (124)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:953
_ifconv:63  %varinx10B_1024_a_add = getelementptr [256 x i30]* @varinx10B_1024_a, i32 0, i32 %tmp_s

ST_1: varinx10B_1024_a_loa (125)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:953
_ifconv:64  %varinx10B_1024_a_loa = load i30* %varinx10B_1024_a_add, align 4

ST_1: varinx10B_1024_b_add (130)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:69  %varinx10B_1024_b_add = getelementptr [256 x i30]* @varinx10B_1024_b, i32 0, i32 %tmp_s

ST_1: varinx10B_1024_b_loa (131)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:70  %varinx10B_1024_b_loa = load i30* %varinx10B_1024_b_add, align 4

ST_1: varinx10B_1024_c_add (136)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:75  %varinx10B_1024_c_add = getelementptr [256 x i30]* @varinx10B_1024_c, i32 0, i32 %tmp_s

ST_1: varinx10B_1024_c_loa (137)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:76  %varinx10B_1024_c_loa = load i30* %varinx10B_1024_c_add, align 4

ST_1: varinx10B_1024_d_V_a (142)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:81  %varinx10B_1024_d_V_a = getelementptr [256 x i8]* @varinx10B_1024_d_V, i32 0, i32 %tmp_s

ST_1: varinx10B_1024_d_V_l (143)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:82  %varinx10B_1024_d_V_l = load i8* %varinx10B_1024_d_V_a, align 1

ST_1: varinx3_4096_23_addr (166)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:977
_ifconv:105  %varinx3_4096_23_addr = getelementptr [1024 x i32]* @varinx3_4096_23, i32 0, i32 %tmp_s

ST_1: varinx3_4096_23_load (167)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:977
_ifconv:106  %varinx3_4096_23_load = load i32* %varinx3_4096_23_addr, align 4

ST_1: varinx10A_4096_a_add (176)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:986
_ifconv:115  %varinx10A_4096_a_add = getelementptr [1024 x i32]* @varinx10A_4096_a, i32 0, i32 %tmp_s

ST_1: varinx10A_4096_a_loa (177)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:986
_ifconv:116  %varinx10A_4096_a_loa = load i32* %varinx10A_4096_a_add, align 4

ST_1: varinx10A_4096_b_add (181)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:989
_ifconv:120  %varinx10A_4096_b_add = getelementptr [1024 x i32]* @varinx10A_4096_b, i32 0, i32 %tmp_s

ST_1: varinx10A_4096_b_loa (182)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:989
_ifconv:121  %varinx10A_4096_b_loa = load i32* %varinx10A_4096_b_add, align 4

ST_1: varinx10A_4096_c_add (186)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:992
_ifconv:125  %varinx10A_4096_c_add = getelementptr [1024 x i32]* @varinx10A_4096_c, i32 0, i32 %tmp_s

ST_1: varinx10A_4096_c_loa (187)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:992
_ifconv:126  %varinx10A_4096_c_loa = load i32* %varinx10A_4096_c_add, align 4

ST_1: varinx10A_4096_d_V_a (191)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:995
_ifconv:130  %varinx10A_4096_d_V_a = getelementptr [1024 x i10]* @varinx10A_4096_d_V, i32 0, i32 %tmp_s

ST_1: varinx10A_4096_d_V_l (192)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:995
_ifconv:131  %varinx10A_4096_d_V_l = load i10* %varinx10A_4096_d_V_a, align 2

ST_1: varinx10B_4096_a_add (210)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1008
_ifconv:149  %varinx10B_4096_a_add = getelementptr [1024 x i32]* @varinx10B_4096_a, i32 0, i32 %tmp_s

ST_1: varinx10B_4096_a_loa (211)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1008
_ifconv:150  %varinx10B_4096_a_loa = load i32* %varinx10B_4096_a_add, align 4

ST_1: varinx10B_4096_b_add (215)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1011
_ifconv:154  %varinx10B_4096_b_add = getelementptr [1024 x i32]* @varinx10B_4096_b, i32 0, i32 %tmp_s

ST_1: varinx10B_4096_b_loa (216)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1011
_ifconv:155  %varinx10B_4096_b_loa = load i32* %varinx10B_4096_b_add, align 4

ST_1: varinx10B_4096_c_add (220)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1014
_ifconv:159  %varinx10B_4096_c_add = getelementptr [1024 x i32]* @varinx10B_4096_c, i32 0, i32 %tmp_s

ST_1: varinx10B_4096_c_loa (221)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1014
_ifconv:160  %varinx10B_4096_c_loa = load i32* %varinx10B_4096_c_add, align 4

ST_1: varinx10B_4096_d_V_a (225)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1017
_ifconv:164  %varinx10B_4096_d_V_a = getelementptr [1024 x i10]* @varinx10B_4096_d_V, i32 0, i32 %tmp_s

ST_1: varinx10B_4096_d_V_l (226)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1017
_ifconv:165  %varinx10B_4096_d_V_l = load i10* %varinx10B_4096_d_V_a, align 2

ST_1: SpEtaPrev_addr (354)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1048
_ifconv:293  %SpEtaPrev_addr = getelementptr [2048 x i32]* @SpEtaPrev, i32 0, i32 %tmp_s

ST_1: SpEtaPrev_load (355)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1048
_ifconv:294  %SpEtaPrev_load = load i32* %SpEtaPrev_addr, align 4


 <State 2>: 5.56ns
ST_2: num_ntB_read (61)  [1/1] 0.00ns
_ifconv:0  %num_ntB_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %num_ntB)

ST_2: num_ntA_read (62)  [1/1] 0.00ns
_ifconv:1  %num_ntA_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %num_ntA)

ST_2: inx1 (65)  [1/1] 1.46ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:916
_ifconv:4  %inx1 = add i16 1, %num_nt_read

ST_2: numb_load (66)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:5  %numb_load = load i16* @numb, align 2

ST_2: tmp (67)  [1/1] 1.55ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:6  %tmp = icmp eq i16 %numb_load, 1536

ST_2: varinx3_1024_23_load (70)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:9  %varinx3_1024_23_load = load i30* %varinx3_1024_23_addr, align 4

ST_2: tmp_793 (71)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:10  %tmp_793 = trunc i30 %varinx3_1024_23_load to i11

ST_2: varinx3_1024_23_inx2_1_1 (72)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:923
_ifconv:11  %varinx3_1024_23_inx2_1_1 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx3_1024_23_load, i32 11, i32 21)

ST_2: tmp_794 (73)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:12  %tmp_794 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx3_1024_23_load, i32 22, i32 29)

ST_2: varinx3_1024_23_inx3 (74)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:13  %varinx3_1024_23_inx3 = zext i8 %tmp_794 to i10

ST_2: tmp_708 (75)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:14  %tmp_708 = sext i16 %inx1 to i32

ST_2: varinx3_1024_23_addr_1 (76)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:15  %varinx3_1024_23_addr_1 = getelementptr [256 x i30]* @varinx3_1024_23, i32 0, i32 %tmp_708

ST_2: varinx3_1024_23_load_1 (77)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:16  %varinx3_1024_23_load_1 = load i30* %varinx3_1024_23_addr_1, align 4

ST_2: varinx10A_1024_a_loa (83)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:22  %varinx10A_1024_a_loa = load i30* %varinx10A_1024_a_add, align 4

ST_2: tmp_797 (84)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:23  %tmp_797 = trunc i30 %varinx10A_1024_a_loa to i11

ST_2: varinx10A_1024_a_inx_5 (85)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:932
_ifconv:24  %varinx10A_1024_a_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10A_1024_a_loa, i32 11, i32 21)

ST_2: tmp_798 (86)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:25  %tmp_798 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10A_1024_a_loa, i32 22, i32 29)

ST_2: varinx10A_1024_a_inx (87)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:26  %varinx10A_1024_a_inx = zext i8 %tmp_798 to i10

ST_2: varinx10A_1024_b_loa (89)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:28  %varinx10A_1024_b_loa = load i30* %varinx10A_1024_b_add, align 4

ST_2: tmp_799 (90)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:29  %tmp_799 = trunc i30 %varinx10A_1024_b_loa to i11

ST_2: varinx10A_1024_b_inx_5 (91)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:935
_ifconv:30  %varinx10A_1024_b_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10A_1024_b_loa, i32 11, i32 21)

ST_2: tmp_800 (92)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:31  %tmp_800 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10A_1024_b_loa, i32 22, i32 29)

ST_2: varinx10A_1024_b_inx (93)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:32  %varinx10A_1024_b_inx = zext i8 %tmp_800 to i10

ST_2: varinx10A_1024_c_loa (95)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:34  %varinx10A_1024_c_loa = load i30* %varinx10A_1024_c_add, align 4

ST_2: tmp_801 (96)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:35  %tmp_801 = trunc i30 %varinx10A_1024_c_loa to i11

ST_2: varinx10A_1024_c_inx_5 (97)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:938
_ifconv:36  %varinx10A_1024_c_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10A_1024_c_loa, i32 11, i32 21)

ST_2: tmp_802 (98)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:37  %tmp_802 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10A_1024_c_loa, i32 22, i32 29)

ST_2: varinx10A_1024_c_inx (99)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:38  %varinx10A_1024_c_inx = zext i8 %tmp_802 to i10

ST_2: varinx10A_1024_d_V_l (101)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:40  %varinx10A_1024_d_V_l = load i8* %varinx10A_1024_d_V_a, align 1

ST_2: varinx10A_1024_d_V_l_1 (102)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:41  %varinx10A_1024_d_V_l_1 = zext i8 %varinx10A_1024_d_V_l to i10

ST_2: varinx10A_1024_a_add_1 (103)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:942
_ifconv:42  %varinx10A_1024_a_add_1 = getelementptr [256 x i30]* @varinx10A_1024_a, i32 0, i32 %tmp_708

ST_2: varinx10A_1024_a_loa_1 (104)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:942
_ifconv:43  %varinx10A_1024_a_loa_1 = load i30* %varinx10A_1024_a_add_1, align 4

ST_2: varinx10A_1024_b_add_1 (109)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:48  %varinx10A_1024_b_add_1 = getelementptr [256 x i30]* @varinx10A_1024_b, i32 0, i32 %tmp_708

ST_2: varinx10A_1024_b_loa_1 (110)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:49  %varinx10A_1024_b_loa_1 = load i30* %varinx10A_1024_b_add_1, align 4

ST_2: varinx10A_1024_c_add_1 (115)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:54  %varinx10A_1024_c_add_1 = getelementptr [256 x i30]* @varinx10A_1024_c, i32 0, i32 %tmp_708

ST_2: varinx10A_1024_c_loa_1 (116)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:55  %varinx10A_1024_c_loa_1 = load i30* %varinx10A_1024_c_add_1, align 4

ST_2: varinx10A_1024_d_V_a_1 (121)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:60  %varinx10A_1024_d_V_a_1 = getelementptr [256 x i8]* @varinx10A_1024_d_V, i32 0, i32 %tmp_708

ST_2: varinx10A_1024_d_V_l_2 (122)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:61  %varinx10A_1024_d_V_l_2 = load i8* %varinx10A_1024_d_V_a_1, align 1

ST_2: varinx10B_1024_a_loa (125)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:953
_ifconv:64  %varinx10B_1024_a_loa = load i30* %varinx10B_1024_a_add, align 4

ST_2: tmp_809 (126)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:953
_ifconv:65  %tmp_809 = trunc i30 %varinx10B_1024_a_loa to i11

ST_2: varinx10B_1024_a_inx_5 (127)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:954
_ifconv:66  %varinx10B_1024_a_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10B_1024_a_loa, i32 11, i32 21)

ST_2: tmp_810 (128)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:67  %tmp_810 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10B_1024_a_loa, i32 22, i32 29)

ST_2: varinx10B_1024_a_inx (129)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:68  %varinx10B_1024_a_inx = zext i8 %tmp_810 to i10

ST_2: varinx10B_1024_b_loa (131)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:70  %varinx10B_1024_b_loa = load i30* %varinx10B_1024_b_add, align 4

ST_2: tmp_811 (132)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:71  %tmp_811 = trunc i30 %varinx10B_1024_b_loa to i11

ST_2: varinx10B_1024_b_inx_5 (133)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:957
_ifconv:72  %varinx10B_1024_b_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10B_1024_b_loa, i32 11, i32 21)

ST_2: tmp_812 (134)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:73  %tmp_812 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10B_1024_b_loa, i32 22, i32 29)

ST_2: varinx10B_1024_b_inx (135)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:74  %varinx10B_1024_b_inx = zext i8 %tmp_812 to i10

ST_2: varinx10B_1024_c_loa (137)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:76  %varinx10B_1024_c_loa = load i30* %varinx10B_1024_c_add, align 4

ST_2: tmp_813 (138)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:77  %tmp_813 = trunc i30 %varinx10B_1024_c_loa to i11

ST_2: varinx10B_1024_c_inx_5 (139)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:960
_ifconv:78  %varinx10B_1024_c_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10B_1024_c_loa, i32 11, i32 21)

ST_2: tmp_814 (140)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:79  %tmp_814 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10B_1024_c_loa, i32 22, i32 29)

ST_2: varinx10B_1024_c_inx (141)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:80  %varinx10B_1024_c_inx = zext i8 %tmp_814 to i10

ST_2: varinx10B_1024_d_V_l (143)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:82  %varinx10B_1024_d_V_l = load i8* %varinx10B_1024_d_V_a, align 1

ST_2: varinx10B_1024_d_V_l_1 (144)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:83  %varinx10B_1024_d_V_l_1 = zext i8 %varinx10B_1024_d_V_l to i10

ST_2: varinx10B_1024_a_add_1 (145)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:964
_ifconv:84  %varinx10B_1024_a_add_1 = getelementptr [256 x i30]* @varinx10B_1024_a, i32 0, i32 %tmp_708

ST_2: varinx10B_1024_a_loa_1 (146)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:964
_ifconv:85  %varinx10B_1024_a_loa_1 = load i30* %varinx10B_1024_a_add_1, align 4

ST_2: varinx10B_1024_b_add_1 (151)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:90  %varinx10B_1024_b_add_1 = getelementptr [256 x i30]* @varinx10B_1024_b, i32 0, i32 %tmp_708

ST_2: varinx10B_1024_b_loa_1 (152)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:91  %varinx10B_1024_b_loa_1 = load i30* %varinx10B_1024_b_add_1, align 4

ST_2: varinx10B_1024_c_add_1 (157)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:96  %varinx10B_1024_c_add_1 = getelementptr [256 x i30]* @varinx10B_1024_c, i32 0, i32 %tmp_708

ST_2: varinx10B_1024_c_loa_1 (158)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:97  %varinx10B_1024_c_loa_1 = load i30* %varinx10B_1024_c_add_1, align 4

ST_2: varinx10B_1024_d_V_a_1 (163)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:102  %varinx10B_1024_d_V_a_1 = getelementptr [256 x i8]* @varinx10B_1024_d_V, i32 0, i32 %tmp_708

ST_2: varinx10B_1024_d_V_l_2 (164)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:103  %varinx10B_1024_d_V_l_2 = load i8* %varinx10B_1024_d_V_a_1, align 1

ST_2: varinx3_4096_23_load (167)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:977
_ifconv:106  %varinx3_4096_23_load = load i32* %varinx3_4096_23_addr, align 4

ST_2: tmp_821 (168)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:977
_ifconv:107  %tmp_821 = trunc i32 %varinx3_4096_23_load to i11

ST_2: varinx3_4096_23_inx2_1_1 (169)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:978
_ifconv:108  %varinx3_4096_23_inx2_1_1 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx3_4096_23_load, i32 11, i32 21)

ST_2: tmp_758 (170)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:979
_ifconv:109  %tmp_758 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx3_4096_23_load, i32 22, i32 31)

ST_2: varinx3_4096_23_addr_1 (171)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:981
_ifconv:110  %varinx3_4096_23_addr_1 = getelementptr [1024 x i32]* @varinx3_4096_23, i32 0, i32 %tmp_708

ST_2: varinx3_4096_23_load_1 (172)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:981
_ifconv:111  %varinx3_4096_23_load_1 = load i32* %varinx3_4096_23_addr_1, align 4

ST_2: varinx10A_4096_a_loa (177)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:986
_ifconv:116  %varinx10A_4096_a_loa = load i32* %varinx10A_4096_a_add, align 4

ST_2: tmp_823 (178)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:986
_ifconv:117  %tmp_823 = trunc i32 %varinx10A_4096_a_loa to i11

ST_2: varinx10A_4096_a_inx_5 (179)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:987
_ifconv:118  %varinx10A_4096_a_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10A_4096_a_loa, i32 11, i32 21)

ST_2: tmp_760 (180)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:988
_ifconv:119  %tmp_760 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10A_4096_a_loa, i32 22, i32 31)

ST_2: varinx10A_4096_b_loa (182)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:989
_ifconv:121  %varinx10A_4096_b_loa = load i32* %varinx10A_4096_b_add, align 4

ST_2: tmp_824 (183)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:989
_ifconv:122  %tmp_824 = trunc i32 %varinx10A_4096_b_loa to i11

ST_2: varinx10A_4096_b_inx_5 (184)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:990
_ifconv:123  %varinx10A_4096_b_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10A_4096_b_loa, i32 11, i32 21)

ST_2: tmp_761 (185)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:991
_ifconv:124  %tmp_761 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10A_4096_b_loa, i32 22, i32 31)

ST_2: varinx10A_4096_c_loa (187)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:992
_ifconv:126  %varinx10A_4096_c_loa = load i32* %varinx10A_4096_c_add, align 4

ST_2: tmp_825 (188)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:992
_ifconv:127  %tmp_825 = trunc i32 %varinx10A_4096_c_loa to i11

ST_2: varinx10A_4096_c_inx_5 (189)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:993
_ifconv:128  %varinx10A_4096_c_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10A_4096_c_loa, i32 11, i32 21)

ST_2: tmp_762 (190)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:994
_ifconv:129  %tmp_762 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10A_4096_c_loa, i32 22, i32 31)

ST_2: varinx10A_4096_d_V_l (192)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:995
_ifconv:131  %varinx10A_4096_d_V_l = load i10* %varinx10A_4096_d_V_a, align 2

ST_2: varinx10A_4096_a_add_1 (193)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:997
_ifconv:132  %varinx10A_4096_a_add_1 = getelementptr [1024 x i32]* @varinx10A_4096_a, i32 0, i32 %tmp_708

ST_2: varinx10A_4096_a_loa_1 (194)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:997
_ifconv:133  %varinx10A_4096_a_loa_1 = load i32* %varinx10A_4096_a_add_1, align 4

ST_2: varinx10A_4096_b_add_1 (198)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1000
_ifconv:137  %varinx10A_4096_b_add_1 = getelementptr [1024 x i32]* @varinx10A_4096_b, i32 0, i32 %tmp_708

ST_2: varinx10A_4096_b_loa_1 (199)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1000
_ifconv:138  %varinx10A_4096_b_loa_1 = load i32* %varinx10A_4096_b_add_1, align 4

ST_2: varinx10A_4096_c_add_1 (203)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1003
_ifconv:142  %varinx10A_4096_c_add_1 = getelementptr [1024 x i32]* @varinx10A_4096_c, i32 0, i32 %tmp_708

ST_2: varinx10A_4096_c_loa_1 (204)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1003
_ifconv:143  %varinx10A_4096_c_loa_1 = load i32* %varinx10A_4096_c_add_1, align 4

ST_2: varinx10A_4096_d_V_a_1 (208)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1006
_ifconv:147  %varinx10A_4096_d_V_a_1 = getelementptr [1024 x i10]* @varinx10A_4096_d_V, i32 0, i32 %tmp_708

ST_2: varinx10A_4096_d_V_l_1 (209)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1006
_ifconv:148  %varinx10A_4096_d_V_l_1 = load i10* %varinx10A_4096_d_V_a_1, align 2

ST_2: varinx10B_4096_a_loa (211)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1008
_ifconv:150  %varinx10B_4096_a_loa = load i32* %varinx10B_4096_a_add, align 4

ST_2: tmp_829 (212)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1008
_ifconv:151  %tmp_829 = trunc i32 %varinx10B_4096_a_loa to i11

ST_2: varinx10B_4096_a_inx_5 (213)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1009
_ifconv:152  %varinx10B_4096_a_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10B_4096_a_loa, i32 11, i32 21)

ST_2: tmp_766 (214)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1010
_ifconv:153  %tmp_766 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10B_4096_a_loa, i32 22, i32 31)

ST_2: varinx10B_4096_b_loa (216)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1011
_ifconv:155  %varinx10B_4096_b_loa = load i32* %varinx10B_4096_b_add, align 4

ST_2: tmp_830 (217)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1011
_ifconv:156  %tmp_830 = trunc i32 %varinx10B_4096_b_loa to i11

ST_2: varinx10B_4096_b_inx_5 (218)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1012
_ifconv:157  %varinx10B_4096_b_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10B_4096_b_loa, i32 11, i32 21)

ST_2: tmp_767 (219)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1013
_ifconv:158  %tmp_767 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10B_4096_b_loa, i32 22, i32 31)

ST_2: varinx10B_4096_c_loa (221)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1014
_ifconv:160  %varinx10B_4096_c_loa = load i32* %varinx10B_4096_c_add, align 4

ST_2: tmp_831 (222)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1014
_ifconv:161  %tmp_831 = trunc i32 %varinx10B_4096_c_loa to i11

ST_2: varinx10B_4096_c_inx_5 (223)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1015
_ifconv:162  %varinx10B_4096_c_inx_5 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10B_4096_c_loa, i32 11, i32 21)

ST_2: tmp_768 (224)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1016
_ifconv:163  %tmp_768 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10B_4096_c_loa, i32 22, i32 31)

ST_2: varinx10B_4096_d_V_l (226)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1017
_ifconv:165  %varinx10B_4096_d_V_l = load i10* %varinx10B_4096_d_V_a, align 2

ST_2: varinx10B_4096_a_add_1 (227)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1019
_ifconv:166  %varinx10B_4096_a_add_1 = getelementptr [1024 x i32]* @varinx10B_4096_a, i32 0, i32 %tmp_708

ST_2: varinx10B_4096_a_loa_1 (228)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1019
_ifconv:167  %varinx10B_4096_a_loa_1 = load i32* %varinx10B_4096_a_add_1, align 4

ST_2: varinx10B_4096_b_add_1 (232)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1022
_ifconv:171  %varinx10B_4096_b_add_1 = getelementptr [1024 x i32]* @varinx10B_4096_b, i32 0, i32 %tmp_708

ST_2: varinx10B_4096_b_loa_1 (233)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1022
_ifconv:172  %varinx10B_4096_b_loa_1 = load i32* %varinx10B_4096_b_add_1, align 4

ST_2: varinx10B_4096_c_add_1 (237)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1025
_ifconv:176  %varinx10B_4096_c_add_1 = getelementptr [1024 x i32]* @varinx10B_4096_c, i32 0, i32 %tmp_708

ST_2: varinx10B_4096_c_loa_1 (238)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1025
_ifconv:177  %varinx10B_4096_c_loa_1 = load i32* %varinx10B_4096_c_add_1, align 4

ST_2: varinx10B_4096_d_V_a_1 (242)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1028
_ifconv:181  %varinx10B_4096_d_V_a_1 = getelementptr [1024 x i10]* @varinx10B_4096_d_V, i32 0, i32 %tmp_708

ST_2: varinx10B_4096_d_V_l_1 (243)  [2/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1028
_ifconv:182  %varinx10B_4096_d_V_l_1 = load i10* %varinx10B_4096_d_V_a_1, align 2

ST_2: a_0_in_in_in (244)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:183  %a_0_in_in_in = select i1 %tmp, i11 %tmp_793, i11 %tmp_821

ST_2: b_0_in_in_in (245)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:184  %b_0_in_in_in = select i1 %tmp, i11 %varinx3_1024_23_inx2_1_1, i11 %varinx3_4096_23_inx2_1_1

ST_2: c_0_in_in_in (246)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:185  %c_0_in_in_in = select i1 %tmp, i10 %varinx3_1024_23_inx3, i10 %tmp_758

ST_2: a18A_0_in_in_in (250)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:189  %a18A_0_in_in_in = select i1 %tmp, i11 %tmp_797, i11 %tmp_823

ST_2: b18A_0_in_in_in (251)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:190  %b18A_0_in_in_in = select i1 %tmp, i11 %varinx10A_1024_a_inx_5, i11 %varinx10A_4096_a_inx_5

ST_2: c18A_0_in_in_in (252)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:191  %c18A_0_in_in_in = select i1 %tmp, i10 %varinx10A_1024_a_inx, i10 %tmp_760

ST_2: d18A_0_in_in_in (253)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:192  %d18A_0_in_in_in = select i1 %tmp, i11 %tmp_799, i11 %tmp_824

ST_2: e18A_0_in_in_in (254)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:193  %e18A_0_in_in_in = select i1 %tmp, i11 %varinx10A_1024_b_inx_5, i11 %varinx10A_4096_b_inx_5

ST_2: f18A_0_in_in_in (255)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:194  %f18A_0_in_in_in = select i1 %tmp, i10 %varinx10A_1024_b_inx, i10 %tmp_761

ST_2: g18A_0_in_in_in (256)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:195  %g18A_0_in_in_in = select i1 %tmp, i11 %tmp_801, i11 %tmp_825

ST_2: h18A_0_in_in_in (257)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:196  %h18A_0_in_in_in = select i1 %tmp, i11 %varinx10A_1024_c_inx_5, i11 %varinx10A_4096_c_inx_5

ST_2: i18A_0_in_in_in (258)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:197  %i18A_0_in_in_in = select i1 %tmp, i10 %varinx10A_1024_c_inx, i10 %tmp_762

ST_2: j18A_0_in (259)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:198  %j18A_0_in = select i1 %tmp, i10 %varinx10A_1024_d_V_l_1, i10 %varinx10A_4096_d_V_l

ST_2: a18B_0_in_in_in (270)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:209  %a18B_0_in_in_in = select i1 %tmp, i11 %tmp_809, i11 %tmp_829

ST_2: b18B_0_in_in_in (271)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:210  %b18B_0_in_in_in = select i1 %tmp, i11 %varinx10B_1024_a_inx_5, i11 %varinx10B_4096_a_inx_5

ST_2: c18B_0_in_in_in (272)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:211  %c18B_0_in_in_in = select i1 %tmp, i10 %varinx10B_1024_a_inx, i10 %tmp_766

ST_2: d18B_0_in_in_in (273)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:212  %d18B_0_in_in_in = select i1 %tmp, i11 %tmp_811, i11 %tmp_830

ST_2: e18B_0_in_in_in (274)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:213  %e18B_0_in_in_in = select i1 %tmp, i11 %varinx10B_1024_b_inx_5, i11 %varinx10B_4096_b_inx_5

ST_2: f18B_0_in_in_in (275)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:214  %f18B_0_in_in_in = select i1 %tmp, i10 %varinx10B_1024_b_inx, i10 %tmp_767

ST_2: g18B_0_in_in_in (276)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:215  %g18B_0_in_in_in = select i1 %tmp, i11 %tmp_813, i11 %tmp_831

ST_2: h18B_0_in_in_in (277)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:216  %h18B_0_in_in_in = select i1 %tmp, i11 %varinx10B_1024_c_inx_5, i11 %varinx10B_4096_c_inx_5

ST_2: i18B_0_in_in_in (278)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:217  %i18B_0_in_in_in = select i1 %tmp, i10 %varinx10B_1024_c_inx, i10 %tmp_768

ST_2: j18B_0_in (279)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:218  %j18B_0_in = select i1 %tmp, i10 %varinx10B_1024_d_V_l_1, i10 %varinx10B_4096_d_V_l

ST_2: b (334)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:923
_ifconv:273  %b = sext i11 %b_0_in_in_in to i16

ST_2: tmp_710 (339)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1041
_ifconv:278  %tmp_710 = zext i16 %b to i32

ST_2: Lam_buf6_addr (340)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1041
_ifconv:279  %Lam_buf6_addr = getelementptr inbounds [1024 x i16]* @Lam_buf6, i32 0, i32 %tmp_710

ST_2: Lam_buf6_load (341)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1041
_ifconv:280  %Lam_buf6_load = load i16* %Lam_buf6_addr, align 2

ST_2: tmp_711 (342)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1042
_ifconv:281  %tmp_711 = zext i10 %c_0_in_in_in to i32

ST_2: Lam_buf6_addr_1 (343)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1042
_ifconv:282  %Lam_buf6_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_buf6, i32 0, i32 %tmp_711

ST_2: Lam_buf6_load_1 (344)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1042
_ifconv:283  %Lam_buf6_load_1 = load i16* %Lam_buf6_addr_1, align 2

ST_2: SpEtaPrev_load (355)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1048
_ifconv:294  %SpEtaPrev_load = load i32* %SpEtaPrev_addr, align 4

ST_2: tmp_835 (356)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1048
_ifconv:295  %tmp_835 = trunc i32 %SpEtaPrev_load to i8

ST_2: SpEtaPrev_two_V_load (357)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1049
_ifconv:296  %SpEtaPrev_two_V_load = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrev_load, i32 8, i32 15)

ST_2: SpEtaPrev_three_V_lo (358)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1050
_ifconv:297  %SpEtaPrev_three_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrev_load, i32 16, i32 23)


 <State 3>: 5.56ns
ST_3: varinx3_1024_23_load_1 (77)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:16  %varinx3_1024_23_load_1 = load i30* %varinx3_1024_23_addr_1, align 4

ST_3: tmp_795 (78)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:17  %tmp_795 = trunc i30 %varinx3_1024_23_load_1 to i11

ST_3: varinx3_1024_23_inx2_1 (79)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:927
_ifconv:18  %varinx3_1024_23_inx2_1 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx3_1024_23_load_1, i32 11, i32 21)

ST_3: tmp_796 (80)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:19  %tmp_796 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx3_1024_23_load_1, i32 22, i32 29)

ST_3: varinx3_1024_23_inx3_1 (81)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:20  %varinx3_1024_23_inx3_1 = zext i8 %tmp_796 to i10

ST_3: varinx10A_1024_a_loa_1 (104)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:942
_ifconv:43  %varinx10A_1024_a_loa_1 = load i30* %varinx10A_1024_a_add_1, align 4

ST_3: tmp_803 (105)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:942
_ifconv:44  %tmp_803 = trunc i30 %varinx10A_1024_a_loa_1 to i11

ST_3: varinx10A_1024_a_inx_8 (106)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:943
_ifconv:45  %varinx10A_1024_a_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10A_1024_a_loa_1, i32 11, i32 21)

ST_3: tmp_804 (107)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:46  %tmp_804 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10A_1024_a_loa_1, i32 22, i32 29)

ST_3: varinx10A_1024_a_inx_3 (108)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:47  %varinx10A_1024_a_inx_3 = zext i8 %tmp_804 to i10

ST_3: varinx10A_1024_b_loa_1 (110)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:49  %varinx10A_1024_b_loa_1 = load i30* %varinx10A_1024_b_add_1, align 4

ST_3: tmp_805 (111)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:50  %tmp_805 = trunc i30 %varinx10A_1024_b_loa_1 to i11

ST_3: varinx10A_1024_b_inx_8 (112)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:946
_ifconv:51  %varinx10A_1024_b_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10A_1024_b_loa_1, i32 11, i32 21)

ST_3: tmp_806 (113)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:52  %tmp_806 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10A_1024_b_loa_1, i32 22, i32 29)

ST_3: varinx10A_1024_b_inx_3 (114)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:53  %varinx10A_1024_b_inx_3 = zext i8 %tmp_806 to i10

ST_3: varinx10A_1024_c_loa_1 (116)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:55  %varinx10A_1024_c_loa_1 = load i30* %varinx10A_1024_c_add_1, align 4

ST_3: tmp_807 (117)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:56  %tmp_807 = trunc i30 %varinx10A_1024_c_loa_1 to i11

ST_3: varinx10A_1024_c_inx_8 (118)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:949
_ifconv:57  %varinx10A_1024_c_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10A_1024_c_loa_1, i32 11, i32 21)

ST_3: tmp_808 (119)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:58  %tmp_808 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10A_1024_c_loa_1, i32 22, i32 29)

ST_3: varinx10A_1024_c_inx_3 (120)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:59  %varinx10A_1024_c_inx_3 = zext i8 %tmp_808 to i10

ST_3: varinx10A_1024_d_V_l_2 (122)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:61  %varinx10A_1024_d_V_l_2 = load i8* %varinx10A_1024_d_V_a_1, align 1

ST_3: varinx10A_1024_d_V_l_3 (123)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:62  %varinx10A_1024_d_V_l_3 = zext i8 %varinx10A_1024_d_V_l_2 to i10

ST_3: varinx10B_1024_a_loa_1 (146)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:964
_ifconv:85  %varinx10B_1024_a_loa_1 = load i30* %varinx10B_1024_a_add_1, align 4

ST_3: tmp_815 (147)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:964
_ifconv:86  %tmp_815 = trunc i30 %varinx10B_1024_a_loa_1 to i11

ST_3: varinx10B_1024_a_inx_8 (148)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:965
_ifconv:87  %varinx10B_1024_a_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10B_1024_a_loa_1, i32 11, i32 21)

ST_3: tmp_816 (149)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:88  %tmp_816 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10B_1024_a_loa_1, i32 22, i32 29)

ST_3: varinx10B_1024_a_inx_3 (150)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:89  %varinx10B_1024_a_inx_3 = zext i8 %tmp_816 to i10

ST_3: varinx10B_1024_b_loa_1 (152)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:91  %varinx10B_1024_b_loa_1 = load i30* %varinx10B_1024_b_add_1, align 4

ST_3: tmp_817 (153)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:92  %tmp_817 = trunc i30 %varinx10B_1024_b_loa_1 to i11

ST_3: varinx10B_1024_b_inx_8 (154)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:968
_ifconv:93  %varinx10B_1024_b_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10B_1024_b_loa_1, i32 11, i32 21)

ST_3: tmp_818 (155)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:94  %tmp_818 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10B_1024_b_loa_1, i32 22, i32 29)

ST_3: varinx10B_1024_b_inx_3 (156)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:95  %varinx10B_1024_b_inx_3 = zext i8 %tmp_818 to i10

ST_3: varinx10B_1024_c_loa_1 (158)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:97  %varinx10B_1024_c_loa_1 = load i30* %varinx10B_1024_c_add_1, align 4

ST_3: tmp_819 (159)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:98  %tmp_819 = trunc i30 %varinx10B_1024_c_loa_1 to i11

ST_3: varinx10B_1024_c_inx_8 (160)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:971
_ifconv:99  %varinx10B_1024_c_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i30.i32.i32(i30 %varinx10B_1024_c_loa_1, i32 11, i32 21)

ST_3: tmp_820 (161)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:100  %tmp_820 = call i8 @_ssdm_op_PartSelect.i8.i30.i32.i32(i30 %varinx10B_1024_c_loa_1, i32 22, i32 29)

ST_3: varinx10B_1024_c_inx_3 (162)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:101  %varinx10B_1024_c_inx_3 = zext i8 %tmp_820 to i10

ST_3: varinx10B_1024_d_V_l_2 (164)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:103  %varinx10B_1024_d_V_l_2 = load i8* %varinx10B_1024_d_V_a_1, align 1

ST_3: varinx10B_1024_d_V_l_3 (165)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:104  %varinx10B_1024_d_V_l_3 = zext i8 %varinx10B_1024_d_V_l_2 to i10

ST_3: varinx3_4096_23_load_1 (172)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:981
_ifconv:111  %varinx3_4096_23_load_1 = load i32* %varinx3_4096_23_addr_1, align 4

ST_3: tmp_822 (173)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:981
_ifconv:112  %tmp_822 = trunc i32 %varinx3_4096_23_load_1 to i11

ST_3: varinx3_4096_23_inx2_1 (174)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:982
_ifconv:113  %varinx3_4096_23_inx2_1 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx3_4096_23_load_1, i32 11, i32 21)

ST_3: tmp_759 (175)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:983
_ifconv:114  %tmp_759 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx3_4096_23_load_1, i32 22, i32 31)

ST_3: varinx10A_4096_a_loa_1 (194)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:997
_ifconv:133  %varinx10A_4096_a_loa_1 = load i32* %varinx10A_4096_a_add_1, align 4

ST_3: tmp_826 (195)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:997
_ifconv:134  %tmp_826 = trunc i32 %varinx10A_4096_a_loa_1 to i11

ST_3: varinx10A_4096_a_inx_8 (196)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:998
_ifconv:135  %varinx10A_4096_a_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10A_4096_a_loa_1, i32 11, i32 21)

ST_3: tmp_763 (197)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:999
_ifconv:136  %tmp_763 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10A_4096_a_loa_1, i32 22, i32 31)

ST_3: varinx10A_4096_b_loa_1 (199)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1000
_ifconv:138  %varinx10A_4096_b_loa_1 = load i32* %varinx10A_4096_b_add_1, align 4

ST_3: tmp_827 (200)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1000
_ifconv:139  %tmp_827 = trunc i32 %varinx10A_4096_b_loa_1 to i11

ST_3: varinx10A_4096_b_inx_8 (201)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1001
_ifconv:140  %varinx10A_4096_b_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10A_4096_b_loa_1, i32 11, i32 21)

ST_3: tmp_764 (202)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1002
_ifconv:141  %tmp_764 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10A_4096_b_loa_1, i32 22, i32 31)

ST_3: varinx10A_4096_c_loa_1 (204)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1003
_ifconv:143  %varinx10A_4096_c_loa_1 = load i32* %varinx10A_4096_c_add_1, align 4

ST_3: tmp_828 (205)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1003
_ifconv:144  %tmp_828 = trunc i32 %varinx10A_4096_c_loa_1 to i11

ST_3: varinx10A_4096_c_inx_8 (206)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1004
_ifconv:145  %varinx10A_4096_c_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10A_4096_c_loa_1, i32 11, i32 21)

ST_3: tmp_765 (207)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1005
_ifconv:146  %tmp_765 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10A_4096_c_loa_1, i32 22, i32 31)

ST_3: varinx10A_4096_d_V_l_1 (209)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1006
_ifconv:148  %varinx10A_4096_d_V_l_1 = load i10* %varinx10A_4096_d_V_a_1, align 2

ST_3: varinx10B_4096_a_loa_1 (228)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1019
_ifconv:167  %varinx10B_4096_a_loa_1 = load i32* %varinx10B_4096_a_add_1, align 4

ST_3: tmp_832 (229)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1019
_ifconv:168  %tmp_832 = trunc i32 %varinx10B_4096_a_loa_1 to i11

ST_3: varinx10B_4096_a_inx_8 (230)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1020
_ifconv:169  %varinx10B_4096_a_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10B_4096_a_loa_1, i32 11, i32 21)

ST_3: tmp_769 (231)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1021
_ifconv:170  %tmp_769 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10B_4096_a_loa_1, i32 22, i32 31)

ST_3: varinx10B_4096_b_loa_1 (233)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1022
_ifconv:172  %varinx10B_4096_b_loa_1 = load i32* %varinx10B_4096_b_add_1, align 4

ST_3: tmp_833 (234)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1022
_ifconv:173  %tmp_833 = trunc i32 %varinx10B_4096_b_loa_1 to i11

ST_3: varinx10B_4096_b_inx_8 (235)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1023
_ifconv:174  %varinx10B_4096_b_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10B_4096_b_loa_1, i32 11, i32 21)

ST_3: tmp_770 (236)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1024
_ifconv:175  %tmp_770 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10B_4096_b_loa_1, i32 22, i32 31)

ST_3: varinx10B_4096_c_loa_1 (238)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1025
_ifconv:177  %varinx10B_4096_c_loa_1 = load i32* %varinx10B_4096_c_add_1, align 4

ST_3: tmp_834 (239)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1025
_ifconv:178  %tmp_834 = trunc i32 %varinx10B_4096_c_loa_1 to i11

ST_3: varinx10B_4096_c_inx_8 (240)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1026
_ifconv:179  %varinx10B_4096_c_inx_8 = call i11 @_ssdm_op_PartSelect.i11.i32.i32.i32(i32 %varinx10B_4096_c_loa_1, i32 11, i32 21)

ST_3: tmp_771 (241)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1027
_ifconv:180  %tmp_771 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %varinx10B_4096_c_loa_1, i32 22, i32 31)

ST_3: varinx10B_4096_d_V_l_1 (243)  [1/2] 2.39ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1028
_ifconv:182  %varinx10B_4096_d_V_l_1 = load i10* %varinx10B_4096_d_V_a_1, align 2

ST_3: d_0_in_in_in (247)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:186  %d_0_in_in_in = select i1 %tmp, i11 %tmp_795, i11 %tmp_822

ST_3: e_0_in_in_in (248)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:187  %e_0_in_in_in = select i1 %tmp, i11 %varinx3_1024_23_inx2_1, i11 %varinx3_4096_23_inx2_1

ST_3: f_0_in_in_in (249)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:188  %f_0_in_in_in = select i1 %tmp, i10 %varinx3_1024_23_inx3_1, i10 %tmp_759

ST_3: a18A2_0_in_in_in (260)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:199  %a18A2_0_in_in_in = select i1 %tmp, i11 %tmp_803, i11 %tmp_826

ST_3: b18A2_0_in_in_in (261)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:200  %b18A2_0_in_in_in = select i1 %tmp, i11 %varinx10A_1024_a_inx_8, i11 %varinx10A_4096_a_inx_8

ST_3: c18A2_0_in_in_in (262)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:201  %c18A2_0_in_in_in = select i1 %tmp, i10 %varinx10A_1024_a_inx_3, i10 %tmp_763

ST_3: d18A2_0_in_in_in (263)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:202  %d18A2_0_in_in_in = select i1 %tmp, i11 %tmp_805, i11 %tmp_827

ST_3: e18A2_0_in_in_in (264)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:203  %e18A2_0_in_in_in = select i1 %tmp, i11 %varinx10A_1024_b_inx_8, i11 %varinx10A_4096_b_inx_8

ST_3: f18A2_0_in_in_in (265)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:204  %f18A2_0_in_in_in = select i1 %tmp, i10 %varinx10A_1024_b_inx_3, i10 %tmp_764

ST_3: g18A2_0_in_in_in (266)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:205  %g18A2_0_in_in_in = select i1 %tmp, i11 %tmp_807, i11 %tmp_828

ST_3: h18A2_0_in_in_in (267)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:206  %h18A2_0_in_in_in = select i1 %tmp, i11 %varinx10A_1024_c_inx_8, i11 %varinx10A_4096_c_inx_8

ST_3: i18A2_0_in_in_in (268)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:207  %i18A2_0_in_in_in = select i1 %tmp, i10 %varinx10A_1024_c_inx_3, i10 %tmp_765

ST_3: j18A2_0_in (269)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:208  %j18A2_0_in = select i1 %tmp, i10 %varinx10A_1024_d_V_l_3, i10 %varinx10A_4096_d_V_l_1

ST_3: a18B2_0_in_in_in (280)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:219  %a18B2_0_in_in_in = select i1 %tmp, i11 %tmp_815, i11 %tmp_832

ST_3: b18B2_0_in_in_in (281)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:220  %b18B2_0_in_in_in = select i1 %tmp, i11 %varinx10B_1024_a_inx_8, i11 %varinx10B_4096_a_inx_8

ST_3: c18B2_0_in_in_in (282)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:221  %c18B2_0_in_in_in = select i1 %tmp, i10 %varinx10B_1024_a_inx_3, i10 %tmp_769

ST_3: d18B2_0_in_in_in (283)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:222  %d18B2_0_in_in_in = select i1 %tmp, i11 %tmp_817, i11 %tmp_833

ST_3: e18B2_0_in_in_in (284)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:223  %e18B2_0_in_in_in = select i1 %tmp, i11 %varinx10B_1024_b_inx_8, i11 %varinx10B_4096_b_inx_8

ST_3: f18B2_0_in_in_in (285)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:224  %f18B2_0_in_in_in = select i1 %tmp, i10 %varinx10B_1024_b_inx_3, i10 %tmp_770

ST_3: g18B2_0_in_in_in (286)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:225  %g18B2_0_in_in_in = select i1 %tmp, i11 %tmp_819, i11 %tmp_834

ST_3: h18B2_0_in_in_in (287)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:226  %h18B2_0_in_in_in = select i1 %tmp, i11 %varinx10B_1024_c_inx_8, i11 %varinx10B_4096_c_inx_8

ST_3: i18B2_0_in_in_in (288)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:227  %i18B2_0_in_in_in = select i1 %tmp, i10 %varinx10B_1024_c_inx_3, i10 %tmp_771

ST_3: j18B2_0_in (289)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920
_ifconv:228  %j18B2_0_in = select i1 %tmp, i10 %varinx10B_1024_d_V_l_3, i10 %varinx10B_4096_d_V_l_1

ST_3: h18B2 (292)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:971
_ifconv:231  %h18B2 = sext i11 %h18B2_0_in_in_in to i16

ST_3: g18B2 (293)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:970
_ifconv:232  %g18B2 = sext i11 %g18B2_0_in_in_in to i16

ST_3: e18B2 (295)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:968
_ifconv:234  %e18B2 = sext i11 %e18B2_0_in_in_in to i16

ST_3: d18B2 (296)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:967
_ifconv:235  %d18B2 = sext i11 %d18B2_0_in_in_in to i16

ST_3: b18B2 (298)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:965
_ifconv:237  %b18B2 = sext i11 %b18B2_0_in_in_in to i16

ST_3: a18B2 (299)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:964
_ifconv:238  %a18B2 = sext i11 %a18B2_0_in_in_in to i16

ST_3: h18B (302)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:960
_ifconv:241  %h18B = sext i11 %h18B_0_in_in_in to i16

ST_3: g18B (303)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:959
_ifconv:242  %g18B = sext i11 %g18B_0_in_in_in to i16

ST_3: e18B (305)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:957
_ifconv:244  %e18B = sext i11 %e18B_0_in_in_in to i16

ST_3: d18B (306)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:956
_ifconv:245  %d18B = sext i11 %d18B_0_in_in_in to i16

ST_3: b18B (308)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:954
_ifconv:247  %b18B = sext i11 %b18B_0_in_in_in to i16

ST_3: a18B (309)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:953
_ifconv:248  %a18B = sext i11 %a18B_0_in_in_in to i16

ST_3: h18A2 (312)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:949
_ifconv:251  %h18A2 = sext i11 %h18A2_0_in_in_in to i16

ST_3: g18A2 (313)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:948
_ifconv:252  %g18A2 = sext i11 %g18A2_0_in_in_in to i16

ST_3: e18A2 (315)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:946
_ifconv:254  %e18A2 = sext i11 %e18A2_0_in_in_in to i16

ST_3: d18A2 (316)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:945
_ifconv:255  %d18A2 = sext i11 %d18A2_0_in_in_in to i16

ST_3: b18A2 (318)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:943
_ifconv:257  %b18A2 = sext i11 %b18A2_0_in_in_in to i16

ST_3: a18A2 (319)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:942
_ifconv:258  %a18A2 = sext i11 %a18A2_0_in_in_in to i16

ST_3: h18A (322)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:938
_ifconv:261  %h18A = sext i11 %h18A_0_in_in_in to i16

ST_3: g18A (323)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:937
_ifconv:262  %g18A = sext i11 %g18A_0_in_in_in to i16

ST_3: e18A (325)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:935
_ifconv:264  %e18A = sext i11 %e18A_0_in_in_in to i16

ST_3: d18A (326)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:934
_ifconv:265  %d18A = sext i11 %d18A_0_in_in_in to i16

ST_3: b18A (328)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:932
_ifconv:267  %b18A = sext i11 %b18A_0_in_in_in to i16

ST_3: a18A (329)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:931
_ifconv:268  %a18A = sext i11 %a18A_0_in_in_in to i16

ST_3: e (331)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:927
_ifconv:270  %e = sext i11 %e_0_in_in_in to i16

ST_3: d (332)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926
_ifconv:271  %d = sext i11 %d_0_in_in_in to i16

ST_3: a (335)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:274  %a = sext i11 %a_0_in_in_in to i16

ST_3: tmp_709 (336)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1040
_ifconv:275  %tmp_709 = zext i16 %a to i32

ST_3: Lam_buf4_addr (337)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1040
_ifconv:276  %Lam_buf4_addr = getelementptr inbounds [1024 x i16]* @Lam_buf4, i32 0, i32 %tmp_709

ST_3: Lam_buf4_load (338)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1040
_ifconv:277  %Lam_buf4_load = load i16* %Lam_buf4_addr, align 2

ST_3: Lam_buf6_load (341)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1041
_ifconv:280  %Lam_buf6_load = load i16* %Lam_buf6_addr, align 2

ST_3: Lam_buf6_load_1 (344)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1042
_ifconv:283  %Lam_buf6_load_1 = load i16* %Lam_buf6_addr_1, align 2

ST_3: tmp_712 (345)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1044
_ifconv:284  %tmp_712 = zext i16 %d to i32

ST_3: Lam_buf4_addr_1 (346)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1044
_ifconv:285  %Lam_buf4_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_buf4, i32 0, i32 %tmp_712

ST_3: Lam_buf4_load_1 (347)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1044
_ifconv:286  %Lam_buf4_load_1 = load i16* %Lam_buf4_addr_1, align 2

ST_3: tmp_713 (348)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1045
_ifconv:287  %tmp_713 = zext i16 %e to i32

ST_3: Lam_buf6a_addr (349)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1045
_ifconv:288  %Lam_buf6a_addr = getelementptr inbounds [1024 x i16]* @Lam_buf6a, i32 0, i32 %tmp_713

ST_3: Lam_buf6a_load (350)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1045
_ifconv:289  %Lam_buf6a_load = load i16* %Lam_buf6a_addr, align 2

ST_3: tmp_714 (351)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1046
_ifconv:290  %tmp_714 = zext i10 %f_0_in_in_in to i32

ST_3: Lam_buf6a_addr_1 (352)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1046
_ifconv:291  %Lam_buf6a_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_buf6a, i32 0, i32 %tmp_714

ST_3: Lam_buf6a_load_1 (353)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1046
_ifconv:292  %Lam_buf6a_load_1 = load i16* %Lam_buf6a_addr_1, align 2

ST_3: SpEtaPrevC_addr (359)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1052
_ifconv:298  %SpEtaPrevC_addr = getelementptr [2048 x i32]* @SpEtaPrevC, i32 0, i32 %tmp_708

ST_3: SpEtaPrevC_load (360)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1052
_ifconv:299  %SpEtaPrevC_load = load i32* %SpEtaPrevC_addr, align 4

ST_3: tmp_715 (364)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1069
_ifconv:303  %tmp_715 = zext i16 %a18A to i32

ST_3: Lam_bufAa_addr (365)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1069
_ifconv:304  %Lam_bufAa_addr = getelementptr inbounds [1024 x i16]* @Lam_bufAa, i32 0, i32 %tmp_715

ST_3: Lam_bufAa_load (366)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1069
_ifconv:305  %Lam_bufAa_load = load i16* %Lam_bufAa_addr, align 2

ST_3: tmp_716 (367)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1070
_ifconv:306  %tmp_716 = zext i16 %b18A to i32

ST_3: Lam_bufAb_addr (368)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1070
_ifconv:307  %Lam_bufAb_addr = getelementptr inbounds [1024 x i16]* @Lam_bufAb, i32 0, i32 %tmp_716

ST_3: Lam_bufAb_load (369)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1070
_ifconv:308  %Lam_bufAb_load = load i16* %Lam_bufAb_addr, align 2

ST_3: tmp_717 (370)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1071
_ifconv:309  %tmp_717 = zext i10 %c18A_0_in_in_in to i32

ST_3: Lam_bufAc_addr (371)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1071
_ifconv:310  %Lam_bufAc_addr = getelementptr inbounds [1024 x i16]* @Lam_bufAc, i32 0, i32 %tmp_717

ST_3: Lam_bufAc_load (372)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1071
_ifconv:311  %Lam_bufAc_load = load i16* %Lam_bufAc_addr, align 2

ST_3: tmp_718 (373)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1072
_ifconv:312  %tmp_718 = zext i16 %d18A to i32

ST_3: Lam_bufA1_addr (374)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1072
_ifconv:313  %Lam_bufA1_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA1, i32 0, i32 %tmp_718

ST_3: Lam_bufA1_load (375)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1072
_ifconv:314  %Lam_bufA1_load = load i16* %Lam_bufA1_addr, align 2

ST_3: tmp_719 (376)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1073
_ifconv:315  %tmp_719 = zext i16 %e18A to i32

ST_3: Lam_bufA2a_addr (377)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1073
_ifconv:316  %Lam_bufA2a_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA2a, i32 0, i32 %tmp_719

ST_3: Lam_bufA2a_load (378)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1073
_ifconv:317  %Lam_bufA2a_load = load i16* %Lam_bufA2a_addr, align 2

ST_3: tmp_720 (379)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1074
_ifconv:318  %tmp_720 = zext i10 %f18A_0_in_in_in to i32

ST_3: Lam_bufA3_addr (380)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1074
_ifconv:319  %Lam_bufA3_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA3, i32 0, i32 %tmp_720

ST_3: Lam_bufA3_load (381)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1074
_ifconv:320  %Lam_bufA3_load = load i16* %Lam_bufA3_addr, align 2

ST_3: tmp_721 (382)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1075
_ifconv:321  %tmp_721 = zext i16 %g18A to i32

ST_3: Lam_bufA5_addr (383)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1075
_ifconv:322  %Lam_bufA5_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA5, i32 0, i32 %tmp_721

ST_3: Lam_bufA5_load (384)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1075
_ifconv:323  %Lam_bufA5_load = load i16* %Lam_bufA5_addr, align 2

ST_3: tmp_722 (385)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1076
_ifconv:324  %tmp_722 = zext i16 %h18A to i32

ST_3: Lam_buf6_addr_2 (386)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1076
_ifconv:325  %Lam_buf6_addr_2 = getelementptr inbounds [1024 x i16]* @Lam_buf6, i32 0, i32 %tmp_722

ST_3: Lam_buf6_load_2 (387)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1076
_ifconv:326  %Lam_buf6_load_2 = load i16* %Lam_buf6_addr_2, align 2

ST_3: tmp_723 (388)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1077
_ifconv:327  %tmp_723 = zext i10 %i18A_0_in_in_in to i32

ST_3: Lam_bufA6b_addr (389)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1077
_ifconv:328  %Lam_bufA6b_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA6b, i32 0, i32 %tmp_723

ST_3: Lam_bufA6b_load (390)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1077
_ifconv:329  %Lam_bufA6b_load = load i16* %Lam_bufA6b_addr, align 2

ST_3: tmp_724 (391)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1078
_ifconv:330  %tmp_724 = zext i10 %j18A_0_in to i32

ST_3: Lam_bufA6c_addr (392)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1078
_ifconv:331  %Lam_bufA6c_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA6c, i32 0, i32 %tmp_724

ST_3: Lam_bufA6c_load (393)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1078
_ifconv:332  %Lam_bufA6c_load = load i16* %Lam_bufA6c_addr, align 2

ST_3: tmp_725 (394)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1100
_ifconv:333  %tmp_725 = zext i16 %a18A2 to i32

ST_3: Lam_bufAa_addr_1 (395)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1100
_ifconv:334  %Lam_bufAa_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufAa, i32 0, i32 %tmp_725

ST_3: Lam_bufAa_load_1 (396)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1100
_ifconv:335  %Lam_bufAa_load_1 = load i16* %Lam_bufAa_addr_1, align 2

ST_3: tmp_726 (397)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1101
_ifconv:336  %tmp_726 = zext i16 %b18A2 to i32

ST_3: Lam_bufAb_addr_1 (398)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1101
_ifconv:337  %Lam_bufAb_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufAb, i32 0, i32 %tmp_726

ST_3: Lam_bufAb_load_1 (399)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1101
_ifconv:338  %Lam_bufAb_load_1 = load i16* %Lam_bufAb_addr_1, align 2

ST_3: tmp_727 (400)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1102
_ifconv:339  %tmp_727 = zext i10 %c18A2_0_in_in_in to i32

ST_3: Lam_bufAc_addr_1 (401)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1102
_ifconv:340  %Lam_bufAc_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufAc, i32 0, i32 %tmp_727

ST_3: Lam_bufAc_load_1 (402)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1102
_ifconv:341  %Lam_bufAc_load_1 = load i16* %Lam_bufAc_addr_1, align 2

ST_3: tmp_728 (403)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1103
_ifconv:342  %tmp_728 = zext i16 %d18A2 to i32

ST_3: Lam_bufA1_addr_1 (404)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1103
_ifconv:343  %Lam_bufA1_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufA1, i32 0, i32 %tmp_728

ST_3: Lam_bufA1_load_1 (405)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1103
_ifconv:344  %Lam_bufA1_load_1 = load i16* %Lam_bufA1_addr_1, align 2

ST_3: tmp_729 (406)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1104
_ifconv:345  %tmp_729 = zext i16 %e18A2 to i32

ST_3: Lam_bufA2a_addr_1 (407)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1104
_ifconv:346  %Lam_bufA2a_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufA2a, i32 0, i32 %tmp_729

ST_3: Lam_bufA2a_load_1 (408)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1104
_ifconv:347  %Lam_bufA2a_load_1 = load i16* %Lam_bufA2a_addr_1, align 2

ST_3: tmp_730 (409)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1105
_ifconv:348  %tmp_730 = zext i10 %f18A2_0_in_in_in to i32

ST_3: Lam_bufA3_addr_1 (410)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1105
_ifconv:349  %Lam_bufA3_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufA3, i32 0, i32 %tmp_730

ST_3: Lam_bufA3_load_1 (411)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1105
_ifconv:350  %Lam_bufA3_load_1 = load i16* %Lam_bufA3_addr_1, align 2

ST_3: tmp_731 (412)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1106
_ifconv:351  %tmp_731 = zext i16 %g18A2 to i32

ST_3: Lam_bufA5_addr_1 (413)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1106
_ifconv:352  %Lam_bufA5_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufA5, i32 0, i32 %tmp_731

ST_3: Lam_bufA5_load_1 (414)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1106
_ifconv:353  %Lam_bufA5_load_1 = load i16* %Lam_bufA5_addr_1, align 2

ST_3: tmp_732 (415)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1107
_ifconv:354  %tmp_732 = zext i16 %h18A2 to i32

ST_3: Lam_bufA6_addr (416)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1107
_ifconv:355  %Lam_bufA6_addr = getelementptr inbounds [1024 x i16]* @Lam_bufA6, i32 0, i32 %tmp_732

ST_3: Lam_bufA6_load (417)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1107
_ifconv:356  %Lam_bufA6_load = load i16* %Lam_bufA6_addr, align 2

ST_3: tmp_733 (418)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1108
_ifconv:357  %tmp_733 = zext i10 %i18A2_0_in_in_in to i32

ST_3: Lam_bufA6b_addr_1 (419)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1108
_ifconv:358  %Lam_bufA6b_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufA6b, i32 0, i32 %tmp_733

ST_3: Lam_bufA6b_load_1 (420)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1108
_ifconv:359  %Lam_bufA6b_load_1 = load i16* %Lam_bufA6b_addr_1, align 2

ST_3: tmp_734 (421)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1109
_ifconv:360  %tmp_734 = zext i10 %j18A2_0_in to i32

ST_3: Lam_bufA6c_addr_1 (422)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1109
_ifconv:361  %Lam_bufA6c_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufA6c, i32 0, i32 %tmp_734

ST_3: Lam_bufA6c_load_1 (423)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1109
_ifconv:362  %Lam_bufA6c_load_1 = load i16* %Lam_bufA6c_addr_1, align 2

ST_3: tmp_735 (424)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1120
_ifconv:363  %tmp_735 = sext i16 %num_ntA_read to i32

ST_3: SpEtaPrevA_addr (425)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1120
_ifconv:364  %SpEtaPrevA_addr = getelementptr [2048 x i16]* @SpEtaPrevA, i32 0, i32 %tmp_735

ST_3: SpEtaPrevA_load (426)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1120
_ifconv:365  %SpEtaPrevA_load = load i16* %SpEtaPrevA_addr, align 2

ST_3: SpEtaPrevAa_addr (429)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1122
_ifconv:368  %SpEtaPrevAa_addr = getelementptr [2048 x i32]* @SpEtaPrevAa, i32 0, i32 %tmp_735

ST_3: SpEtaPrevAa_load (430)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1122
_ifconv:369  %SpEtaPrevAa_load = load i32* %SpEtaPrevAa_addr, align 4

ST_3: SpEtaPrevAb_addr (435)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1126
_ifconv:374  %SpEtaPrevAb_addr = getelementptr [1024 x i32]* @SpEtaPrevAb, i32 0, i32 %tmp_735

ST_3: SpEtaPrevAb_load (436)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1126
_ifconv:375  %SpEtaPrevAb_load = load i32* %SpEtaPrevAb_addr, align 4

ST_3: SpEtaPrevD_addr (441)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1139
_ifconv:380  %SpEtaPrevD_addr = getelementptr [2048 x i16]* @SpEtaPrevD, i32 0, i32 %tmp_708

ST_3: SpEtaPrevD_load (442)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1139
_ifconv:381  %SpEtaPrevD_load = load i16* %SpEtaPrevD_addr, align 2

ST_3: SpEtaPrevDa_addr (445)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1141
_ifconv:384  %SpEtaPrevDa_addr = getelementptr [2048 x i32]* @SpEtaPrevDa, i32 0, i32 %tmp_708

ST_3: SpEtaPrevDa_load (446)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1141
_ifconv:385  %SpEtaPrevDa_load = load i32* %SpEtaPrevDa_addr, align 4

ST_3: SpEtaPrevDb_addr (451)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1145
_ifconv:390  %SpEtaPrevDb_addr = getelementptr [1024 x i32]* @SpEtaPrevDb, i32 0, i32 %tmp_708

ST_3: SpEtaPrevDb_load (452)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1145
_ifconv:391  %SpEtaPrevDb_load = load i32* %SpEtaPrevDb_addr, align 4

ST_3: tmp_736 (457)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1174
_ifconv:396  %tmp_736 = zext i16 %a18B to i32

ST_3: Lam_bufB_addr (458)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1174
_ifconv:397  %Lam_bufB_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB, i32 0, i32 %tmp_736

ST_3: Lam_bufB_load (459)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1174
_ifconv:398  %Lam_bufB_load = load i16* %Lam_bufB_addr, align 2

ST_3: tmp_737 (460)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1175
_ifconv:399  %tmp_737 = zext i16 %b18B to i32

ST_3: Lam_bufB1a_addr (461)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1175
_ifconv:400  %Lam_bufB1a_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB1a, i32 0, i32 %tmp_737

ST_3: Lam_bufB1a_load (462)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1175
_ifconv:401  %Lam_bufB1a_load = load i16* %Lam_bufB1a_addr, align 2

ST_3: tmp_738 (463)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1176
_ifconv:402  %tmp_738 = zext i10 %c18B_0_in_in_in to i32

ST_3: Lam_bufB1b_addr (464)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1176
_ifconv:403  %Lam_bufB1b_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB1b, i32 0, i32 %tmp_738

ST_3: Lam_bufB1b_load (465)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1176
_ifconv:404  %Lam_bufB1b_load = load i16* %Lam_bufB1b_addr, align 2

ST_3: tmp_739 (466)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1177
_ifconv:405  %tmp_739 = zext i16 %d18B to i32

ST_3: Lam_bufB1c_addr (467)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1177
_ifconv:406  %Lam_bufB1c_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB1c, i32 0, i32 %tmp_739

ST_3: Lam_bufB1c_load (468)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1177
_ifconv:407  %Lam_bufB1c_load = load i16* %Lam_bufB1c_addr, align 2

ST_3: tmp_740 (469)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1178
_ifconv:408  %tmp_740 = zext i16 %e18B to i32

ST_3: Lam_bufB2_addr (470)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1178
_ifconv:409  %Lam_bufB2_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB2, i32 0, i32 %tmp_740

ST_3: Lam_bufB2_load (471)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1178
_ifconv:410  %Lam_bufB2_load = load i16* %Lam_bufB2_addr, align 2

ST_3: tmp_741 (472)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1179
_ifconv:411  %tmp_741 = zext i10 %f18B_0_in_in_in to i32

ST_3: Lam_bufB3a_addr (473)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1179
_ifconv:412  %Lam_bufB3a_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB3a, i32 0, i32 %tmp_741

ST_3: Lam_bufB3a_load (474)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1179
_ifconv:413  %Lam_bufB3a_load = load i16* %Lam_bufB3a_addr, align 2

ST_3: tmp_742 (475)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1180
_ifconv:414  %tmp_742 = zext i16 %g18B to i32

ST_3: Lam_bufB3b_addr (476)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1180
_ifconv:415  %Lam_bufB3b_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB3b, i32 0, i32 %tmp_742

ST_3: Lam_bufB3b_load (477)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1180
_ifconv:416  %Lam_bufB3b_load = load i16* %Lam_bufB3b_addr, align 2

ST_3: tmp_743 (478)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1181
_ifconv:417  %tmp_743 = zext i16 %h18B to i32

ST_3: Lam_bufB5a_addr (479)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1181
_ifconv:418  %Lam_bufB5a_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB5a, i32 0, i32 %tmp_743

ST_3: Lam_bufB5a_load (480)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1181
_ifconv:419  %Lam_bufB5a_load = load i16* %Lam_bufB5a_addr, align 2

ST_3: tmp_744 (481)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1182
_ifconv:420  %tmp_744 = zext i10 %i18B_0_in_in_in to i32

ST_3: Lam_bufB5b_addr (482)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1182
_ifconv:421  %Lam_bufB5b_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB5b, i32 0, i32 %tmp_744

ST_3: Lam_bufB5b_load (483)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1182
_ifconv:422  %Lam_bufB5b_load = load i16* %Lam_bufB5b_addr, align 2

ST_3: tmp_745 (484)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1183
_ifconv:423  %tmp_745 = zext i10 %j18B_0_in to i32

ST_3: Lam_bufB6_addr (485)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1183
_ifconv:424  %Lam_bufB6_addr = getelementptr inbounds [1024 x i16]* @Lam_bufB6, i32 0, i32 %tmp_745

ST_3: Lam_bufB6_load (486)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1183
_ifconv:425  %Lam_bufB6_load = load i16* %Lam_bufB6_addr, align 2

ST_3: tmp_746 (487)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1206
_ifconv:426  %tmp_746 = zext i16 %a18B2 to i32

ST_3: Lam_bufB_addr_1 (488)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1206
_ifconv:427  %Lam_bufB_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB, i32 0, i32 %tmp_746

ST_3: Lam_bufB_load_1 (489)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1206
_ifconv:428  %Lam_bufB_load_1 = load i16* %Lam_bufB_addr_1, align 2

ST_3: tmp_747 (490)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1207
_ifconv:429  %tmp_747 = zext i16 %b18B2 to i32

ST_3: Lam_bufB1a_addr_1 (491)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1207
_ifconv:430  %Lam_bufB1a_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB1a, i32 0, i32 %tmp_747

ST_3: Lam_bufB1a_load_1 (492)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1207
_ifconv:431  %Lam_bufB1a_load_1 = load i16* %Lam_bufB1a_addr_1, align 2

ST_3: tmp_748 (493)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1208
_ifconv:432  %tmp_748 = zext i10 %c18B2_0_in_in_in to i32

ST_3: Lam_bufB1b_addr_1 (494)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1208
_ifconv:433  %Lam_bufB1b_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB1b, i32 0, i32 %tmp_748

ST_3: Lam_bufB1b_load_1 (495)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1208
_ifconv:434  %Lam_bufB1b_load_1 = load i16* %Lam_bufB1b_addr_1, align 2

ST_3: tmp_749 (496)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1209
_ifconv:435  %tmp_749 = zext i16 %d18B2 to i32

ST_3: Lam_bufB1c_addr_1 (497)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1209
_ifconv:436  %Lam_bufB1c_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB1c, i32 0, i32 %tmp_749

ST_3: Lam_bufB1c_load_1 (498)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1209
_ifconv:437  %Lam_bufB1c_load_1 = load i16* %Lam_bufB1c_addr_1, align 2

ST_3: tmp_750 (499)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1210
_ifconv:438  %tmp_750 = zext i16 %e18B2 to i32

ST_3: Lam_bufB2_addr_1 (500)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1210
_ifconv:439  %Lam_bufB2_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB2, i32 0, i32 %tmp_750

ST_3: Lam_bufB2_load_1 (501)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1210
_ifconv:440  %Lam_bufB2_load_1 = load i16* %Lam_bufB2_addr_1, align 2

ST_3: tmp_751 (502)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1211
_ifconv:441  %tmp_751 = zext i10 %f18B2_0_in_in_in to i32

ST_3: Lam_bufB3a_addr_1 (503)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1211
_ifconv:442  %Lam_bufB3a_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB3a, i32 0, i32 %tmp_751

ST_3: Lam_bufB3a_load_1 (504)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1211
_ifconv:443  %Lam_bufB3a_load_1 = load i16* %Lam_bufB3a_addr_1, align 2

ST_3: tmp_752 (505)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1212
_ifconv:444  %tmp_752 = zext i16 %g18B2 to i32

ST_3: Lam_bufB3b_addr_1 (506)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1212
_ifconv:445  %Lam_bufB3b_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB3b, i32 0, i32 %tmp_752

ST_3: Lam_bufB3b_load_1 (507)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1212
_ifconv:446  %Lam_bufB3b_load_1 = load i16* %Lam_bufB3b_addr_1, align 2

ST_3: tmp_753 (508)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1213
_ifconv:447  %tmp_753 = zext i16 %h18B2 to i32

ST_3: Lam_bufB5a_addr_1 (509)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1213
_ifconv:448  %Lam_bufB5a_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB5a, i32 0, i32 %tmp_753

ST_3: Lam_bufB5a_load_1 (510)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1213
_ifconv:449  %Lam_bufB5a_load_1 = load i16* %Lam_bufB5a_addr_1, align 2

ST_3: tmp_754 (511)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1214
_ifconv:450  %tmp_754 = zext i10 %i18B2_0_in_in_in to i32

ST_3: Lam_bufB5b_addr_1 (512)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1214
_ifconv:451  %Lam_bufB5b_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB5b, i32 0, i32 %tmp_754

ST_3: Lam_bufB5b_load_1 (513)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1214
_ifconv:452  %Lam_bufB5b_load_1 = load i16* %Lam_bufB5b_addr_1, align 2

ST_3: tmp_755 (514)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1215
_ifconv:453  %tmp_755 = zext i10 %j18B2_0_in to i32

ST_3: Lam_bufB6_addr_1 (515)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1215
_ifconv:454  %Lam_bufB6_addr_1 = getelementptr inbounds [1024 x i16]* @Lam_bufB6, i32 0, i32 %tmp_755

ST_3: Lam_bufB6_load_1 (516)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1215
_ifconv:455  %Lam_bufB6_load_1 = load i16* %Lam_bufB6_addr_1, align 2

ST_3: tmp_756 (517)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1226
_ifconv:456  %tmp_756 = sext i16 %num_ntB_read to i32

ST_3: SpEtaPrevB_addr (518)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1226
_ifconv:457  %SpEtaPrevB_addr = getelementptr [2048 x i16]* @SpEtaPrevB, i32 0, i32 %tmp_756

ST_3: SpEtaPrevB_load (519)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1226
_ifconv:458  %SpEtaPrevB_load = load i16* %SpEtaPrevB_addr, align 2

ST_3: SpEtaPrevBa_addr (522)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1228
_ifconv:461  %SpEtaPrevBa_addr = getelementptr [2048 x i32]* @SpEtaPrevBa, i32 0, i32 %tmp_756

ST_3: SpEtaPrevBa_load (523)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1228
_ifconv:462  %SpEtaPrevBa_load = load i32* %SpEtaPrevBa_addr, align 4

ST_3: SpEtaPrevBb_addr (528)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1232
_ifconv:467  %SpEtaPrevBb_addr = getelementptr [1024 x i32]* @SpEtaPrevBb, i32 0, i32 %tmp_756

ST_3: SpEtaPrevBb_load (529)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1232
_ifconv:468  %SpEtaPrevBb_load = load i32* %SpEtaPrevBb_addr, align 4

ST_3: SpEtaPrevE_addr (534)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1245
_ifconv:473  %SpEtaPrevE_addr = getelementptr [2048 x i16]* @SpEtaPrevE, i32 0, i32 %tmp_708

ST_3: SpEtaPrevE_load (535)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1245
_ifconv:474  %SpEtaPrevE_load = load i16* %SpEtaPrevE_addr, align 2

ST_3: SpEtaPrevEa_addr (538)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1247
_ifconv:477  %SpEtaPrevEa_addr = getelementptr [2048 x i32]* @SpEtaPrevEa, i32 0, i32 %tmp_708

ST_3: SpEtaPrevEa_load (539)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1247
_ifconv:478  %SpEtaPrevEa_load = load i32* %SpEtaPrevEa_addr, align 4

ST_3: SpEtaPrevEb_addr (544)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1251
_ifconv:483  %SpEtaPrevEb_addr = getelementptr [1024 x i32]* @SpEtaPrevEb, i32 0, i32 %tmp_708

ST_3: SpEtaPrevEb_load (545)  [2/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1251
_ifconv:484  %SpEtaPrevEb_load = load i32* %SpEtaPrevEb_addr, align 4


 <State 4>: 3.17ns
ST_4: StgValue_471 (64)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:891
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_4: j18B2 (290)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:973
_ifconv:229  %j18B2 = zext i10 %j18B2_0_in to i16

ST_4: i18B2 (291)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:972
_ifconv:230  %i18B2 = zext i10 %i18B2_0_in_in_in to i16

ST_4: f18B2 (294)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:969
_ifconv:233  %f18B2 = zext i10 %f18B2_0_in_in_in to i16

ST_4: c18B2 (297)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:966
_ifconv:236  %c18B2 = zext i10 %c18B2_0_in_in_in to i16

ST_4: j18B (300)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:962
_ifconv:239  %j18B = zext i10 %j18B_0_in to i16

ST_4: i18B (301)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:961
_ifconv:240  %i18B = zext i10 %i18B_0_in_in_in to i16

ST_4: f18B (304)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:958
_ifconv:243  %f18B = zext i10 %f18B_0_in_in_in to i16

ST_4: c18B (307)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:955
_ifconv:246  %c18B = zext i10 %c18B_0_in_in_in to i16

ST_4: j18A2 (310)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:951
_ifconv:249  %j18A2 = zext i10 %j18A2_0_in to i16

ST_4: i18A2 (311)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:950
_ifconv:250  %i18A2 = zext i10 %i18A2_0_in_in_in to i16

ST_4: f18A2 (314)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:947
_ifconv:253  %f18A2 = zext i10 %f18A2_0_in_in_in to i16

ST_4: c18A2 (317)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:944
_ifconv:256  %c18A2 = zext i10 %c18A2_0_in_in_in to i16

ST_4: j18A (320)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:940
_ifconv:259  %j18A = zext i10 %j18A_0_in to i16

ST_4: i18A (321)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:939
_ifconv:260  %i18A = zext i10 %i18A_0_in_in_in to i16

ST_4: f18A (324)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:936
_ifconv:263  %f18A = zext i10 %f18A_0_in_in_in to i16

ST_4: c18A (327)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:933
_ifconv:266  %c18A = zext i10 %c18A_0_in_in_in to i16

ST_4: f (330)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:928
_ifconv:269  %f = zext i10 %f_0_in_in_in to i16

ST_4: c (333)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:924
_ifconv:272  %c = zext i10 %c_0_in_in_in to i16

ST_4: Lam_buf4_load (338)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1040
_ifconv:277  %Lam_buf4_load = load i16* %Lam_buf4_addr, align 2

ST_4: Lam_buf4_load_1 (347)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1044
_ifconv:286  %Lam_buf4_load_1 = load i16* %Lam_buf4_addr_1, align 2

ST_4: Lam_buf6a_load (350)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1045
_ifconv:289  %Lam_buf6a_load = load i16* %Lam_buf6a_addr, align 2

ST_4: Lam_buf6a_load_1 (353)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1046
_ifconv:292  %Lam_buf6a_load_1 = load i16* %Lam_buf6a_addr_1, align 2

ST_4: SpEtaPrevC_load (360)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1052
_ifconv:299  %SpEtaPrevC_load = load i32* %SpEtaPrevC_addr, align 4

ST_4: tmp_836 (361)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1052
_ifconv:300  %tmp_836 = trunc i32 %SpEtaPrevC_load to i8

ST_4: SpEtaPrevC_two_V_loa (362)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1053
_ifconv:301  %SpEtaPrevC_two_V_loa = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevC_load, i32 8, i32 15)

ST_4: SpEtaPrevC_three_V_l (363)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1054
_ifconv:302  %SpEtaPrevC_three_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevC_load, i32 16, i32 23)

ST_4: Lam_bufAa_load (366)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1069
_ifconv:305  %Lam_bufAa_load = load i16* %Lam_bufAa_addr, align 2

ST_4: Lam_bufAb_load (369)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1070
_ifconv:308  %Lam_bufAb_load = load i16* %Lam_bufAb_addr, align 2

ST_4: Lam_bufAc_load (372)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1071
_ifconv:311  %Lam_bufAc_load = load i16* %Lam_bufAc_addr, align 2

ST_4: Lam_bufA1_load (375)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1072
_ifconv:314  %Lam_bufA1_load = load i16* %Lam_bufA1_addr, align 2

ST_4: Lam_bufA2a_load (378)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1073
_ifconv:317  %Lam_bufA2a_load = load i16* %Lam_bufA2a_addr, align 2

ST_4: Lam_bufA3_load (381)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1074
_ifconv:320  %Lam_bufA3_load = load i16* %Lam_bufA3_addr, align 2

ST_4: Lam_bufA5_load (384)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1075
_ifconv:323  %Lam_bufA5_load = load i16* %Lam_bufA5_addr, align 2

ST_4: Lam_buf6_load_2 (387)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1076
_ifconv:326  %Lam_buf6_load_2 = load i16* %Lam_buf6_addr_2, align 2

ST_4: Lam_bufA6b_load (390)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1077
_ifconv:329  %Lam_bufA6b_load = load i16* %Lam_bufA6b_addr, align 2

ST_4: Lam_bufA6c_load (393)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1078
_ifconv:332  %Lam_bufA6c_load = load i16* %Lam_bufA6c_addr, align 2

ST_4: Lam_bufAa_load_1 (396)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1100
_ifconv:335  %Lam_bufAa_load_1 = load i16* %Lam_bufAa_addr_1, align 2

ST_4: Lam_bufAb_load_1 (399)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1101
_ifconv:338  %Lam_bufAb_load_1 = load i16* %Lam_bufAb_addr_1, align 2

ST_4: Lam_bufAc_load_1 (402)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1102
_ifconv:341  %Lam_bufAc_load_1 = load i16* %Lam_bufAc_addr_1, align 2

ST_4: Lam_bufA1_load_1 (405)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1103
_ifconv:344  %Lam_bufA1_load_1 = load i16* %Lam_bufA1_addr_1, align 2

ST_4: Lam_bufA2a_load_1 (408)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1104
_ifconv:347  %Lam_bufA2a_load_1 = load i16* %Lam_bufA2a_addr_1, align 2

ST_4: Lam_bufA3_load_1 (411)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1105
_ifconv:350  %Lam_bufA3_load_1 = load i16* %Lam_bufA3_addr_1, align 2

ST_4: Lam_bufA5_load_1 (414)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1106
_ifconv:353  %Lam_bufA5_load_1 = load i16* %Lam_bufA5_addr_1, align 2

ST_4: Lam_bufA6_load (417)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1107
_ifconv:356  %Lam_bufA6_load = load i16* %Lam_bufA6_addr, align 2

ST_4: Lam_bufA6b_load_1 (420)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1108
_ifconv:359  %Lam_bufA6b_load_1 = load i16* %Lam_bufA6b_addr_1, align 2

ST_4: Lam_bufA6c_load_1 (423)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1109
_ifconv:362  %Lam_bufA6c_load_1 = load i16* %Lam_bufA6c_addr_1, align 2

ST_4: SpEtaPrevA_load (426)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1120
_ifconv:365  %SpEtaPrevA_load = load i16* %SpEtaPrevA_addr, align 2

ST_4: tmp_837 (427)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1120
_ifconv:366  %tmp_837 = trunc i16 %SpEtaPrevA_load to i8

ST_4: SpEtaPrevA_two_V_loa (428)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1121
_ifconv:367  %SpEtaPrevA_two_V_loa = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %SpEtaPrevA_load, i32 8, i32 15)

ST_4: SpEtaPrevAa_load (430)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1122
_ifconv:369  %SpEtaPrevAa_load = load i32* %SpEtaPrevAa_addr, align 4

ST_4: tmp_838 (431)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1122
_ifconv:370  %tmp_838 = trunc i32 %SpEtaPrevAa_load to i8

ST_4: SpEtaPrevAa_four_V_l (432)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1123
_ifconv:371  %SpEtaPrevAa_four_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevAa_load, i32 8, i32 15)

ST_4: SpEtaPrevAa_five_V_l (433)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1124
_ifconv:372  %SpEtaPrevAa_five_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevAa_load, i32 16, i32 23)

ST_4: SpEtaPrevAa_six_V_lo (434)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1125
_ifconv:373  %SpEtaPrevAa_six_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevAa_load, i32 24, i32 31)

ST_4: SpEtaPrevAb_load (436)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1126
_ifconv:375  %SpEtaPrevAb_load = load i32* %SpEtaPrevAb_addr, align 4

ST_4: tmp_839 (437)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1126
_ifconv:376  %tmp_839 = trunc i32 %SpEtaPrevAb_load to i8

ST_4: SpEtaPrevAb_eight_V_s (438)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1127
_ifconv:377  %SpEtaPrevAb_eight_V_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevAb_load, i32 8, i32 15)

ST_4: SpEtaPrevAb_nine_V_l (439)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1128
_ifconv:378  %SpEtaPrevAb_nine_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevAb_load, i32 16, i32 23)

ST_4: SpEtaPrevAb_ten_V_lo (440)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1129
_ifconv:379  %SpEtaPrevAb_ten_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevAb_load, i32 24, i32 31)

ST_4: SpEtaPrevD_load (442)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1139
_ifconv:381  %SpEtaPrevD_load = load i16* %SpEtaPrevD_addr, align 2

ST_4: tmp_840 (443)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1139
_ifconv:382  %tmp_840 = trunc i16 %SpEtaPrevD_load to i8

ST_4: SpEtaPrevD_two_V_loa (444)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1140
_ifconv:383  %SpEtaPrevD_two_V_loa = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %SpEtaPrevD_load, i32 8, i32 15)

ST_4: SpEtaPrevDa_load (446)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1141
_ifconv:385  %SpEtaPrevDa_load = load i32* %SpEtaPrevDa_addr, align 4

ST_4: tmp_841 (447)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1141
_ifconv:386  %tmp_841 = trunc i32 %SpEtaPrevDa_load to i8

ST_4: SpEtaPrevDa_four_V_l (448)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1142
_ifconv:387  %SpEtaPrevDa_four_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevDa_load, i32 8, i32 15)

ST_4: SpEtaPrevDa_five_V_l (449)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1143
_ifconv:388  %SpEtaPrevDa_five_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevDa_load, i32 16, i32 23)

ST_4: SpEtaPrevDa_six_V_lo (450)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1144
_ifconv:389  %SpEtaPrevDa_six_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevDa_load, i32 24, i32 31)

ST_4: SpEtaPrevDb_load (452)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1145
_ifconv:391  %SpEtaPrevDb_load = load i32* %SpEtaPrevDb_addr, align 4

ST_4: tmp_842 (453)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1145
_ifconv:392  %tmp_842 = trunc i32 %SpEtaPrevDb_load to i8

ST_4: SpEtaPrevDb_eight_V_s (454)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1146
_ifconv:393  %SpEtaPrevDb_eight_V_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevDb_load, i32 8, i32 15)

ST_4: SpEtaPrevDb_nine_V_l (455)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1147
_ifconv:394  %SpEtaPrevDb_nine_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevDb_load, i32 16, i32 23)

ST_4: SpEtaPrevDb_ten_V_lo (456)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1148
_ifconv:395  %SpEtaPrevDb_ten_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevDb_load, i32 24, i32 31)

ST_4: Lam_bufB_load (459)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1174
_ifconv:398  %Lam_bufB_load = load i16* %Lam_bufB_addr, align 2

ST_4: Lam_bufB1a_load (462)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1175
_ifconv:401  %Lam_bufB1a_load = load i16* %Lam_bufB1a_addr, align 2

ST_4: Lam_bufB1b_load (465)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1176
_ifconv:404  %Lam_bufB1b_load = load i16* %Lam_bufB1b_addr, align 2

ST_4: Lam_bufB1c_load (468)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1177
_ifconv:407  %Lam_bufB1c_load = load i16* %Lam_bufB1c_addr, align 2

ST_4: Lam_bufB2_load (471)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1178
_ifconv:410  %Lam_bufB2_load = load i16* %Lam_bufB2_addr, align 2

ST_4: Lam_bufB3a_load (474)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1179
_ifconv:413  %Lam_bufB3a_load = load i16* %Lam_bufB3a_addr, align 2

ST_4: Lam_bufB3b_load (477)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1180
_ifconv:416  %Lam_bufB3b_load = load i16* %Lam_bufB3b_addr, align 2

ST_4: Lam_bufB5a_load (480)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1181
_ifconv:419  %Lam_bufB5a_load = load i16* %Lam_bufB5a_addr, align 2

ST_4: Lam_bufB5b_load (483)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1182
_ifconv:422  %Lam_bufB5b_load = load i16* %Lam_bufB5b_addr, align 2

ST_4: Lam_bufB6_load (486)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1183
_ifconv:425  %Lam_bufB6_load = load i16* %Lam_bufB6_addr, align 2

ST_4: Lam_bufB_load_1 (489)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1206
_ifconv:428  %Lam_bufB_load_1 = load i16* %Lam_bufB_addr_1, align 2

ST_4: Lam_bufB1a_load_1 (492)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1207
_ifconv:431  %Lam_bufB1a_load_1 = load i16* %Lam_bufB1a_addr_1, align 2

ST_4: Lam_bufB1b_load_1 (495)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1208
_ifconv:434  %Lam_bufB1b_load_1 = load i16* %Lam_bufB1b_addr_1, align 2

ST_4: Lam_bufB1c_load_1 (498)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1209
_ifconv:437  %Lam_bufB1c_load_1 = load i16* %Lam_bufB1c_addr_1, align 2

ST_4: Lam_bufB2_load_1 (501)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1210
_ifconv:440  %Lam_bufB2_load_1 = load i16* %Lam_bufB2_addr_1, align 2

ST_4: Lam_bufB3a_load_1 (504)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1211
_ifconv:443  %Lam_bufB3a_load_1 = load i16* %Lam_bufB3a_addr_1, align 2

ST_4: Lam_bufB3b_load_1 (507)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1212
_ifconv:446  %Lam_bufB3b_load_1 = load i16* %Lam_bufB3b_addr_1, align 2

ST_4: Lam_bufB5a_load_1 (510)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1213
_ifconv:449  %Lam_bufB5a_load_1 = load i16* %Lam_bufB5a_addr_1, align 2

ST_4: Lam_bufB5b_load_1 (513)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1214
_ifconv:452  %Lam_bufB5b_load_1 = load i16* %Lam_bufB5b_addr_1, align 2

ST_4: Lam_bufB6_load_1 (516)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1215
_ifconv:455  %Lam_bufB6_load_1 = load i16* %Lam_bufB6_addr_1, align 2

ST_4: SpEtaPrevB_load (519)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1226
_ifconv:458  %SpEtaPrevB_load = load i16* %SpEtaPrevB_addr, align 2

ST_4: tmp_843 (520)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1226
_ifconv:459  %tmp_843 = trunc i16 %SpEtaPrevB_load to i8

ST_4: SpEtaPrevB_two_V_loa (521)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1227
_ifconv:460  %SpEtaPrevB_two_V_loa = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %SpEtaPrevB_load, i32 8, i32 15)

ST_4: SpEtaPrevBa_load (523)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1228
_ifconv:462  %SpEtaPrevBa_load = load i32* %SpEtaPrevBa_addr, align 4

ST_4: tmp_844 (524)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1228
_ifconv:463  %tmp_844 = trunc i32 %SpEtaPrevBa_load to i8

ST_4: SpEtaPrevBa_four_V_l (525)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1229
_ifconv:464  %SpEtaPrevBa_four_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevBa_load, i32 8, i32 15)

ST_4: SpEtaPrevBa_five_V_l (526)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1230
_ifconv:465  %SpEtaPrevBa_five_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevBa_load, i32 16, i32 23)

ST_4: SpEtaPrevBa_six_V_lo (527)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1231
_ifconv:466  %SpEtaPrevBa_six_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevBa_load, i32 24, i32 31)

ST_4: SpEtaPrevBb_load (529)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1232
_ifconv:468  %SpEtaPrevBb_load = load i32* %SpEtaPrevBb_addr, align 4

ST_4: tmp_845 (530)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1232
_ifconv:469  %tmp_845 = trunc i32 %SpEtaPrevBb_load to i8

ST_4: SpEtaPrevBb_eight_V_s (531)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1233
_ifconv:470  %SpEtaPrevBb_eight_V_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevBb_load, i32 8, i32 15)

ST_4: SpEtaPrevBb_nine_V_l (532)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1234
_ifconv:471  %SpEtaPrevBb_nine_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevBb_load, i32 16, i32 23)

ST_4: SpEtaPrevBb_ten_V_lo (533)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1235
_ifconv:472  %SpEtaPrevBb_ten_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevBb_load, i32 24, i32 31)

ST_4: SpEtaPrevE_load (535)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1245
_ifconv:474  %SpEtaPrevE_load = load i16* %SpEtaPrevE_addr, align 2

ST_4: tmp_846 (536)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1245
_ifconv:475  %tmp_846 = trunc i16 %SpEtaPrevE_load to i8

ST_4: SpEtaPrevE_two_V_loa (537)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1246
_ifconv:476  %SpEtaPrevE_two_V_loa = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %SpEtaPrevE_load, i32 8, i32 15)

ST_4: SpEtaPrevEa_load (539)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1247
_ifconv:478  %SpEtaPrevEa_load = load i32* %SpEtaPrevEa_addr, align 4

ST_4: tmp_847 (540)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1247
_ifconv:479  %tmp_847 = trunc i32 %SpEtaPrevEa_load to i8

ST_4: SpEtaPrevEa_four_V_l (541)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1248
_ifconv:480  %SpEtaPrevEa_four_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevEa_load, i32 8, i32 15)

ST_4: SpEtaPrevEa_five_V_l (542)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1249
_ifconv:481  %SpEtaPrevEa_five_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevEa_load, i32 16, i32 23)

ST_4: SpEtaPrevEa_six_V_lo (543)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1250
_ifconv:482  %SpEtaPrevEa_six_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevEa_load, i32 24, i32 31)

ST_4: SpEtaPrevEb_load (545)  [1/2] 2.33ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1251
_ifconv:484  %SpEtaPrevEb_load = load i32* %SpEtaPrevEb_addr, align 4

ST_4: tmp_848 (546)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1251
_ifconv:485  %tmp_848 = trunc i32 %SpEtaPrevEb_load to i8

ST_4: SpEtaPrevEb_eight_V_s (547)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1252
_ifconv:486  %SpEtaPrevEb_eight_V_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevEb_load, i32 8, i32 15)

ST_4: SpEtaPrevEb_nine_V_l (548)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1253
_ifconv:487  %SpEtaPrevEb_nine_V_l = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevEb_load, i32 16, i32 23)

ST_4: SpEtaPrevEb_ten_V_lo (549)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1254
_ifconv:488  %SpEtaPrevEb_ten_V_lo = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %SpEtaPrevEb_load, i32 24, i32 31)

ST_4: nIterationCounter_lo (550)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:489  %nIterationCounter_lo = load i16* @nIterationCounter, align 2

ST_4: tmp_757 (551)  [1/1] 1.55ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:490  %tmp_757 = icmp eq i16 %nIterationCounter_lo, 0

ST_4: pTab_2_write_assign (552)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:491  %pTab_2_write_assign = select i1 %tmp_757, i8 0, i8 %SpEtaPrev_three_V_lo

ST_4: pTab_2_write_assign_1 (553)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:492  %pTab_2_write_assign_1 = sext i8 %pTab_2_write_assign to i16

ST_4: pTab_1_write_assign (554)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:493  %pTab_1_write_assign = select i1 %tmp_757, i8 0, i8 %SpEtaPrev_two_V_load

ST_4: pTab_1_write_assign_1 (555)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:494  %pTab_1_write_assign_1 = sext i8 %pTab_1_write_assign to i16

ST_4: pTab_0_write_assign (556)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:495  %pTab_0_write_assign = select i1 %tmp_757, i8 0, i8 %tmp_835

ST_4: pTab_0_write_assign_1 (557)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:496  %pTab_0_write_assign_1 = sext i8 %pTab_0_write_assign to i16

ST_4: pTabA_9_write_assig (558)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:497  %pTabA_9_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevAb_ten_V_lo

ST_4: pTabA_9_write_assig_1 (559)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:498  %pTabA_9_write_assig_1 = sext i8 %pTabA_9_write_assig to i16

ST_4: pTabA_8_write_assig (560)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:499  %pTabA_8_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevAb_nine_V_l

ST_4: pTabA_8_write_assig_1 (561)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:500  %pTabA_8_write_assig_1 = sext i8 %pTabA_8_write_assig to i16

ST_4: pTabA_7_write_assig (562)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:501  %pTabA_7_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevAb_eight_V_s

ST_4: pTabA_7_write_assig_1 (563)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:502  %pTabA_7_write_assig_1 = sext i8 %pTabA_7_write_assig to i16

ST_4: pTabA_6_write_assig (564)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:503  %pTabA_6_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_839

ST_4: pTabA_6_write_assig_1 (565)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:504  %pTabA_6_write_assig_1 = sext i8 %pTabA_6_write_assig to i16

ST_4: pTabA_5_write_assig (566)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:505  %pTabA_5_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevAa_six_V_lo

ST_4: pTabA_5_write_assig_1 (567)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:506  %pTabA_5_write_assig_1 = sext i8 %pTabA_5_write_assig to i16

ST_4: pTabA_4_write_assig (568)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:507  %pTabA_4_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevAa_five_V_l

ST_4: pTabA_4_write_assig_1 (569)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:508  %pTabA_4_write_assig_1 = sext i8 %pTabA_4_write_assig to i16

ST_4: pTabA_3_write_assig (570)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:509  %pTabA_3_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevAa_four_V_l

ST_4: pTabA_3_write_assig_1 (571)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:510  %pTabA_3_write_assig_1 = sext i8 %pTabA_3_write_assig to i16

ST_4: pTabA_2_write_assig (572)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:511  %pTabA_2_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_838

ST_4: pTabA_2_write_assig_1 (573)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:512  %pTabA_2_write_assig_1 = sext i8 %pTabA_2_write_assig to i16

ST_4: pTabA_1_write_assig (574)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:513  %pTabA_1_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevA_two_V_loa

ST_4: pTabA_1_write_assig_1 (575)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:514  %pTabA_1_write_assig_1 = sext i8 %pTabA_1_write_assig to i16

ST_4: pTabA_0_write_assig (576)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:515  %pTabA_0_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_837

ST_4: pTabA_0_write_assig_1 (577)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:516  %pTabA_0_write_assig_1 = sext i8 %pTabA_0_write_assig to i16

ST_4: pTabB_0_write_assig (578)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:517  %pTabB_0_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_843

ST_4: pTabB_0_write_assig_1 (579)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:518  %pTabB_0_write_assig_1 = sext i8 %pTabB_0_write_assig to i16

ST_4: pTabB_1_write_assig (580)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:519  %pTabB_1_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevB_two_V_loa

ST_4: pTabB_1_write_assig_1 (581)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:520  %pTabB_1_write_assig_1 = sext i8 %pTabB_1_write_assig to i16

ST_4: pTabB_2_write_assig (582)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:521  %pTabB_2_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_844

ST_4: pTabB_2_write_assig_1 (583)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:522  %pTabB_2_write_assig_1 = sext i8 %pTabB_2_write_assig to i16

ST_4: pTabB_3_write_assig (584)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:523  %pTabB_3_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevBa_four_V_l

ST_4: pTabB_3_write_assig_1 (585)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:524  %pTabB_3_write_assig_1 = sext i8 %pTabB_3_write_assig to i16

ST_4: pTabB_4_write_assig (586)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:525  %pTabB_4_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevBa_five_V_l

ST_4: pTabB_4_write_assig_1 (587)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:526  %pTabB_4_write_assig_1 = sext i8 %pTabB_4_write_assig to i16

ST_4: pTabB_5_write_assig (588)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:527  %pTabB_5_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevBa_six_V_lo

ST_4: pTabB_5_write_assig_1 (589)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:528  %pTabB_5_write_assig_1 = sext i8 %pTabB_5_write_assig to i16

ST_4: pTabB_6_write_assig (590)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:529  %pTabB_6_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_845

ST_4: pTabB_6_write_assig_1 (591)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:530  %pTabB_6_write_assig_1 = sext i8 %pTabB_6_write_assig to i16

ST_4: pTabB_7_write_assig (592)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:531  %pTabB_7_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevBb_eight_V_s

ST_4: pTabB_7_write_assig_1 (593)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:532  %pTabB_7_write_assig_1 = sext i8 %pTabB_7_write_assig to i16

ST_4: pTabB_8_write_assig (594)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:533  %pTabB_8_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevBb_nine_V_l

ST_4: pTabB_8_write_assig_1 (595)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:534  %pTabB_8_write_assig_1 = sext i8 %pTabB_8_write_assig to i16

ST_4: pTabB_9_write_assig (596)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:535  %pTabB_9_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevBb_ten_V_lo

ST_4: pTabB_9_write_assig_1 (597)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:536  %pTabB_9_write_assig_1 = sext i8 %pTabB_9_write_assig to i16

ST_4: pTabE_2_write_assig (598)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:537  %pTabE_2_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevC_three_V_l

ST_4: pTabE_2_write_assig_1 (599)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:538  %pTabE_2_write_assig_1 = sext i8 %pTabE_2_write_assig to i16

ST_4: pTabE_1_write_assig (600)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:539  %pTabE_1_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevC_two_V_loa

ST_4: pTabE_1_write_assig_1 (601)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:540  %pTabE_1_write_assig_1 = sext i8 %pTabE_1_write_assig to i16

ST_4: pTabE_0_write_assig (602)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:541  %pTabE_0_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_836

ST_4: pTabE_0_write_assig_1 (603)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:542  %pTabE_0_write_assig_1 = sext i8 %pTabE_0_write_assig to i16

ST_4: pTabF_9_write_assig (604)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:543  %pTabF_9_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevDb_ten_V_lo

ST_4: pTabF_9_write_assig_1 (605)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:544  %pTabF_9_write_assig_1 = sext i8 %pTabF_9_write_assig to i16

ST_4: pTabF_8_write_assig (606)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:545  %pTabF_8_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevDb_nine_V_l

ST_4: pTabF_8_write_assig_1 (607)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:546  %pTabF_8_write_assig_1 = sext i8 %pTabF_8_write_assig to i16

ST_4: pTabF_7_write_assig (608)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:547  %pTabF_7_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevDb_eight_V_s

ST_4: pTabF_7_write_assig_1 (609)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:548  %pTabF_7_write_assig_1 = sext i8 %pTabF_7_write_assig to i16

ST_4: pTabF_6_write_assig (610)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:549  %pTabF_6_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_842

ST_4: pTabF_6_write_assig_1 (611)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:550  %pTabF_6_write_assig_1 = sext i8 %pTabF_6_write_assig to i16

ST_4: pTabF_5_write_assig (612)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:551  %pTabF_5_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevDa_six_V_lo

ST_4: pTabF_5_write_assig_1 (613)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:552  %pTabF_5_write_assig_1 = sext i8 %pTabF_5_write_assig to i16

ST_4: pTabF_4_write_assig (614)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:553  %pTabF_4_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevDa_five_V_l

ST_4: pTabF_4_write_assig_1 (615)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:554  %pTabF_4_write_assig_1 = sext i8 %pTabF_4_write_assig to i16

ST_4: pTabF_3_write_assig (616)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:555  %pTabF_3_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevDa_four_V_l

ST_4: pTabF_3_write_assig_1 (617)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:556  %pTabF_3_write_assig_1 = sext i8 %pTabF_3_write_assig to i16

ST_4: pTabF_2_write_assig (618)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:557  %pTabF_2_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_841

ST_4: pTabF_2_write_assig_1 (619)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:558  %pTabF_2_write_assig_1 = sext i8 %pTabF_2_write_assig to i16

ST_4: pTabF_1_write_assig (620)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:559  %pTabF_1_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevD_two_V_loa

ST_4: pTabF_1_write_assig_1 (621)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:560  %pTabF_1_write_assig_1 = sext i8 %pTabF_1_write_assig to i16

ST_4: pTabF_0_write_assig (622)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:561  %pTabF_0_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_840

ST_4: pTabF_0_write_assig_1 (623)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:562  %pTabF_0_write_assig_1 = sext i8 %pTabF_0_write_assig to i16

ST_4: pTabG_0_write_assig (624)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:563  %pTabG_0_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_846

ST_4: pTabG_0_write_assig_1 (625)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:564  %pTabG_0_write_assig_1 = sext i8 %pTabG_0_write_assig to i16

ST_4: pTabG_1_write_assig (626)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:565  %pTabG_1_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevE_two_V_loa

ST_4: pTabG_1_write_assig_1 (627)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:566  %pTabG_1_write_assig_1 = sext i8 %pTabG_1_write_assig to i16

ST_4: pTabG_2_write_assig (628)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:567  %pTabG_2_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_847

ST_4: pTabG_2_write_assig_1 (629)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:568  %pTabG_2_write_assig_1 = sext i8 %pTabG_2_write_assig to i16

ST_4: pTabG_3_write_assig (630)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:569  %pTabG_3_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevEa_four_V_l

ST_4: pTabG_3_write_assig_1 (631)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:570  %pTabG_3_write_assig_1 = sext i8 %pTabG_3_write_assig to i16

ST_4: pTabG_4_write_assig (632)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:571  %pTabG_4_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevEa_five_V_l

ST_4: pTabG_4_write_assig_1 (633)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:572  %pTabG_4_write_assig_1 = sext i8 %pTabG_4_write_assig to i16

ST_4: pTabG_5_write_assig (634)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:573  %pTabG_5_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevEa_six_V_lo

ST_4: pTabG_5_write_assig_1 (635)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:574  %pTabG_5_write_assig_1 = sext i8 %pTabG_5_write_assig to i16

ST_4: pTabG_6_write_assig (636)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:575  %pTabG_6_write_assig = select i1 %tmp_757, i8 0, i8 %tmp_848

ST_4: pTabG_6_write_assig_1 (637)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:576  %pTabG_6_write_assig_1 = sext i8 %pTabG_6_write_assig to i16

ST_4: pTabG_7_write_assig (638)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:577  %pTabG_7_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevEb_eight_V_s

ST_4: pTabG_7_write_assig_1 (639)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:578  %pTabG_7_write_assig_1 = sext i8 %pTabG_7_write_assig to i16

ST_4: pTabG_8_write_assig (640)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:579  %pTabG_8_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevEb_nine_V_l

ST_4: pTabG_8_write_assig_1 (641)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:580  %pTabG_8_write_assig_1 = sext i8 %pTabG_8_write_assig to i16

ST_4: pTabG_9_write_assig (642)  [1/1] 0.84ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:581  %pTabG_9_write_assig = select i1 %tmp_757, i8 0, i8 %SpEtaPrevEb_ten_V_lo

ST_4: pTabG_9_write_assig_1 (643)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265
_ifconv:582  %pTabG_9_write_assig_1 = sext i8 %pTabG_9_write_assig to i16

ST_4: newret (644)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:583  %newret = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } undef, i16 %a, 0

ST_4: newret2 (645)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:584  %newret2 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret, i16 %b, 1

ST_4: newret4 (646)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:585  %newret4 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret2, i16 %c, 2

ST_4: newret6 (647)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:586  %newret6 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret4, i16 %Lam_buf4_load, 3

ST_4: newret8 (648)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:587  %newret8 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret6, i16 %Lam_buf6_load, 4

ST_4: newret10 (649)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:588  %newret10 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret8, i16 %Lam_buf6_load_1, 5

ST_4: newret12 (650)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:589  %newret12 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret10, i16 %pTab_0_write_assign_1, 6

ST_4: newret14 (651)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:590  %newret14 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret12, i16 %pTab_1_write_assign_1, 7

ST_4: newret16 (652)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:591  %newret16 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret14, i16 %pTab_2_write_assign_1, 8

ST_4: newret18 (653)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:592  %newret18 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret16, i16 %a18A, 9

ST_4: newret20 (654)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:593  %newret20 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret18, i16 %b18A, 10

ST_4: newret22 (655)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:594  %newret22 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret20, i16 %c18A, 11

ST_4: newret24 (656)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:595  %newret24 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret22, i16 %d18A, 12

ST_4: newret26 (657)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:596  %newret26 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret24, i16 %e18A, 13

ST_4: newret28 (658)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:597  %newret28 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret26, i16 %f18A, 14

ST_4: newret30 (659)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:598  %newret30 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret28, i16 %g18A, 15

ST_4: newret32 (660)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:599  %newret32 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret30, i16 %h18A, 16

ST_4: newret34 (661)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:600  %newret34 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret32, i16 %i18A, 17

ST_4: newret36 (662)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:601  %newret36 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret34, i16 %j18A, 18

ST_4: newret38 (663)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:602  %newret38 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret36, i16 %Lam_bufAa_load, 19

ST_4: newret40 (664)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:603  %newret40 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret38, i16 %Lam_bufAb_load, 20

ST_4: newret42 (665)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:604  %newret42 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret40, i16 %Lam_bufAc_load, 21

ST_4: newret44 (666)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:605  %newret44 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret42, i16 %Lam_bufA1_load, 22

ST_4: newret46 (667)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:606  %newret46 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret44, i16 %Lam_bufA2a_load, 23

ST_4: newret48 (668)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:607  %newret48 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret46, i16 %Lam_bufA3_load, 24

ST_4: newret50 (669)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:608  %newret50 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret48, i16 %Lam_bufA5_load, 25

ST_4: newret52 (670)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:609  %newret52 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret50, i16 %Lam_buf6_load_2, 26

ST_4: newret54 (671)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:610  %newret54 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret52, i16 %Lam_bufA6b_load, 27

ST_4: newret56 (672)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:611  %newret56 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret54, i16 %Lam_bufA6c_load, 28

ST_4: newret58 (673)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:612  %newret58 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret56, i16 %pTabA_0_write_assig_1, 29

ST_4: newret60 (674)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:613  %newret60 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret58, i16 %pTabA_1_write_assig_1, 30

ST_4: newret62 (675)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:614  %newret62 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret60, i16 %pTabA_2_write_assig_1, 31

ST_4: newret64 (676)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:615  %newret64 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret62, i16 %pTabA_3_write_assig_1, 32

ST_4: newret66 (677)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:616  %newret66 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret64, i16 %pTabA_4_write_assig_1, 33

ST_4: newret68 (678)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:617  %newret68 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret66, i16 %pTabA_5_write_assig_1, 34

ST_4: newret70 (679)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:618  %newret70 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret68, i16 %pTabA_6_write_assig_1, 35

ST_4: newret72 (680)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:619  %newret72 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret70, i16 %pTabA_7_write_assig_1, 36

ST_4: newret74 (681)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:620  %newret74 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret72, i16 %pTabA_8_write_assig_1, 37

ST_4: newret76 (682)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:621  %newret76 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret74, i16 %pTabA_9_write_assig_1, 38

ST_4: newret78 (683)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:622  %newret78 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret76, i16 %a18B, 39

ST_4: newret80 (684)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:623  %newret80 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret78, i16 %b18B, 40

ST_4: newret82 (685)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:624  %newret82 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret80, i16 %c18B, 41

ST_4: newret84 (686)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:625  %newret84 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret82, i16 %d18B, 42

ST_4: newret86 (687)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:626  %newret86 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret84, i16 %e18B, 43

ST_4: newret88 (688)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:627  %newret88 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret86, i16 %f18B, 44

ST_4: newret90 (689)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:628  %newret90 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret88, i16 %g18B, 45

ST_4: newret92 (690)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:629  %newret92 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret90, i16 %h18B, 46

ST_4: newret94 (691)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:630  %newret94 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret92, i16 %i18B, 47

ST_4: newret96 (692)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:631  %newret96 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret94, i16 %j18B, 48

ST_4: newret98 (693)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:632  %newret98 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret96, i16 %Lam_bufB_load, 49

ST_4: newret100 (694)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:633  %newret100 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret98, i16 %Lam_bufB1a_load, 50

ST_4: newret102 (695)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:634  %newret102 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret100, i16 %Lam_bufB1b_load, 51

ST_4: newret104 (696)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:635  %newret104 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret102, i16 %Lam_bufB1c_load, 52

ST_4: newret106 (697)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:636  %newret106 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret104, i16 %Lam_bufB2_load, 53

ST_4: newret108 (698)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:637  %newret108 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret106, i16 %Lam_bufB3a_load, 54

ST_4: newret110 (699)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:638  %newret110 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret108, i16 %Lam_bufB3b_load, 55

ST_4: newret112 (700)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:639  %newret112 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret110, i16 %Lam_bufB5a_load, 56

ST_4: newret114 (701)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:640  %newret114 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret112, i16 %Lam_bufB5b_load, 57

ST_4: newret116 (702)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:641  %newret116 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret114, i16 %Lam_bufB6_load, 58

ST_4: newret118 (703)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:642  %newret118 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret116, i16 %pTabB_0_write_assig_1, 59

ST_4: newret120 (704)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:643  %newret120 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret118, i16 %pTabB_1_write_assig_1, 60

ST_4: newret122 (705)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:644  %newret122 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret120, i16 %pTabB_2_write_assig_1, 61

ST_4: newret124 (706)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:645  %newret124 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret122, i16 %pTabB_3_write_assig_1, 62

ST_4: newret126 (707)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:646  %newret126 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret124, i16 %pTabB_4_write_assig_1, 63

ST_4: newret128 (708)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:647  %newret128 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret126, i16 %pTabB_5_write_assig_1, 64

ST_4: newret130 (709)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:648  %newret130 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret128, i16 %pTabB_6_write_assig_1, 65

ST_4: newret132 (710)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:649  %newret132 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret130, i16 %pTabB_7_write_assig_1, 66

ST_4: newret134 (711)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:650  %newret134 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret132, i16 %pTabB_8_write_assig_1, 67

ST_4: newret136 (712)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:651  %newret136 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret134, i16 %pTabB_9_write_assig_1, 68

ST_4: newret138 (713)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:652  %newret138 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret136, i16 %d, 69

ST_4: newret140 (714)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:653  %newret140 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret138, i16 %e, 70

ST_4: newret142 (715)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:654  %newret142 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret140, i16 %f, 71

ST_4: newret144 (716)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:655  %newret144 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret142, i16 %Lam_buf4_load_1, 72

ST_4: newret146 (717)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:656  %newret146 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret144, i16 %Lam_buf6a_load, 73

ST_4: newret148 (718)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:657  %newret148 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret146, i16 %Lam_buf6a_load_1, 74

ST_4: newret150 (719)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:658  %newret150 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret148, i16 %pTabE_0_write_assig_1, 75

ST_4: newret152 (720)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:659  %newret152 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret150, i16 %pTabE_1_write_assig_1, 76

ST_4: newret154 (721)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:660  %newret154 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret152, i16 %pTabE_2_write_assig_1, 77

ST_4: newret156 (722)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:661  %newret156 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret154, i16 %a18A2, 78

ST_4: newret158 (723)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:662  %newret158 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret156, i16 %b18A2, 79

ST_4: newret159 (724)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:663  %newret159 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret158, i16 %c18A2, 80

ST_4: newret160 (725)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:664  %newret160 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret159, i16 %d18A2, 81

ST_4: newret161 (726)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:665  %newret161 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret160, i16 %e18A2, 82

ST_4: newret162 (727)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:666  %newret162 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret161, i16 %f18A2, 83

ST_4: newret163 (728)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:667  %newret163 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret162, i16 %g18A2, 84

ST_4: newret164 (729)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:668  %newret164 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret163, i16 %h18A2, 85

ST_4: newret165 (730)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:669  %newret165 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret164, i16 %i18A2, 86

ST_4: newret166 (731)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:670  %newret166 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret165, i16 %j18A2, 87

ST_4: newret167 (732)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:671  %newret167 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret166, i16 %Lam_bufAa_load_1, 88

ST_4: newret168 (733)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:672  %newret168 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret167, i16 %Lam_bufAb_load_1, 89

ST_4: newret169 (734)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:673  %newret169 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret168, i16 %Lam_bufAc_load_1, 90

ST_4: newret170 (735)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:674  %newret170 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret169, i16 %Lam_bufA1_load_1, 91

ST_4: newret171 (736)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:675  %newret171 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret170, i16 %Lam_bufA2a_load_1, 92

ST_4: newret172 (737)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:676  %newret172 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret171, i16 %Lam_bufA3_load_1, 93

ST_4: newret173 (738)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:677  %newret173 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret172, i16 %Lam_bufA5_load_1, 94

ST_4: newret174 (739)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:678  %newret174 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret173, i16 %Lam_bufA6_load, 95

ST_4: newret175 (740)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:679  %newret175 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret174, i16 %Lam_bufA6b_load_1, 96

ST_4: newret176 (741)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:680  %newret176 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret175, i16 %Lam_bufA6c_load_1, 97

ST_4: newret177 (742)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:681  %newret177 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret176, i16 %pTabF_0_write_assig_1, 98

ST_4: newret178 (743)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:682  %newret178 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret177, i16 %pTabF_1_write_assig_1, 99

ST_4: newret179 (744)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:683  %newret179 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret178, i16 %pTabF_2_write_assig_1, 100

ST_4: newret180 (745)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:684  %newret180 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret179, i16 %pTabF_3_write_assig_1, 101

ST_4: newret181 (746)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:685  %newret181 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret180, i16 %pTabF_4_write_assig_1, 102

ST_4: newret182 (747)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:686  %newret182 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret181, i16 %pTabF_5_write_assig_1, 103

ST_4: newret183 (748)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:687  %newret183 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret182, i16 %pTabF_6_write_assig_1, 104

ST_4: newret184 (749)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:688  %newret184 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret183, i16 %pTabF_7_write_assig_1, 105

ST_4: newret185 (750)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:689  %newret185 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret184, i16 %pTabF_8_write_assig_1, 106

ST_4: newret186 (751)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:690  %newret186 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret185, i16 %pTabF_9_write_assig_1, 107

ST_4: newret187 (752)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:691  %newret187 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret186, i16 %a18B2, 108

ST_4: newret188 (753)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:692  %newret188 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret187, i16 %b18B2, 109

ST_4: newret189 (754)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:693  %newret189 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret188, i16 %c18B2, 110

ST_4: newret190 (755)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:694  %newret190 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret189, i16 %d18B2, 111

ST_4: newret191 (756)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:695  %newret191 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret190, i16 %e18B2, 112

ST_4: newret192 (757)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:696  %newret192 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret191, i16 %f18B2, 113

ST_4: newret193 (758)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:697  %newret193 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret192, i16 %g18B2, 114

ST_4: newret194 (759)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:698  %newret194 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret193, i16 %h18B2, 115

ST_4: newret195 (760)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:699  %newret195 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret194, i16 %i18B2, 116

ST_4: newret196 (761)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:700  %newret196 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret195, i16 %j18B2, 117

ST_4: newret197 (762)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:701  %newret197 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret196, i16 %Lam_bufB_load_1, 118

ST_4: newret198 (763)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:702  %newret198 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret197, i16 %Lam_bufB1a_load_1, 119

ST_4: newret199 (764)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:703  %newret199 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret198, i16 %Lam_bufB1b_load_1, 120

ST_4: newret200 (765)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:704  %newret200 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret199, i16 %Lam_bufB1c_load_1, 121

ST_4: newret201 (766)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:705  %newret201 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret200, i16 %Lam_bufB2_load_1, 122

ST_4: newret202 (767)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:706  %newret202 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret201, i16 %Lam_bufB3a_load_1, 123

ST_4: newret203 (768)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:707  %newret203 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret202, i16 %Lam_bufB3b_load_1, 124

ST_4: newret204 (769)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:708  %newret204 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret203, i16 %Lam_bufB5a_load_1, 125

ST_4: newret205 (770)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:709  %newret205 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret204, i16 %Lam_bufB5b_load_1, 126

ST_4: newret206 (771)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:710  %newret206 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret205, i16 %Lam_bufB6_load_1, 127

ST_4: newret207 (772)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:711  %newret207 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret206, i16 %pTabG_0_write_assig_1, 128

ST_4: newret208 (773)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:712  %newret208 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret207, i16 %pTabG_1_write_assig_1, 129

ST_4: newret209 (774)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:713  %newret209 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret208, i16 %pTabG_2_write_assig_1, 130

ST_4: newret210 (775)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:714  %newret210 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret209, i16 %pTabG_3_write_assig_1, 131

ST_4: newret211 (776)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:715  %newret211 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret210, i16 %pTabG_4_write_assig_1, 132

ST_4: newret212 (777)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:716  %newret212 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret211, i16 %pTabG_5_write_assig_1, 133

ST_4: newret213 (778)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:717  %newret213 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret212, i16 %pTabG_6_write_assig_1, 134

ST_4: newret214 (779)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:718  %newret214 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret213, i16 %pTabG_7_write_assig_1, 135

ST_4: newret215 (780)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:719  %newret215 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret214, i16 %pTabG_8_write_assig_1, 136

ST_4: newret216 (781)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:720  %newret216 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret215, i16 %pTabG_9_write_assig_1, 137

ST_4: StgValue_822 (782)  [1/1] 0.00ns  loc: LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922
_ifconv:721  ret { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %newret216



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.39ns
The critical path consists of the following:
	wire read on port 'num_nt' [63]  (0 ns)
	'getelementptr' operation ('varinx10B_4096_d_V_a', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1017) [225]  (0 ns)
	'load' operation ('varinx10B_4096_d_V_l', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1017) on array 'varinx10B_4096_d_V' [226]  (2.39 ns)

 <State 2>: 5.56ns
The critical path consists of the following:
	'load' operation ('varinx3_1024_23_load', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) on array 'varinx3_1024_23' [70]  (2.39 ns)
	'select' operation ('c_0_in_in_in', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920) [246]  (0.84 ns)
	'getelementptr' operation ('Lam_buf6_addr_1', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1042) [343]  (0 ns)
	'load' operation ('lTab[2]', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1042) on array 'Lam_buf6' [344]  (2.33 ns)

 <State 3>: 5.56ns
The critical path consists of the following:
	'load' operation ('varinx3_1024_23_load_1', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:926) on array 'varinx3_1024_23' [77]  (2.39 ns)
	'select' operation ('f_0_in_in_in', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:920) [249]  (0.84 ns)
	'getelementptr' operation ('Lam_buf6a_addr_1', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1046) [352]  (0 ns)
	'load' operation ('lTabE[2]', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1046) on array 'Lam_buf6a' [353]  (2.33 ns)

 <State 4>: 3.17ns
The critical path consists of the following:
	'load' operation ('SpEtaPrevC_load', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1052) on array 'SpEtaPrevC' [360]  (2.33 ns)
	'select' operation ('pTabE[0]', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:1265) [602]  (0.84 ns)
	'insertvalue' operation ('newret150', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [719]  (0 ns)
	'insertvalue' operation ('newret152', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [720]  (0 ns)
	'insertvalue' operation ('newret154', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [721]  (0 ns)
	'insertvalue' operation ('newret156', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [722]  (0 ns)
	'insertvalue' operation ('newret158', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [723]  (0 ns)
	'insertvalue' operation ('newret159', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [724]  (0 ns)
	'insertvalue' operation ('newret160', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [725]  (0 ns)
	'insertvalue' operation ('newret161', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [726]  (0 ns)
	'insertvalue' operation ('newret162', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [727]  (0 ns)
	'insertvalue' operation ('newret163', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [728]  (0 ns)
	'insertvalue' operation ('newret164', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [729]  (0 ns)
	'insertvalue' operation ('newret165', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [730]  (0 ns)
	'insertvalue' operation ('newret166', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [731]  (0 ns)
	'insertvalue' operation ('newret167', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [732]  (0 ns)
	'insertvalue' operation ('newret168', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [733]  (0 ns)
	'insertvalue' operation ('newret169', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [734]  (0 ns)
	'insertvalue' operation ('newret170', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [735]  (0 ns)
	'insertvalue' operation ('newret171', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [736]  (0 ns)
	'insertvalue' operation ('newret172', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [737]  (0 ns)
	'insertvalue' operation ('newret173', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [738]  (0 ns)
	'insertvalue' operation ('newret174', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [739]  (0 ns)
	'insertvalue' operation ('newret175', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [740]  (0 ns)
	'insertvalue' operation ('newret176', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [741]  (0 ns)
	'insertvalue' operation ('newret177', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [742]  (0 ns)
	'insertvalue' operation ('newret178', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [743]  (0 ns)
	'insertvalue' operation ('newret179', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [744]  (0 ns)
	'insertvalue' operation ('newret180', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [745]  (0 ns)
	'insertvalue' operation ('newret181', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [746]  (0 ns)
	'insertvalue' operation ('newret182', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [747]  (0 ns)
	'insertvalue' operation ('newret183', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [748]  (0 ns)
	'insertvalue' operation ('newret184', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [749]  (0 ns)
	'insertvalue' operation ('newret185', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [750]  (0 ns)
	'insertvalue' operation ('newret186', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [751]  (0 ns)
	'insertvalue' operation ('newret187', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [752]  (0 ns)
	'insertvalue' operation ('newret188', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [753]  (0 ns)
	'insertvalue' operation ('newret189', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [754]  (0 ns)
	'insertvalue' operation ('newret190', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [755]  (0 ns)
	'insertvalue' operation ('newret191', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [756]  (0 ns)
	'insertvalue' operation ('newret192', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [757]  (0 ns)
	'insertvalue' operation ('newret193', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [758]  (0 ns)
	'insertvalue' operation ('newret194', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [759]  (0 ns)
	'insertvalue' operation ('newret195', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [760]  (0 ns)
	'insertvalue' operation ('newret196', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [761]  (0 ns)
	'insertvalue' operation ('newret197', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [762]  (0 ns)
	'insertvalue' operation ('newret198', LDPC_Decoder3U/HLSLdpcLogDecScaledMin.cpp:922) [763]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
