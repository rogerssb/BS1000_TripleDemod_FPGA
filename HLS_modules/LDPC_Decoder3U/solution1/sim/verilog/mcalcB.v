// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mcalcB (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        Lam_tabx_0,
        Peta_tabx_0,
        Lam_tabx_1,
        Peta_tabx_1,
        Lam_tabx_2,
        Peta_tabx_2,
        Eta_ans_0,
        Eta_ans_0_ap_vld,
        Eta_ans_1_32,
        Eta_ans_1_32_ap_vld,
        Eta_ans_2_25,
        Eta_ans_2_25_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv12_7E = 12'b1111110;
parameter    ap_const_lv12_3E = 12'b111110;
parameter    ap_const_lv12_1E = 12'b11110;
parameter    ap_const_lv12_E = 12'b1110;
parameter    ap_const_lv12_6 = 12'b110;
parameter    ap_const_lv12_2 = 12'b10;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv7_1F = 7'b11111;
parameter    ap_const_lv7_3F = 7'b111111;
parameter    ap_const_lv7_7 = 7'b111;
parameter    ap_const_lv7_F = 7'b1111;
parameter    ap_const_lv8_0 = 8'b00000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] Lam_tabx_0;
input  [15:0] Peta_tabx_0;
input  [15:0] Lam_tabx_1;
input  [15:0] Peta_tabx_1;
input  [15:0] Lam_tabx_2;
input  [15:0] Peta_tabx_2;
output  [15:0] Eta_ans_0;
output   Eta_ans_0_ap_vld;
output  [15:0] Eta_ans_1_32;
output   Eta_ans_1_32_ap_vld;
output  [15:0] Eta_ans_2_25;
output   Eta_ans_2_25_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Eta_ans_0_ap_vld;
reg Eta_ans_1_32_ap_vld;
reg Eta_ans_2_25_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] tmp_786_fu_86_p3;
reg   [0:0] tmp_786_reg_724;
wire   [0:0] tmp_697_fu_108_p2;
reg   [0:0] tmp_697_reg_730;
wire   [0:0] tmp_698_fu_114_p2;
reg   [0:0] tmp_698_reg_736;
wire   [0:0] tmp_699_fu_120_p2;
reg   [0:0] tmp_699_reg_742;
wire   [0:0] tmp_700_fu_126_p2;
reg   [0:0] tmp_700_reg_748;
wire   [0:0] tmp_701_fu_132_p2;
reg   [0:0] tmp_701_reg_754;
wire   [0:0] tmp_702_fu_138_p2;
reg   [0:0] tmp_702_reg_759;
wire   [0:0] tmp_789_fu_166_p3;
reg   [0:0] tmp_789_reg_764;
wire   [0:0] tmp_1547_1_fu_188_p2;
reg   [0:0] tmp_1547_1_reg_770;
wire   [0:0] tmp_1548_1_fu_194_p2;
reg   [0:0] tmp_1548_1_reg_776;
wire   [0:0] tmp_1549_1_fu_200_p2;
reg   [0:0] tmp_1549_1_reg_782;
wire   [0:0] tmp_1550_1_fu_206_p2;
reg   [0:0] tmp_1550_1_reg_788;
wire   [0:0] tmp_1551_1_fu_212_p2;
reg   [0:0] tmp_1551_1_reg_794;
wire   [0:0] tmp_1552_1_fu_218_p2;
reg   [0:0] tmp_1552_1_reg_799;
wire   [0:0] tmp_792_fu_246_p3;
reg   [0:0] tmp_792_reg_804;
wire   [0:0] tmp_1547_2_fu_268_p2;
reg   [0:0] tmp_1547_2_reg_810;
wire   [0:0] tmp_1548_2_fu_274_p2;
reg   [0:0] tmp_1548_2_reg_816;
wire   [0:0] tmp_1549_2_fu_280_p2;
reg   [0:0] tmp_1549_2_reg_822;
wire   [0:0] tmp_1550_2_fu_286_p2;
reg   [0:0] tmp_1550_2_reg_828;
wire   [0:0] tmp_1551_2_fu_292_p2;
reg   [0:0] tmp_1551_2_reg_834;
wire   [0:0] tmp_1552_2_fu_298_p2;
reg   [0:0] tmp_1552_2_reg_839;
wire   [11:0] tmp_785_fu_76_p1;
wire   [11:0] tmp_784_fu_68_p1;
wire   [11:0] vArg_V_fu_80_p2;
wire   [11:0] vArg_V_6_fu_94_p2;
wire   [11:0] p_s_fu_100_p3;
wire   [11:0] tmp_788_fu_156_p1;
wire   [11:0] tmp_787_fu_148_p1;
wire   [11:0] vArg_V_1_fu_160_p2;
wire   [11:0] vArg_V_6_1_fu_174_p2;
wire   [11:0] p_1_fu_180_p3;
wire   [11:0] tmp_791_fu_236_p1;
wire   [11:0] tmp_790_fu_228_p1;
wire   [11:0] vArg_V_2_fu_240_p2;
wire   [11:0] vArg_V_6_2_fu_254_p2;
wire   [11:0] p_2_fu_260_p3;
wire   [2:0] storemerge_cast_cast_fu_304_p3;
wire   [2:0] sel_tmp_fu_311_p3;
wire   [0:0] sel_tmp1_fu_322_p2;
wire   [0:0] sel_tmp6_fu_332_p2;
wire   [0:0] sel_tmp7_fu_337_p2;
wire   [0:0] sel_tmp2_fu_327_p2;
wire   [0:0] tmp_fu_350_p2;
wire   [6:0] sel_tmp3_cast_fu_342_p3;
wire  signed [6:0] sel_tmp_cast_fu_318_p1;
wire   [0:0] sel_tmp13_fu_364_p2;
wire   [0:0] sel_tmp22_fu_374_p2;
wire   [0:0] sel_tmp23_fu_379_p2;
wire   [0:0] sel_tmp14_fu_369_p2;
wire   [0:0] tmp_729_fu_392_p2;
wire   [6:0] sel_tmp15_cast_fu_384_p3;
wire   [6:0] sel_tmp8_fu_356_p3;
wire   [2:0] storemerge_1_cast_ca_fu_406_p3;
wire   [2:0] sel_tmp25_fu_413_p3;
wire   [0:0] sel_tmp26_fu_424_p2;
wire   [0:0] sel_tmp31_fu_434_p2;
wire   [0:0] sel_tmp32_fu_439_p2;
wire   [0:0] sel_tmp27_fu_429_p2;
wire   [0:0] tmp_730_fu_452_p2;
wire   [6:0] sel_tmp28_cast_fu_444_p3;
wire  signed [6:0] sel_tmp25_cast_fu_420_p1;
wire   [0:0] sel_tmp38_fu_466_p2;
wire   [0:0] sel_tmp47_fu_476_p2;
wire   [0:0] sel_tmp48_fu_481_p2;
wire   [0:0] sel_tmp39_fu_471_p2;
wire   [0:0] tmp_731_fu_494_p2;
wire   [6:0] sel_tmp40_cast_fu_486_p3;
wire   [6:0] sel_tmp33_fu_458_p3;
wire   [2:0] storemerge_2_cast_ca_fu_508_p3;
wire   [2:0] sel_tmp50_fu_515_p3;
wire   [0:0] sel_tmp51_fu_526_p2;
wire   [0:0] sel_tmp56_fu_536_p2;
wire   [0:0] sel_tmp57_fu_541_p2;
wire   [0:0] sel_tmp52_fu_531_p2;
wire   [0:0] tmp_732_fu_554_p2;
wire   [6:0] sel_tmp53_cast_fu_546_p3;
wire  signed [6:0] sel_tmp50_cast_fu_522_p1;
wire   [0:0] sel_tmp63_fu_568_p2;
wire   [0:0] sel_tmp72_fu_578_p2;
wire   [0:0] sel_tmp73_fu_583_p2;
wire   [0:0] sel_tmp64_fu_573_p2;
wire   [0:0] tmp_733_fu_596_p2;
wire   [6:0] sel_tmp65_cast_fu_588_p3;
wire   [6:0] sel_tmp58_fu_560_p3;
wire   [6:0] rhs_V_fu_602_p3;
wire   [6:0] lhs_V_fu_500_p3;
wire   [6:0] r_V_fu_622_p2;
wire   [7:0] tmp_1409_cast_fu_628_p1;
wire   [0:0] tmp_s_fu_610_p2;
wire   [7:0] mf10_fu_632_p2;
wire   [7:0] tmp_705_fu_638_p3;
wire   [6:0] lhs_V_69_fu_398_p3;
wire   [6:0] r_V_191_fu_656_p2;
wire   [7:0] tmp_1411_cast_fu_662_p1;
wire   [0:0] tmp_703_fu_614_p2;
wire   [7:0] mf8_fu_666_p2;
wire   [7:0] tmp_706_fu_672_p3;
wire   [6:0] r_V_192_fu_690_p2;
wire   [7:0] tmp_1413_cast_fu_696_p1;
wire   [0:0] tmp_704_fu_618_p2;
wire   [7:0] mf_fu_700_p2;
wire   [7:0] tmp_707_fu_706_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_pipeline_idle_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) | ~(1'b1 == ap_ce)))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        tmp_1547_1_reg_770 <= tmp_1547_1_fu_188_p2;
        tmp_1547_2_reg_810 <= tmp_1547_2_fu_268_p2;
        tmp_1548_1_reg_776 <= tmp_1548_1_fu_194_p2;
        tmp_1548_2_reg_816 <= tmp_1548_2_fu_274_p2;
        tmp_1549_1_reg_782 <= tmp_1549_1_fu_200_p2;
        tmp_1549_2_reg_822 <= tmp_1549_2_fu_280_p2;
        tmp_1550_1_reg_788 <= tmp_1550_1_fu_206_p2;
        tmp_1550_2_reg_828 <= tmp_1550_2_fu_286_p2;
        tmp_1551_1_reg_794 <= tmp_1551_1_fu_212_p2;
        tmp_1551_2_reg_834 <= tmp_1551_2_fu_292_p2;
        tmp_1552_1_reg_799 <= tmp_1552_1_fu_218_p2;
        tmp_1552_2_reg_839 <= tmp_1552_2_fu_298_p2;
        tmp_697_reg_730 <= tmp_697_fu_108_p2;
        tmp_698_reg_736 <= tmp_698_fu_114_p2;
        tmp_699_reg_742 <= tmp_699_fu_120_p2;
        tmp_700_reg_748 <= tmp_700_fu_126_p2;
        tmp_701_reg_754 <= tmp_701_fu_132_p2;
        tmp_702_reg_759 <= tmp_702_fu_138_p2;
        tmp_786_reg_724 <= vArg_V_fu_80_p2[ap_const_lv32_B];
        tmp_789_reg_764 <= vArg_V_1_fu_160_p2[ap_const_lv32_B];
        tmp_792_reg_804 <= vArg_V_2_fu_240_p2[ap_const_lv32_B];
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        Eta_ans_0_ap_vld = 1'b1;
    end else begin
        Eta_ans_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        Eta_ans_1_32_ap_vld = 1'b1;
    end else begin
        Eta_ans_1_32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        Eta_ans_2_25_ap_vld = 1'b1;
    end else begin
        Eta_ans_2_25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0)) | ((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_enable_reg_pp0_iter1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b0 == ap_enable_reg_pp0_iter0))) begin
        ap_pipeline_idle_pp0 = 1'b1;
    end else begin
        ap_pipeline_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Eta_ans_0 = $signed(tmp_705_fu_638_p3);

assign Eta_ans_1_32 = $signed(tmp_706_fu_672_p3);

assign Eta_ans_2_25 = $signed(tmp_707_fu_706_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_0];

assign ap_enable_reg_pp0_iter0 = ap_start;

assign lhs_V_69_fu_398_p3 = ((tmp_729_fu_392_p2[0:0] === 1'b1) ? sel_tmp15_cast_fu_384_p3 : sel_tmp8_fu_356_p3);

assign lhs_V_fu_500_p3 = ((tmp_731_fu_494_p2[0:0] === 1'b1) ? sel_tmp40_cast_fu_486_p3 : sel_tmp33_fu_458_p3);

assign mf10_fu_632_p2 = (ap_const_lv8_0 - tmp_1409_cast_fu_628_p1);

assign mf8_fu_666_p2 = (ap_const_lv8_0 - tmp_1411_cast_fu_662_p1);

assign mf_fu_700_p2 = (ap_const_lv8_0 - tmp_1413_cast_fu_696_p1);

assign p_1_fu_180_p3 = ((tmp_789_fu_166_p3[0:0] === 1'b1) ? vArg_V_6_1_fu_174_p2 : vArg_V_1_fu_160_p2);

assign p_2_fu_260_p3 = ((tmp_792_fu_246_p3[0:0] === 1'b1) ? vArg_V_6_2_fu_254_p2 : vArg_V_2_fu_240_p2);

assign p_s_fu_100_p3 = ((tmp_786_fu_86_p3[0:0] === 1'b1) ? vArg_V_6_fu_94_p2 : vArg_V_fu_80_p2);

assign r_V_191_fu_656_p2 = (lhs_V_69_fu_398_p3 & rhs_V_fu_602_p3);

assign r_V_192_fu_690_p2 = (lhs_V_69_fu_398_p3 & lhs_V_fu_500_p3);

assign r_V_fu_622_p2 = (rhs_V_fu_602_p3 & lhs_V_fu_500_p3);

assign rhs_V_fu_602_p3 = ((tmp_733_fu_596_p2[0:0] === 1'b1) ? sel_tmp65_cast_fu_588_p3 : sel_tmp58_fu_560_p3);

assign sel_tmp13_fu_364_p2 = (tmp_699_reg_742 ^ 1'b1);

assign sel_tmp14_fu_369_p2 = (tmp_700_reg_748 & sel_tmp13_fu_364_p2);

assign sel_tmp15_cast_fu_384_p3 = ((sel_tmp23_fu_379_p2[0:0] === 1'b1) ? ap_const_lv7_7 : ap_const_lv7_F);

assign sel_tmp1_fu_322_p2 = (tmp_697_reg_730 ^ 1'b1);

assign sel_tmp22_fu_374_p2 = (tmp_700_reg_748 ^ 1'b1);

assign sel_tmp23_fu_379_p2 = (tmp_701_reg_754 & sel_tmp22_fu_374_p2);

assign sel_tmp25_cast_fu_420_p1 = $signed(sel_tmp25_fu_413_p3);

assign sel_tmp25_fu_413_p3 = ((tmp_1552_1_reg_799[0:0] === 1'b1) ? storemerge_1_cast_ca_fu_406_p3 : ap_const_lv3_1);

assign sel_tmp26_fu_424_p2 = (tmp_1547_1_reg_770 ^ 1'b1);

assign sel_tmp27_fu_429_p2 = (tmp_1548_1_reg_776 & sel_tmp26_fu_424_p2);

assign sel_tmp28_cast_fu_444_p3 = ((sel_tmp32_fu_439_p2[0:0] === 1'b1) ? ap_const_lv7_1F : ap_const_lv7_3F);

assign sel_tmp2_fu_327_p2 = (tmp_698_reg_736 & sel_tmp1_fu_322_p2);

assign sel_tmp31_fu_434_p2 = (tmp_1548_1_reg_776 ^ 1'b1);

assign sel_tmp32_fu_439_p2 = (tmp_1549_1_reg_782 & sel_tmp31_fu_434_p2);

assign sel_tmp33_fu_458_p3 = ((tmp_730_fu_452_p2[0:0] === 1'b1) ? sel_tmp28_cast_fu_444_p3 : sel_tmp25_cast_fu_420_p1);

assign sel_tmp38_fu_466_p2 = (tmp_1549_1_reg_782 ^ 1'b1);

assign sel_tmp39_fu_471_p2 = (tmp_1550_1_reg_788 & sel_tmp38_fu_466_p2);

assign sel_tmp3_cast_fu_342_p3 = ((sel_tmp7_fu_337_p2[0:0] === 1'b1) ? ap_const_lv7_1F : ap_const_lv7_3F);

assign sel_tmp40_cast_fu_486_p3 = ((sel_tmp48_fu_481_p2[0:0] === 1'b1) ? ap_const_lv7_7 : ap_const_lv7_F);

assign sel_tmp47_fu_476_p2 = (tmp_1550_1_reg_788 ^ 1'b1);

assign sel_tmp48_fu_481_p2 = (tmp_1551_1_reg_794 & sel_tmp47_fu_476_p2);

assign sel_tmp50_cast_fu_522_p1 = $signed(sel_tmp50_fu_515_p3);

assign sel_tmp50_fu_515_p3 = ((tmp_1552_2_reg_839[0:0] === 1'b1) ? storemerge_2_cast_ca_fu_508_p3 : ap_const_lv3_1);

assign sel_tmp51_fu_526_p2 = (tmp_1547_2_reg_810 ^ 1'b1);

assign sel_tmp52_fu_531_p2 = (tmp_1548_2_reg_816 & sel_tmp51_fu_526_p2);

assign sel_tmp53_cast_fu_546_p3 = ((sel_tmp57_fu_541_p2[0:0] === 1'b1) ? ap_const_lv7_1F : ap_const_lv7_3F);

assign sel_tmp56_fu_536_p2 = (tmp_1548_2_reg_816 ^ 1'b1);

assign sel_tmp57_fu_541_p2 = (tmp_1549_2_reg_822 & sel_tmp56_fu_536_p2);

assign sel_tmp58_fu_560_p3 = ((tmp_732_fu_554_p2[0:0] === 1'b1) ? sel_tmp53_cast_fu_546_p3 : sel_tmp50_cast_fu_522_p1);

assign sel_tmp63_fu_568_p2 = (tmp_1549_2_reg_822 ^ 1'b1);

assign sel_tmp64_fu_573_p2 = (tmp_1550_2_reg_828 & sel_tmp63_fu_568_p2);

assign sel_tmp65_cast_fu_588_p3 = ((sel_tmp73_fu_583_p2[0:0] === 1'b1) ? ap_const_lv7_7 : ap_const_lv7_F);

assign sel_tmp6_fu_332_p2 = (tmp_698_reg_736 ^ 1'b1);

assign sel_tmp72_fu_578_p2 = (tmp_1550_2_reg_828 ^ 1'b1);

assign sel_tmp73_fu_583_p2 = (tmp_1551_2_reg_834 & sel_tmp72_fu_578_p2);

assign sel_tmp7_fu_337_p2 = (tmp_699_reg_742 & sel_tmp6_fu_332_p2);

assign sel_tmp8_fu_356_p3 = ((tmp_fu_350_p2[0:0] === 1'b1) ? sel_tmp3_cast_fu_342_p3 : sel_tmp_cast_fu_318_p1);

assign sel_tmp_cast_fu_318_p1 = $signed(sel_tmp_fu_311_p3);

assign sel_tmp_fu_311_p3 = ((tmp_702_reg_759[0:0] === 1'b1) ? storemerge_cast_cast_fu_304_p3 : ap_const_lv3_1);

assign storemerge_1_cast_ca_fu_406_p3 = ((tmp_1547_1_reg_770[0:0] === 1'b1) ? ap_const_lv3_7 : ap_const_lv3_3);

assign storemerge_2_cast_ca_fu_508_p3 = ((tmp_1547_2_reg_810[0:0] === 1'b1) ? ap_const_lv3_7 : ap_const_lv3_3);

assign storemerge_cast_cast_fu_304_p3 = ((tmp_697_reg_730[0:0] === 1'b1) ? ap_const_lv3_7 : ap_const_lv3_3);

assign tmp_1409_cast_fu_628_p1 = r_V_fu_622_p2;

assign tmp_1411_cast_fu_662_p1 = r_V_191_fu_656_p2;

assign tmp_1413_cast_fu_696_p1 = r_V_192_fu_690_p2;

assign tmp_1547_1_fu_188_p2 = (($signed(p_1_fu_180_p3) > $signed(12'b1111110)) ? 1'b1 : 1'b0);

assign tmp_1547_2_fu_268_p2 = (($signed(p_2_fu_260_p3) > $signed(12'b1111110)) ? 1'b1 : 1'b0);

assign tmp_1548_1_fu_194_p2 = (($signed(p_1_fu_180_p3) > $signed(12'b111110)) ? 1'b1 : 1'b0);

assign tmp_1548_2_fu_274_p2 = (($signed(p_2_fu_260_p3) > $signed(12'b111110)) ? 1'b1 : 1'b0);

assign tmp_1549_1_fu_200_p2 = (($signed(p_1_fu_180_p3) > $signed(12'b11110)) ? 1'b1 : 1'b0);

assign tmp_1549_2_fu_280_p2 = (($signed(p_2_fu_260_p3) > $signed(12'b11110)) ? 1'b1 : 1'b0);

assign tmp_1550_1_fu_206_p2 = (($signed(p_1_fu_180_p3) > $signed(12'b1110)) ? 1'b1 : 1'b0);

assign tmp_1550_2_fu_286_p2 = (($signed(p_2_fu_260_p3) > $signed(12'b1110)) ? 1'b1 : 1'b0);

assign tmp_1551_1_fu_212_p2 = (($signed(p_1_fu_180_p3) > $signed(12'b110)) ? 1'b1 : 1'b0);

assign tmp_1551_2_fu_292_p2 = (($signed(p_2_fu_260_p3) > $signed(12'b110)) ? 1'b1 : 1'b0);

assign tmp_1552_1_fu_218_p2 = (($signed(p_1_fu_180_p3) > $signed(12'b10)) ? 1'b1 : 1'b0);

assign tmp_1552_2_fu_298_p2 = (($signed(p_2_fu_260_p3) > $signed(12'b10)) ? 1'b1 : 1'b0);

assign tmp_697_fu_108_p2 = (($signed(p_s_fu_100_p3) > $signed(12'b1111110)) ? 1'b1 : 1'b0);

assign tmp_698_fu_114_p2 = (($signed(p_s_fu_100_p3) > $signed(12'b111110)) ? 1'b1 : 1'b0);

assign tmp_699_fu_120_p2 = (($signed(p_s_fu_100_p3) > $signed(12'b11110)) ? 1'b1 : 1'b0);

assign tmp_700_fu_126_p2 = (($signed(p_s_fu_100_p3) > $signed(12'b1110)) ? 1'b1 : 1'b0);

assign tmp_701_fu_132_p2 = (($signed(p_s_fu_100_p3) > $signed(12'b110)) ? 1'b1 : 1'b0);

assign tmp_702_fu_138_p2 = (($signed(p_s_fu_100_p3) > $signed(12'b10)) ? 1'b1 : 1'b0);

assign tmp_703_fu_614_p2 = (tmp_786_reg_724 ^ tmp_792_reg_804);

assign tmp_704_fu_618_p2 = (tmp_786_reg_724 ^ tmp_789_reg_764);

assign tmp_705_fu_638_p3 = ((tmp_s_fu_610_p2[0:0] === 1'b1) ? tmp_1409_cast_fu_628_p1 : mf10_fu_632_p2);

assign tmp_706_fu_672_p3 = ((tmp_703_fu_614_p2[0:0] === 1'b1) ? tmp_1411_cast_fu_662_p1 : mf8_fu_666_p2);

assign tmp_707_fu_706_p3 = ((tmp_704_fu_618_p2[0:0] === 1'b1) ? tmp_1413_cast_fu_696_p1 : mf_fu_700_p2);

assign tmp_729_fu_392_p2 = (sel_tmp23_fu_379_p2 | sel_tmp14_fu_369_p2);

assign tmp_730_fu_452_p2 = (sel_tmp32_fu_439_p2 | sel_tmp27_fu_429_p2);

assign tmp_731_fu_494_p2 = (sel_tmp48_fu_481_p2 | sel_tmp39_fu_471_p2);

assign tmp_732_fu_554_p2 = (sel_tmp57_fu_541_p2 | sel_tmp52_fu_531_p2);

assign tmp_733_fu_596_p2 = (sel_tmp73_fu_583_p2 | sel_tmp64_fu_573_p2);

assign tmp_784_fu_68_p1 = Lam_tabx_0[11:0];

assign tmp_785_fu_76_p1 = Peta_tabx_0[11:0];

assign tmp_786_fu_86_p3 = vArg_V_fu_80_p2[ap_const_lv32_B];

assign tmp_787_fu_148_p1 = Lam_tabx_1[11:0];

assign tmp_788_fu_156_p1 = Peta_tabx_1[11:0];

assign tmp_789_fu_166_p3 = vArg_V_1_fu_160_p2[ap_const_lv32_B];

assign tmp_790_fu_228_p1 = Lam_tabx_2[11:0];

assign tmp_791_fu_236_p1 = Peta_tabx_2[11:0];

assign tmp_792_fu_246_p3 = vArg_V_2_fu_240_p2[ap_const_lv32_B];

assign tmp_fu_350_p2 = (sel_tmp7_fu_337_p2 | sel_tmp2_fu_327_p2);

assign tmp_s_fu_610_p2 = (tmp_789_reg_764 ^ tmp_792_reg_804);

assign vArg_V_1_fu_160_p2 = (tmp_788_fu_156_p1 - tmp_787_fu_148_p1);

assign vArg_V_2_fu_240_p2 = (tmp_791_fu_236_p1 - tmp_790_fu_228_p1);

assign vArg_V_6_1_fu_174_p2 = (ap_const_lv12_0 - vArg_V_1_fu_160_p2);

assign vArg_V_6_2_fu_254_p2 = (ap_const_lv12_0 - vArg_V_2_fu_240_p2);

assign vArg_V_6_fu_94_p2 = (ap_const_lv12_0 - vArg_V_fu_80_p2);

assign vArg_V_fu_80_p2 = (tmp_785_fu_76_p1 - tmp_784_fu_68_p1);

endmodule //mcalcB
