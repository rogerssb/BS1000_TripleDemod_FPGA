-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mcalcAA_23_varinxrcU_rom is 
    generic(
             dwidth     : integer := 30; 
             awidth     : integer := 8; 
             mem_size    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mcalcAA_23_varinxrcU_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "100010110000000000000011111110", 1 => "100011000000000000100011111111", 
    2 => "100011010000000001000011000000", 3 => "100011100000000001100011000001", 
    4 => "100011110000000010000011000010", 5 => "100100000000000010100011000011", 
    6 => "100100010000000011000011000100", 7 => "100100100000000011100011000101", 
    8 => "100100110000000100000011000110", 9 => "100101000000000100100011000111", 
    10 => "100101010000000101000011001000", 11 => "100101100000000101100011001001", 
    12 => "100101110000000110000011001010", 13 => "100110000000000110100011001011", 
    14 => "100110010000000111000011001100", 15 => "100110100000000111100011001101", 
    16 => "100110110000001000000011001110", 17 => "100111000000001000100011001111", 
    18 => "100111010000001001000011010000", 19 => "100111100000001001100011010001", 
    20 => "100111110000001010000011010010", 21 => "101000000000001010100011010011", 
    22 => "101000010000001011000011010100", 23 => "101000100000001011100011010101", 
    24 => "101000110000001100000011010110", 25 => "101001000000001100100011010111", 
    26 => "101001010000001101000011011000", 27 => "101001100000001101100011011001", 
    28 => "101001110000001110000011011010", 29 => "101010000000001110100011011011", 
    30 => "101010010000001111000011011100", 31 => "101010100000001111100011011101", 
    32 => "101010110000010000000011011110", 33 => "101011000000010000100011011111", 
    34 => "101011010000010001000011100000", 35 => "101011100000010001100011100001", 
    36 => "101011110000010010000011100010", 37 => "101100000000010010100011100011", 
    38 => "101100010000010011000011100100", 39 => "101100100000010011100011100101", 
    40 => "101100110000010100000011100110", 41 => "101101000000010100100011100111", 
    42 => "101101010000010101000011101000", 43 => "101101100000010101100011101001", 
    44 => "101101110000010110000011101010", 45 => "101110000000010110100011101011", 
    46 => "101110010000010111000011101100", 47 => "101110100000010111100011101101", 
    48 => "101110110000011000000011101110", 49 => "101111000000011000100011101111", 
    50 => "101111010000011001000011110000", 51 => "101111100000011001100011110001", 
    52 => "101111110000011010000011110010", 53 => "100000000000011010100011110011", 
    54 => "100000010000011011000011110100", 55 => "100000100000011011100011110101", 
    56 => "100000110000011100000011110110", 57 => "100001000000011100100011110111", 
    58 => "100001010000011101000011111000", 59 => "100001100000011101100011111001", 
    60 => "100001110000011110000011111010", 61 => "100010000000011110100011111011", 
    62 => "100010010000011111000011111100", 63 => "100010100000011111100011111101", 
    64 => "000111010000100000000011110000", 65 => "000111100000100000100011110001", 
    66 => "000111110000100001000011110010", 67 => "001000000000100001100011110011", 
    68 => "001000010000100010000011110100", 69 => "001000100000100010100011110101", 
    70 => "001000110000100011000011110110", 71 => "001001000000100011100011110111", 
    72 => "001001010000100100000011111000", 73 => "001001100000100100100011111001", 
    74 => "001001110000100101000011111010", 75 => "001010000000100101100011111011", 
    76 => "001010010000100110000011111100", 77 => "001010100000100110100011111101", 
    78 => "001010110000100111000011111110", 79 => "001011000000100111100011111111", 
    80 => "001011010000101000000011000000", 81 => "001011100000101000100011000001", 
    82 => "001011110000101001000011000010", 83 => "001100000000101001100011000011", 
    84 => "001100010000101010000011000100", 85 => "001100100000101010100011000101", 
    86 => "001100110000101011000011000110", 87 => "001101000000101011100011000111", 
    88 => "001101010000101100000011001000", 89 => "001101100000101100100011001001", 
    90 => "001101110000101101000011001010", 91 => "001110000000101101100011001011", 
    92 => "001110010000101110000011001100", 93 => "001110100000101110100011001101", 
    94 => "001110110000101111000011001110", 95 => "001111000000101111100011001111", 
    96 => "001111010000110000000011010000", 97 => "001111100000110000100011010001", 
    98 => "001111110000110001000011010010", 99 => "000000000000110001100011010011", 
    100 => "000000010000110010000011010100", 101 => "000000100000110010100011010101", 
    102 => "000000110000110011000011010110", 103 => "000001000000110011100011010111", 
    104 => "000001010000110100000011011000", 105 => "000001100000110100100011011001", 
    106 => "000001110000110101000011011010", 107 => "000010000000110101100011011011", 
    108 => "000010010000110110000011011100", 109 => "000010100000110110100011011101", 
    110 => "000010110000110111000011011110", 111 => "000011000000110111100011011111", 
    112 => "000011010000111000000011100000", 113 => "000011100000111000100011100001", 
    114 => "000011110000111001000011100010", 115 => "000100000000111001100011100011", 
    116 => "000100010000111010000011100100", 117 => "000100100000111010100011100101", 
    118 => "000100110000111011000011100110", 119 => "000101000000111011100011100111", 
    120 => "000101010000111100000011101000", 121 => "000101100000111100100011101001", 
    122 => "000101110000111101000011101010", 123 => "000110000000111101100011101011", 
    124 => "000110010000111110000011101100", 125 => "000110100000111110100011101101", 
    126 => "000110110000111111000011101110", 127 => "000111000000111111100011101111", 
    128 => "001100000001000000000010001010", 129 => "001100010001000000100010001011", 
    130 => "001100100001000001000010001100", 131 => "001100110001000001100010001101", 
    132 => "001101000001000010000010001110", 133 => "001101010001000010100010001111", 
    134 => "001101100001000011000010010000", 135 => "001101110001000011100010010001", 
    136 => "001110000001000100000010010010", 137 => "001110010001000100100010010011", 
    138 => "001110100001000101000010010100", 139 => "001110110001000101100010010101", 
    140 => "001111000001000110000010010110", 141 => "001111010001000110100010010111", 
    142 => "001111100001000111000010011000", 143 => "001111110001000111100010011001", 
    144 => "000000000001001000000010011010", 145 => "000000010001001000100010011011", 
    146 => "000000100001001001000010011100", 147 => "000000110001001001100010011101", 
    148 => "000001000001001010000010011110", 149 => "000001010001001010100010011111", 
    150 => "000001100001001011000010100000", 151 => "000001110001001011100010100001", 
    152 => "000010000001001100000010100010", 153 => "000010010001001100100010100011", 
    154 => "000010100001001101000010100100", 155 => "000010110001001101100010100101", 
    156 => "000011000001001110000010100110", 157 => "000011010001001110100010100111", 
    158 => "000011100001001111000010101000", 159 => "000011110001001111100010101001", 
    160 => "000100000001010000000010101010", 161 => "000100010001010000100010101011", 
    162 => "000100100001010001000010101100", 163 => "000100110001010001100010101101", 
    164 => "000101000001010010000010101110", 165 => "000101010001010010100010101111", 
    166 => "000101100001010011000010110000", 167 => "000101110001010011100010110001", 
    168 => "000110000001010100000010110010", 169 => "000110010001010100100010110011", 
    170 => "000110100001010101000010110100", 171 => "000110110001010101100010110101", 
    172 => "000111000001010110000010110110", 173 => "000111010001010110100010110111", 
    174 => "000111100001010111000010111000", 175 => "000111110001010111100010111001", 
    176 => "001000000001011000000010111010", 177 => "001000010001011000100010111011", 
    178 => "001000100001011001000010111100", 179 => "001000110001011001100010111101", 
    180 => "001001000001011010000010111110", 181 => "001001010001011010100010111111", 
    182 => "001001100001011011000010000000", 183 => "001001110001011011100010000001", 
    184 => "001010000001011100000010000010", 185 => "001010010001011100100010000011", 
    186 => "001010100001011101000010000100", 187 => "001010110001011101100010000101", 
    188 => "001011000001011110000010000110", 189 => "001011010001011110100010000111", 
    190 => "001011100001011111000010001000", 191 => "001011110001011111100010001001", 
    192 => "010011110001100000000011010111", 193 => "010100000001100000100011011000", 
    194 => "010100010001100001000011011001", 195 => "010100100001100001100011011010", 
    196 => "010100110001100010000011011011", 197 => "010101000001100010100011011100", 
    198 => "010101010001100011000011011101", 199 => "010101100001100011100011011110", 
    200 => "010101110001100100000011011111", 201 => "010110000001100100100011100000", 
    202 => "010110010001100101000011100001", 203 => "010110100001100101100011100010", 
    204 => "010110110001100110000011100011", 205 => "010111000001100110100011100100", 
    206 => "010111010001100111000011100101", 207 => "010111100001100111100011100110", 
    208 => "010111110001101000000011100111", 209 => "011000000001101000100011101000", 
    210 => "011000010001101001000011101001", 211 => "011000100001101001100011101010", 
    212 => "011000110001101010000011101011", 213 => "011001000001101010100011101100", 
    214 => "011001010001101011000011101101", 215 => "011001100001101011100011101110", 
    216 => "011001110001101100000011101111", 217 => "011010000001101100100011110000", 
    218 => "011010010001101101000011110001", 219 => "011010100001101101100011110010", 
    220 => "011010110001101110000011110011", 221 => "011011000001101110100011110100", 
    222 => "011011010001101111000011110101", 223 => "011011100001101111100011110110", 
    224 => "011011110001110000000011110111", 225 => "011100000001110000100011111000", 
    226 => "011100010001110001000011111001", 227 => "011100100001110001100011111010", 
    228 => "011100110001110010000011111011", 229 => "011101000001110010100011111100", 
    230 => "011101010001110011000011111101", 231 => "011101100001110011100011111110", 
    232 => "011101110001110100000011111111", 233 => "011110000001110100100011000000", 
    234 => "011110010001110101000011000001", 235 => "011110100001110101100011000010", 
    236 => "011110110001110110000011000011", 237 => "011111000001110110100011000100", 
    238 => "011111010001110111000011000101", 239 => "011111100001110111100011000110", 
    240 => "011111110001111000000011000111", 241 => "010000000001111000100011001000", 
    242 => "010000010001111001000011001001", 243 => "010000100001111001100011001010", 
    244 => "010000110001111010000011001011", 245 => "010001000001111010100011001100", 
    246 => "010001010001111011000011001101", 247 => "010001100001111011100011001110", 
    248 => "010001110001111100000011001111", 249 => "010010000001111100100011010000", 
    250 => "010010010001111101000011010001", 251 => "010010100001111101100011010010", 
    252 => "010010110001111110000011010011", 253 => "010011000001111110100011010100", 
    254 => "010011010001111111000011010101", 255 => "010011100001111111100011010110" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity mcalcAA_23_varinxrcU is
    generic (
        DataWidth : INTEGER := 30;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mcalcAA_23_varinxrcU is
    component mcalcAA_23_varinxrcU_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mcalcAA_23_varinxrcU_rom_U :  component mcalcAA_23_varinxrcU_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


