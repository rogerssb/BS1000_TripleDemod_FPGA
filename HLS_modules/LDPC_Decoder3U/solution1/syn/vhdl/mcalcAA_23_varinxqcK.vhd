-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mcalcAA_23_varinxqcK_rom is 
    generic(
             dwidth     : integer := 30; 
             awidth     : integer := 8; 
             mem_size    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mcalcAA_23_varinxqcK_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "101011100000000111000000000000", 1 => "101011110000000111100000000001", 
    2 => "101100000000001000000000000010", 3 => "101100010000001000100000000011", 
    4 => "101100100000001001000000000100", 5 => "101100110000001001100000000101", 
    6 => "101101000000001010000000000110", 7 => "101101010000001010100000000111", 
    8 => "101101100000001011000000001000", 9 => "101101110000001011100000001001", 
    10 => "101110000000001100000000001010", 11 => "101110010000001100100000001011", 
    12 => "101110100000001101000000001100", 13 => "101110110000001101100000001101", 
    14 => "101111000000001110000000001110", 15 => "101111010000001110100000001111", 
    16 => "101111100000001111000000010000", 17 => "101111110000001111100000010001", 
    18 => "100000000000010000000000010010", 19 => "100000010000010000100000010011", 
    20 => "100000100000010001000000010100", 21 => "100000110000010001100000010101", 
    22 => "100001000000010010000000010110", 23 => "100001010000010010100000010111", 
    24 => "100001100000010011000000011000", 25 => "100001110000010011100000011001", 
    26 => "100010000000010100000000011010", 27 => "100010010000010100100000011011", 
    28 => "100010100000010101000000011100", 29 => "100010110000010101100000011101", 
    30 => "100011000000010110000000011110", 31 => "100011010000010110100000011111", 
    32 => "100011100000010111000000100000", 33 => "100011110000010111100000100001", 
    34 => "100100000000011000000000100010", 35 => "100100010000011000100000100011", 
    36 => "100100100000011001000000100100", 37 => "100100110000011001100000100101", 
    38 => "100101000000011010000000100110", 39 => "100101010000011010100000100111", 
    40 => "100101100000011011000000101000", 41 => "100101110000011011100000101001", 
    42 => "100110000000011100000000101010", 43 => "100110010000011100100000101011", 
    44 => "100110100000011101000000101100", 45 => "100110110000011101100000101101", 
    46 => "100111000000011110000000101110", 47 => "100111010000011110100000101111", 
    48 => "100111100000011111000000110000", 49 => "100111110000011111100000110001", 
    50 => "101000000000000000000000110010", 51 => "101000010000000000100000110011", 
    52 => "101000100000000001000000110100", 53 => "101000110000000001100000110101", 
    54 => "101001000000000010000000110110", 55 => "101001010000000010100000110111", 
    56 => "101001100000000011000000111000", 57 => "101001110000000011100000111001", 
    58 => "101010000000000100000000111010", 59 => "101010010000000100100000111011", 
    60 => "101010100000000101000000111100", 61 => "101010110000000101100000111101", 
    62 => "101011000000000110000000111110", 63 => "101011010000000110100000111111", 
    64 => "010011110000011011100001000000", 65 => "010100000000011100000001000001", 
    66 => "010100010000011100100001000010", 67 => "010100100000011101000001000011", 
    68 => "010100110000011101100001000100", 69 => "010101000000011110000001000101", 
    70 => "010101010000011110100001000110", 71 => "010101100000011111000001000111", 
    72 => "010101110000011111100001001000", 73 => "010110000000000000000001001001", 
    74 => "010110010000000000100001001010", 75 => "010110100000000001000001001011", 
    76 => "010110110000000001100001001100", 77 => "010111000000000010000001001101", 
    78 => "010111010000000010100001001110", 79 => "010111100000000011000001001111", 
    80 => "010111110000000011100001010000", 81 => "011000000000000100000001010001", 
    82 => "011000010000000100100001010010", 83 => "011000100000000101000001010011", 
    84 => "011000110000000101100001010100", 85 => "011001000000000110000001010101", 
    86 => "011001010000000110100001010110", 87 => "011001100000000111000001010111", 
    88 => "011001110000000111100001011000", 89 => "011010000000001000000001011001", 
    90 => "011010010000001000100001011010", 91 => "011010100000001001000001011011", 
    92 => "011010110000001001100001011100", 93 => "011011000000001010000001011101", 
    94 => "011011010000001010100001011110", 95 => "011011100000001011000001011111", 
    96 => "011011110000001011100001100000", 97 => "011100000000001100000001100001", 
    98 => "011100010000001100100001100010", 99 => "011100100000001101000001100011", 
    100 => "011100110000001101100001100100", 101 => "011101000000001110000001100101", 
    102 => "011101010000001110100001100110", 103 => "011101100000001111000001100111", 
    104 => "011101110000001111100001101000", 105 => "011110000000010000000001101001", 
    106 => "011110010000010000100001101010", 107 => "011110100000010001000001101011", 
    108 => "011110110000010001100001101100", 109 => "011111000000010010000001101101", 
    110 => "011111010000010010100001101110", 111 => "011111100000010011000001101111", 
    112 => "011111110000010011100001110000", 113 => "010000000000010100000001110001", 
    114 => "010000010000010100100001110010", 115 => "010000100000010101000001110011", 
    116 => "010000110000010101100001110100", 117 => "010001000000010110000001110101", 
    118 => "010001010000010110100001110110", 119 => "010001100000010111000001110111", 
    120 => "010001110000010111100001111000", 121 => "010010000000011000000001111001", 
    122 => "010010010000011000100001111010", 123 => "010010100000011001000001111011", 
    124 => "010010110000011001100001111100", 125 => "010011000000011010000001111101", 
    126 => "010011010000011010100001111110", 127 => "010011100000011011000001111111", 
    128 => "010100100000000101100010000000", 129 => "010100110000000110000010000001", 
    130 => "010101000000000110100010000010", 131 => "010101010000000111000010000011", 
    132 => "010101100000000111100010000100", 133 => "010101110000001000000010000101", 
    134 => "010110000000001000100010000110", 135 => "010110010000001001000010000111", 
    136 => "010110100000001001100010001000", 137 => "010110110000001010000010001001", 
    138 => "010111000000001010100010001010", 139 => "010111010000001011000010001011", 
    140 => "010111100000001011100010001100", 141 => "010111110000001100000010001101", 
    142 => "011000000000001100100010001110", 143 => "011000010000001101000010001111", 
    144 => "011000100000001101100010010000", 145 => "011000110000001110000010010001", 
    146 => "011001000000001110100010010010", 147 => "011001010000001111000010010011", 
    148 => "011001100000001111100010010100", 149 => "011001110000010000000010010101", 
    150 => "011010000000010000100010010110", 151 => "011010010000010001000010010111", 
    152 => "011010100000010001100010011000", 153 => "011010110000010010000010011001", 
    154 => "011011000000010010100010011010", 155 => "011011010000010011000010011011", 
    156 => "011011100000010011100010011100", 157 => "011011110000010100000010011101", 
    158 => "011100000000010100100010011110", 159 => "011100010000010101000010011111", 
    160 => "011100100000010101100010100000", 161 => "011100110000010110000010100001", 
    162 => "011101000000010110100010100010", 163 => "011101010000010111000010100011", 
    164 => "011101100000010111100010100100", 165 => "011101110000011000000010100101", 
    166 => "011110000000011000100010100110", 167 => "011110010000011001000010100111", 
    168 => "011110100000011001100010101000", 169 => "011110110000011010000010101001", 
    170 => "011111000000011010100010101010", 171 => "011111010000011011000010101011", 
    172 => "011111100000011011100010101100", 173 => "011111110000011100000010101101", 
    174 => "010000000000011100100010101110", 175 => "010000010000011101000010101111", 
    176 => "010000100000011101100010110000", 177 => "010000110000011110000010110001", 
    178 => "010001000000011110100010110010", 179 => "010001010000011111000010110011", 
    180 => "010001100000011111100010110100", 181 => "010001110000000000000010110101", 
    182 => "010010000000000000100010110110", 183 => "010010010000000001000010110111", 
    184 => "010010100000000001100010111000", 185 => "010010110000000010000010111001", 
    186 => "010011000000000010100010111010", 187 => "010011010000000011000010111011", 
    188 => "010011100000000011100010111100", 189 => "010011110000000100000010111101", 
    190 => "010100000000000100100010111110", 191 => "010100010000000101000010111111", 
    192 => "101001010000101110100011000000", 193 => "101001100000101111000011000001", 
    194 => "101001110000101111100011000010", 195 => "101010000000110000000011000011", 
    196 => "101010010000110000100011000100", 197 => "101010100000110001000011000101", 
    198 => "101010110000110001100011000110", 199 => "101011000000110010000011000111", 
    200 => "101011010000110010100011001000", 201 => "101011100000110011000011001001", 
    202 => "101011110000110011100011001010", 203 => "101100000000110100000011001011", 
    204 => "101100010000110100100011001100", 205 => "101100100000110101000011001101", 
    206 => "101100110000110101100011001110", 207 => "101101000000110110000011001111", 
    208 => "101101010000110110100011010000", 209 => "101101100000110111000011010001", 
    210 => "101101110000110111100011010010", 211 => "101110000000111000000011010011", 
    212 => "101110010000111000100011010100", 213 => "101110100000111001000011010101", 
    214 => "101110110000111001100011010110", 215 => "101111000000111010000011010111", 
    216 => "101111010000111010100011011000", 217 => "101111100000111011000011011001", 
    218 => "101111110000111011100011011010", 219 => "100000000000111100000011011011", 
    220 => "100000010000111100100011011100", 221 => "100000100000111101000011011101", 
    222 => "100000110000111101100011011110", 223 => "100001000000111110000011011111", 
    224 => "100001010000111110100011100000", 225 => "100001100000111111000011100001", 
    226 => "100001110000111111100011100010", 227 => "100010000000100000000011100011", 
    228 => "100010010000100000100011100100", 229 => "100010100000100001000011100101", 
    230 => "100010110000100001100011100110", 231 => "100011000000100010000011100111", 
    232 => "100011010000100010100011101000", 233 => "100011100000100011000011101001", 
    234 => "100011110000100011100011101010", 235 => "100100000000100100000011101011", 
    236 => "100100010000100100100011101100", 237 => "100100100000100101000011101101", 
    238 => "100100110000100101100011101110", 239 => "100101000000100110000011101111", 
    240 => "100101010000100110100011110000", 241 => "100101100000100111000011110001", 
    242 => "100101110000100111100011110010", 243 => "100110000000101000000011110011", 
    244 => "100110010000101000100011110100", 245 => "100110100000101001000011110101", 
    246 => "100110110000101001100011110110", 247 => "100111000000101010000011110111", 
    248 => "100111010000101010100011111000", 249 => "100111100000101011000011111001", 
    250 => "100111110000101011100011111010", 251 => "101000000000101100000011111011", 
    252 => "101000010000101100100011111100", 253 => "101000100000101101000011111101", 
    254 => "101000110000101101100011111110", 255 => "101001000000101110000011111111" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity mcalcAA_23_varinxqcK is
    generic (
        DataWidth : INTEGER := 30;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mcalcAA_23_varinxqcK is
    component mcalcAA_23_varinxqcK_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mcalcAA_23_varinxqcK_rom_U :  component mcalcAA_23_varinxqcK_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


