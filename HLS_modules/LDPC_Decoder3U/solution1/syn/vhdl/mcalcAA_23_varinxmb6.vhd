-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mcalcAA_23_varinxmb6_rom is 
    generic(
             dwidth     : integer := 30; 
             awidth     : integer := 8; 
             mem_size    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mcalcAA_23_varinxmb6_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "101010110000101111000000011011", 1 => "101011000000101111100000011100", 
    2 => "101011010000110000000000011101", 3 => "101011100000110000100000011110", 
    4 => "101011110000110001000000011111", 5 => "101100000000110001100000100000", 
    6 => "101100010000110010000000100001", 7 => "101100100000110010100000100010", 
    8 => "101100110000110011000000100011", 9 => "101101000000110011100000100100", 
    10 => "101101010000110100000000100101", 11 => "101101100000110100100000100110", 
    12 => "101101110000110101000000100111", 13 => "101110000000110101100000101000", 
    14 => "101110010000110110000000101001", 15 => "101110100000110110100000101010", 
    16 => "101110110000110111000000101011", 17 => "101111000000110111100000101100", 
    18 => "101111010000111000000000101101", 19 => "101111100000111000100000101110", 
    20 => "101111110000111001000000101111", 21 => "100000000000111001100000110000", 
    22 => "100000010000111010000000110001", 23 => "100000100000111010100000110010", 
    24 => "100000110000111011000000110011", 25 => "100001000000111011100000110100", 
    26 => "100001010000111100000000110101", 27 => "100001100000111100100000110110", 
    28 => "100001110000111101000000110111", 29 => "100010000000111101100000111000", 
    30 => "100010010000111110000000111001", 31 => "100010100000111110100000111010", 
    32 => "100010110000111111000000111011", 33 => "100011000000111111100000111100", 
    34 => "100011010000100000000000111101", 35 => "100011100000100000100000111110", 
    36 => "100011110000100001000000111111", 37 => "100100000000100001100000000000", 
    38 => "100100010000100010000000000001", 39 => "100100100000100010100000000010", 
    40 => "100100110000100011000000000011", 41 => "100101000000100011100000000100", 
    42 => "100101010000100100000000000101", 43 => "100101100000100100100000000110", 
    44 => "100101110000100101000000000111", 45 => "100110000000100101100000001000", 
    46 => "100110010000100110000000001001", 47 => "100110100000100110100000001010", 
    48 => "100110110000100111000000001011", 49 => "100111000000100111100000001100", 
    50 => "100111010000101000000000001101", 51 => "100111100000101000100000001110", 
    52 => "100111110000101001000000001111", 53 => "101000000000101001100000010000", 
    54 => "101000010000101010000000010001", 55 => "101000100000101010100000010010", 
    56 => "101000110000101011000000010011", 57 => "101001000000101011100000010100", 
    58 => "101001010000101100000000010101", 59 => "101001100000101100100000010110", 
    60 => "101001110000101101000000010111", 61 => "101010000000101101100000011000", 
    62 => "101010010000101110000000011001", 63 => "101010100000101110100000011010", 
    64 => "110101100001000111000001100111", 65 => "110101110001000111100001101000", 
    66 => "110110000001001000000001101001", 67 => "110110010001001000100001101010", 
    68 => "110110100001001001000001101011", 69 => "110110110001001001100001101100", 
    70 => "110111000001001010000001101101", 71 => "110111010001001010100001101110", 
    72 => "110111100001001011000001101111", 73 => "110111110001001011100001110000", 
    74 => "111000000001001100000001110001", 75 => "111000010001001100100001110010", 
    76 => "111000100001001101000001110011", 77 => "111000110001001101100001110100", 
    78 => "111001000001001110000001110101", 79 => "111001010001001110100001110110", 
    80 => "111001100001001111000001110111", 81 => "111001110001001111100001111000", 
    82 => "111010000001010000000001111001", 83 => "111010010001010000100001111010", 
    84 => "111010100001010001000001111011", 85 => "111010110001010001100001111100", 
    86 => "111011000001010010000001111101", 87 => "111011010001010010100001111110", 
    88 => "111011100001010011000001111111", 89 => "111011110001010011100001000000", 
    90 => "111100000001010100000001000001", 91 => "111100010001010100100001000010", 
    92 => "111100100001010101000001000011", 93 => "111100110001010101100001000100", 
    94 => "111101000001010110000001000101", 95 => "111101010001010110100001000110", 
    96 => "111101100001010111000001000111", 97 => "111101110001010111100001001000", 
    98 => "111110000001011000000001001001", 99 => "111110010001011000100001001010", 
    100 => "111110100001011001000001001011", 101 => "111110110001011001100001001100", 
    102 => "111111000001011010000001001101", 103 => "111111010001011010100001001110", 
    104 => "111111100001011011000001001111", 105 => "111111110001011011100001010000", 
    106 => "110000000001011100000001010001", 107 => "110000010001011100100001010010", 
    108 => "110000100001011101000001010011", 109 => "110000110001011101100001010100", 
    110 => "110001000001011110000001010101", 111 => "110001010001011110100001010110", 
    112 => "110001100001011111000001010111", 113 => "110001110001011111100001011000", 
    114 => "110010000001000000000001011001", 115 => "110010010001000000100001011010", 
    116 => "110010100001000001000001011011", 117 => "110010110001000001100001011100", 
    118 => "110011000001000010000001011101", 119 => "110011010001000010100001011110", 
    120 => "110011100001000011000001011111", 121 => "110011110001000011100001100000", 
    122 => "110100000001000100000001100001", 123 => "110100010001000100100001100010", 
    124 => "110100100001000101000001100011", 125 => "110100110001000101100001100100", 
    126 => "110101000001000110000001100101", 127 => "110101010001000110100001100110", 
    128 => "111100010001000100100000100100", 129 => "111100100001000101000000100101", 
    130 => "111100110001000101100000100110", 131 => "111101000001000110000000100111", 
    132 => "111101010001000110100000101000", 133 => "111101100001000111000000101001", 
    134 => "111101110001000111100000101010", 135 => "111110000001001000000000101011", 
    136 => "111110010001001000100000101100", 137 => "111110100001001001000000101101", 
    138 => "111110110001001001100000101110", 139 => "111111000001001010000000101111", 
    140 => "111111010001001010100000110000", 141 => "111111100001001011000000110001", 
    142 => "111111110001001011100000110010", 143 => "110000000001001100000000110011", 
    144 => "110000010001001100100000110100", 145 => "110000100001001101000000110101", 
    146 => "110000110001001101100000110110", 147 => "110001000001001110000000110111", 
    148 => "110001010001001110100000111000", 149 => "110001100001001111000000111001", 
    150 => "110001110001001111100000111010", 151 => "110010000001010000000000111011", 
    152 => "110010010001010000100000111100", 153 => "110010100001010001000000111101", 
    154 => "110010110001010001100000111110", 155 => "110011000001010010000000111111", 
    156 => "110011010001010010100000000000", 157 => "110011100001010011000000000001", 
    158 => "110011110001010011100000000010", 159 => "110100000001010100000000000011", 
    160 => "110100010001010100100000000100", 161 => "110100100001010101000000000101", 
    162 => "110100110001010101100000000110", 163 => "110101000001010110000000000111", 
    164 => "110101010001010110100000001000", 165 => "110101100001010111000000001001", 
    166 => "110101110001010111100000001010", 167 => "110110000001011000000000001011", 
    168 => "110110010001011000100000001100", 169 => "110110100001011001000000001101", 
    170 => "110110110001011001100000001110", 171 => "110111000001011010000000001111", 
    172 => "110111010001011010100000010000", 173 => "110111100001011011000000010001", 
    174 => "110111110001011011100000010010", 175 => "111000000001011100000000010011", 
    176 => "111000010001011100100000010100", 177 => "111000100001011101000000010101", 
    178 => "111000110001011101100000010110", 179 => "111001000001011110000000010111", 
    180 => "111001010001011110100000011000", 181 => "111001100001011111000000011001", 
    182 => "111001110001011111100000011010", 183 => "111010000001000000000000011011", 
    184 => "111010010001000000100000011100", 185 => "111010100001000001000000011101", 
    186 => "111010110001000001100000011110", 187 => "111011000001000010000000011111", 
    188 => "111011010001000010100000100000", 189 => "111011100001000011000000100001", 
    190 => "111011110001000011100000100010", 191 => "111100000001000100000000100011", 
    192 => "110000100000111010100000011110", 193 => "110000110000111011000000011111", 
    194 => "110001000000111011100000100000", 195 => "110001010000111100000000100001", 
    196 => "110001100000111100100000100010", 197 => "110001110000111101000000100011", 
    198 => "110010000000111101100000100100", 199 => "110010010000111110000000100101", 
    200 => "110010100000111110100000100110", 201 => "110010110000111111000000100111", 
    202 => "110011000000111111100000101000", 203 => "110011010000100000000000101001", 
    204 => "110011100000100000100000101010", 205 => "110011110000100001000000101011", 
    206 => "110100000000100001100000101100", 207 => "110100010000100010000000101101", 
    208 => "110100100000100010100000101110", 209 => "110100110000100011000000101111", 
    210 => "110101000000100011100000110000", 211 => "110101010000100100000000110001", 
    212 => "110101100000100100100000110010", 213 => "110101110000100101000000110011", 
    214 => "110110000000100101100000110100", 215 => "110110010000100110000000110101", 
    216 => "110110100000100110100000110110", 217 => "110110110000100111000000110111", 
    218 => "110111000000100111100000111000", 219 => "110111010000101000000000111001", 
    220 => "110111100000101000100000111010", 221 => "110111110000101001000000111011", 
    222 => "111000000000101001100000111100", 223 => "111000010000101010000000111101", 
    224 => "111000100000101010100000111110", 225 => "111000110000101011000000111111", 
    226 => "111001000000101011100000000000", 227 => "111001010000101100000000000001", 
    228 => "111001100000101100100000000010", 229 => "111001110000101101000000000011", 
    230 => "111010000000101101100000000100", 231 => "111010010000101110000000000101", 
    232 => "111010100000101110100000000110", 233 => "111010110000101111000000000111", 
    234 => "111011000000101111100000001000", 235 => "111011010000110000000000001001", 
    236 => "111011100000110000100000001010", 237 => "111011110000110001000000001011", 
    238 => "111100000000110001100000001100", 239 => "111100010000110010000000001101", 
    240 => "111100100000110010100000001110", 241 => "111100110000110011000000001111", 
    242 => "111101000000110011100000010000", 243 => "111101010000110100000000010001", 
    244 => "111101100000110100100000010010", 245 => "111101110000110101000000010011", 
    246 => "111110000000110101100000010100", 247 => "111110010000110110000000010101", 
    248 => "111110100000110110100000010110", 249 => "111110110000110111000000010111", 
    250 => "111111000000110111100000011000", 251 => "111111010000111000000000011001", 
    252 => "111111100000111000100000011010", 253 => "111111110000111001000000011011", 
    254 => "110000000000111001100000011100", 255 => "110000010000111010000000011101" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity mcalcAA_23_varinxmb6 is
    generic (
        DataWidth : INTEGER := 30;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mcalcAA_23_varinxmb6 is
    component mcalcAA_23_varinxmb6_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mcalcAA_23_varinxmb6_rom_U :  component mcalcAA_23_varinxmb6_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


