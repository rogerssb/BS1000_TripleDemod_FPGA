

================================================================
== Vivado HLS Report for 'write_raw_data'
================================================================
* Date:           Mon Sep 30 16:33:19 2019

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        LDCP_data_buffer_mult
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      4.10|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 1
* Pipeline: 1
  Pipeline-0: II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
* FSM state operations: 

 <State 1>: 4.10ns
ST_1: dat_read (16)  [1/1] 0.00ns
:0  %dat_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %dat)

ST_1: mem_load (17)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:248
:1  %mem_load = load i16* @mem, align 2

ST_1: pos_load (18)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:251
:2  %pos_load = load i16* @pos_r, align 2

ST_1: StgValue_5 (19)  [1/1] 1.27ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:248
:3  switch i16 %mem_load, label %._crit_edge [
    i16 0, label %1
    i16 1, label %2
    i16 2, label %3
    i16 3, label %4
    i16 4, label %5
    i16 5, label %6
    i16 6, label %7
    i16 7, label %8
    i16 8, label %9
    i16 9, label %10
    i16 10, label %11
  ]

ST_1: tmp_10 (21)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:281
:0  %tmp_10 = sext i16 %pos_load to i32

ST_1: r_dat10_addr (22)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:281
:1  %r_dat10_addr = getelementptr [1024 x i8]* %r_dat10, i32 0, i32 %tmp_10

ST_1: StgValue_8 (23)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:281
:2  store i8 %dat_read, i8* %r_dat10_addr, align 1

ST_1: StgValue_9 (24)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:282
:3  br label %._crit_edge

ST_1: tmp_s (26)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:278
:0  %tmp_s = sext i16 %pos_load to i32

ST_1: r_dat9_addr (27)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:278
:1  %r_dat9_addr = getelementptr [1024 x i8]* %r_dat9, i32 0, i32 %tmp_s

ST_1: StgValue_12 (28)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:278
:2  store i8 %dat_read, i8* %r_dat9_addr, align 1

ST_1: StgValue_13 (29)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:279
:3  br label %._crit_edge

ST_1: tmp_9 (31)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:275
:0  %tmp_9 = sext i16 %pos_load to i32

ST_1: r_dat8_addr (32)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:275
:1  %r_dat8_addr = getelementptr [1024 x i8]* %r_dat8, i32 0, i32 %tmp_9

ST_1: StgValue_16 (33)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:275
:2  store i8 %dat_read, i8* %r_dat8_addr, align 1

ST_1: StgValue_17 (34)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:276
:3  br label %._crit_edge

ST_1: tmp_8 (36)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:272
:0  %tmp_8 = sext i16 %pos_load to i32

ST_1: r_dat7_addr (37)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:272
:1  %r_dat7_addr = getelementptr [1024 x i8]* %r_dat7, i32 0, i32 %tmp_8

ST_1: StgValue_20 (38)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:272
:2  store i8 %dat_read, i8* %r_dat7_addr, align 1

ST_1: StgValue_21 (39)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:273
:3  br label %._crit_edge

ST_1: tmp_7 (41)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:269
:0  %tmp_7 = sext i16 %pos_load to i32

ST_1: r_dat6_addr (42)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:269
:1  %r_dat6_addr = getelementptr [1024 x i8]* %r_dat6, i32 0, i32 %tmp_7

ST_1: StgValue_24 (43)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:269
:2  store i8 %dat_read, i8* %r_dat6_addr, align 1

ST_1: StgValue_25 (44)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:270
:3  br label %._crit_edge

ST_1: tmp_6 (46)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:266
:0  %tmp_6 = sext i16 %pos_load to i32

ST_1: r_dat5_addr (47)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:266
:1  %r_dat5_addr = getelementptr [1024 x i8]* %r_dat5, i32 0, i32 %tmp_6

ST_1: StgValue_28 (48)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:266
:2  store i8 %dat_read, i8* %r_dat5_addr, align 1

ST_1: StgValue_29 (49)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:267
:3  br label %._crit_edge

ST_1: tmp_5 (51)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:263
:0  %tmp_5 = sext i16 %pos_load to i32

ST_1: r_dat4_addr (52)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:263
:1  %r_dat4_addr = getelementptr [1024 x i8]* %r_dat4, i32 0, i32 %tmp_5

ST_1: StgValue_32 (53)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:263
:2  store i8 %dat_read, i8* %r_dat4_addr, align 1

ST_1: StgValue_33 (54)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:264
:3  br label %._crit_edge

ST_1: tmp_4 (56)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:260
:0  %tmp_4 = sext i16 %pos_load to i32

ST_1: r_dat3_addr (57)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:260
:1  %r_dat3_addr = getelementptr [2048 x i8]* %r_dat3, i32 0, i32 %tmp_4

ST_1: StgValue_36 (58)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:260
:2  store i8 %dat_read, i8* %r_dat3_addr, align 1

ST_1: StgValue_37 (59)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:261
:3  br label %._crit_edge

ST_1: tmp_3 (61)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:257
:0  %tmp_3 = sext i16 %pos_load to i32

ST_1: r_dat2_addr (62)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:257
:1  %r_dat2_addr = getelementptr [2048 x i8]* %r_dat2, i32 0, i32 %tmp_3

ST_1: StgValue_40 (63)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:257
:2  store i8 %dat_read, i8* %r_dat2_addr, align 1

ST_1: StgValue_41 (64)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:258
:3  br label %._crit_edge

ST_1: tmp_2 (66)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:254
:0  %tmp_2 = sext i16 %pos_load to i32

ST_1: r_dat1_addr (67)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:254
:1  %r_dat1_addr = getelementptr [2048 x i8]* %r_dat1, i32 0, i32 %tmp_2

ST_1: StgValue_44 (68)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:254
:2  store i8 %dat_read, i8* %r_dat1_addr, align 1

ST_1: StgValue_45 (69)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:255
:3  br label %._crit_edge

ST_1: tmp_1 (71)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:251
:0  %tmp_1 = sext i16 %pos_load to i32

ST_1: r_dat0_addr (72)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:251
:1  %r_dat0_addr = getelementptr [2048 x i8]* %r_dat0, i32 0, i32 %tmp_1

ST_1: StgValue_48 (73)  [1/1] 2.33ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:251
:2  store i8 %dat_read, i8* %r_dat0_addr, align 1

ST_1: StgValue_49 (74)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:252
:3  br label %._crit_edge

ST_1: tmp_11 (76)  [1/1] 1.46ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:284
._crit_edge:0  %tmp_11 = add i16 %pos_load, 1

ST_1: trig_load (77)  [1/1] 0.00ns
._crit_edge:1  %trig_load = load i12* @trig, align 2

ST_1: extLd (78)  [1/1] 0.00ns
._crit_edge:2  %extLd = zext i12 %trig_load to i16

ST_1: tmp_12 (79)  [1/1] 1.55ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:286
._crit_edge:3  %tmp_12 = icmp eq i16 %tmp_11, %extLd

ST_1: StgValue_54 (80)  [1/1] 1.09ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:286
._crit_edge:4  br i1 %tmp_12, label %12, label %mergeST

ST_1: tmp_13 (82)  [1/1] 1.46ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:289
:0  %tmp_13 = add i16 %mem_load, 1

ST_1: StgValue_56 (83)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:289
:1  store i16 %tmp_13, i16* @mem, align 2

ST_1: StgValue_57 (84)  [1/1] 1.09ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:290
:2  br label %mergeST

ST_1: pos_new (86)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:284
mergeST:0  %pos_new = phi i16 [ 0, %12 ], [ %tmp_11, %._crit_edge ]

ST_1: StgValue_59 (87)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:284
mergeST:1  store i16 %pos_new, i16* @pos_r, align 2

ST_1: StgValue_60 (88)  [1/1] 0.00ns  loc: LDCP_data_buffer_mult/LDPC_buff.cpp:292
mergeST:2  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 4.1ns
The critical path consists of the following:
	'load' operation ('pos_load', LDCP_data_buffer_mult/LDPC_buff.cpp:251) on static variable 'pos_r' [18]  (0 ns)
	'add' operation ('tmp_11', LDCP_data_buffer_mult/LDPC_buff.cpp:284) [76]  (1.46 ns)
	'icmp' operation ('tmp_12', LDCP_data_buffer_mult/LDPC_buff.cpp:286) [79]  (1.55 ns)
	multiplexor before 'phi' operation ('pos_new', LDCP_data_buffer_mult/LDPC_buff.cpp:284) with incoming values : ('tmp_11', LDCP_data_buffer_mult/LDPC_buff.cpp:284) [86]  (1.09 ns)
	'phi' operation ('pos_new', LDCP_data_buffer_mult/LDPC_buff.cpp:284) with incoming values : ('tmp_11', LDCP_data_buffer_mult/LDPC_buff.cpp:284) [86]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
