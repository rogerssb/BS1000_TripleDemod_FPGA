#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("block_V", 2, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("code_V", 2, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("run", 1, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("init_start", 1, hls_out, 3, "ap_vld", "out_data", 1),
	Port_Property("init_start_ap_vld", 1, hls_out, 3, "ap_vld", "out_vld", 1),
	Port_Property("init_done", 1, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("init_ready", 1, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("buff_start", 1, hls_out, 6, "ap_vld", "out_data", 1),
	Port_Property("buff_start_ap_vld", 1, hls_out, 6, "ap_vld", "out_vld", 1),
	Port_Property("status_V", 2, hls_out, 7, "ap_vld", "out_data", 1),
	Port_Property("status_V_ap_vld", 1, hls_out, 7, "ap_vld", "out_vld", 1),
	Port_Property("err_code", 16, hls_out, 8, "ap_vld", "out_data", 1),
	Port_Property("err_code_ap_vld", 1, hls_out, 8, "ap_vld", "out_vld", 1),
	Port_Property("size_V", 2, hls_out, 9, "ap_vld", "out_data", 1),
	Port_Property("size_V_ap_vld", 1, hls_out, 9, "ap_vld", "out_vld", 1),
	Port_Property("rate_V", 2, hls_out, 10, "ap_vld", "out_data", 1),
	Port_Property("rate_V_ap_vld", 1, hls_out, 10, "ap_vld", "out_vld", 1),
	Port_Property("buff_reset", 1, hls_out, 11, "ap_vld", "out_data", 1),
	Port_Property("buff_reset_ap_vld", 1, hls_out, 11, "ap_vld", "out_vld", 1),
};
const char* HLS_Design_Meta::dut_name = "LDPC_CTRL";
