// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LDPC_Out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LDPC_Out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LDPC_Out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> LDPC_Out::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> LDPC_Out::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> LDPC_Out::ap_const_lv1_1 = "1";
const sc_lv<1> LDPC_Out::ap_const_lv1_0 = "0";
const sc_lv<16> LDPC_Out::ap_const_lv16_400 = "10000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_7F = "1111111";
const sc_lv<2> LDPC_Out::ap_const_lv2_1 = "1";
const sc_lv<13> LDPC_Out::ap_const_lv13_400 = "10000000000";
const sc_lv<13> LDPC_Out::ap_const_lv13_1000 = "1000000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_1000 = "1000000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_1FF = "111111111";
const sc_lv<16> LDPC_Out::ap_const_lv16_1 = "1";
const sc_lv<16> LDPC_Out::ap_const_lv16_6 = "110";
const sc_lv<16> LDPC_Out::ap_const_lv16_5 = "101";
const sc_lv<16> LDPC_Out::ap_const_lv16_4 = "100";
const sc_lv<16> LDPC_Out::ap_const_lv16_3 = "11";
const sc_lv<16> LDPC_Out::ap_const_lv16_2 = "10";
const bool LDPC_Out::ap_const_boolean_1 = true;

LDPC_Out::LDPC_Out(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_139);
    sensitive << ( reset_read_read_fu_110_p2 );
    sensitive << ( or_cond_2_fu_286_p2 );
    sensitive << ( or_cond1_3_fu_363_p2 );

    SC_METHOD(thread_ap_condition_151);
    sensitive << ( reset_read_reg_587 );
    sensitive << ( or_cond_2_reg_599 );
    sensitive << ( or_cond1_3_reg_603 );

    SC_METHOD(thread_ap_condition_191);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_condition_195);
    sensitive << ( reset_read_reg_587 );
    sensitive << ( or_cond_2_reg_599 );
    sensitive << ( or_cond1_3_reg_603 );
    sensitive << ( tmp_s_fu_407_p2 );

    SC_METHOD(thread_ap_condition_202);
    sensitive << ( reset_read_reg_587 );
    sensitive << ( or_cond_2_reg_599 );
    sensitive << ( or_cond1_3_reg_603 );
    sensitive << ( tmp_s_fu_407_p2 );

    SC_METHOD(thread_ap_condition_213);
    sensitive << ( reset_read_read_fu_110_p2 );
    sensitive << ( or_cond_2_fu_286_p2 );
    sensitive << ( or_cond1_3_fu_363_p2 );

    SC_METHOD(thread_ap_condition_231);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_condition_247);
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );
    sensitive << ( tmp_s_reg_652 );

    SC_METHOD(thread_ap_condition_36);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226);

    SC_METHOD(thread_ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247);

    SC_METHOD(thread_ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237);

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_cur_read_pos_V);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( val_assign_reg_247 );

    SC_METHOD(thread_cur_read_pos_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_data_out);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );
    sensitive << ( or_cond3_fu_552_p2 );
    sensitive << ( newSel4_fu_544_p3 );
    sensitive << ( newSel5_fu_558_p3 );

    SC_METHOD(thread_data_out_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_max_loc_1_cast_fu_353_p1);
    sensitive << ( max_loc_1_phi_fu_229_p6 );

    SC_METHOD(thread_max_loc_1_phi_fu_229_p6);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reset_read_read_fu_110_p2 );
    sensitive << ( or_cond_2_fu_286_p2 );
    sensitive << ( tmp_8_fu_270_p1 );
    sensitive << ( ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226 );
    sensitive << ( storemerge1_fu_316_p3 );
    sensitive << ( zero_load_load_fu_262_p1 );

    SC_METHOD(thread_mem_out0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out3_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out4_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out5_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out6_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_391_p1 );

    SC_METHOD(thread_mem_out7_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_newSel1_fu_508_p3);
    sensitive << ( mem_out2_q0 );
    sensitive << ( mem_out3_q0 );
    sensitive << ( sel_tmp_fu_476_p2 );

    SC_METHOD(thread_newSel2_fu_522_p3);
    sensitive << ( mem_out4_q0 );
    sensitive << ( mem_out5_q0 );
    sensitive << ( sel_tmp6_fu_464_p2 );

    SC_METHOD(thread_newSel3_fu_536_p3);
    sensitive << ( mem_out6_q0 );
    sensitive << ( mem_out7_q0 );
    sensitive << ( sel_tmp2_fu_452_p2 );

    SC_METHOD(thread_newSel4_fu_544_p3);
    sensitive << ( or_cond_fu_502_p2 );
    sensitive << ( newSel_fu_494_p3 );
    sensitive << ( newSel1_fu_508_p3 );

    SC_METHOD(thread_newSel5_fu_558_p3);
    sensitive << ( or_cond2_fu_530_p2 );
    sensitive << ( newSel2_fu_522_p3 );
    sensitive << ( newSel3_fu_536_p3 );

    SC_METHOD(thread_newSel_fu_494_p3);
    sensitive << ( mem_out0_q0 );
    sensitive << ( mem_out1_q0 );
    sensitive << ( sel_tmp3_fu_488_p2 );

    SC_METHOD(thread_or_cond1_3_fu_363_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( rd_clk_in );

    SC_METHOD(thread_or_cond1_3_fu_363_p2);
    sensitive << ( tmp_3_fu_357_p2 );
    sensitive << ( or_cond1_3_fu_363_p1 );

    SC_METHOD(thread_or_cond1_fu_516_p2);
    sensitive << ( sel_tmp_fu_476_p2 );
    sensitive << ( sel_tmp8_fu_470_p2 );

    SC_METHOD(thread_or_cond2_fu_530_p2);
    sensitive << ( sel_tmp6_fu_464_p2 );
    sensitive << ( sel_tmp4_fu_458_p2 );

    SC_METHOD(thread_or_cond3_fu_552_p2);
    sensitive << ( or_cond_fu_502_p2 );
    sensitive << ( or_cond1_fu_516_p2 );

    SC_METHOD(thread_or_cond_2_fu_286_p2);
    sensitive << ( zero );
    sensitive << ( tmp_1_fu_280_p2 );

    SC_METHOD(thread_or_cond_fu_502_p2);
    sensitive << ( sel_tmp3_fu_488_p2 );
    sensitive << ( sel_tmp1_fu_482_p2 );

    SC_METHOD(thread_reset_read_read_fu_110_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reset );

    SC_METHOD(thread_sel_tmp1_fu_482_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_sel_tmp2_fu_452_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_sel_tmp3_fu_488_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_sel_tmp4_fu_458_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_sel_tmp6_fu_464_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_sel_tmp8_fu_470_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_sel_tmp_fu_476_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_587 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 );

    SC_METHOD(thread_storemerge1_cast_cas_fu_325_p3);
    sensitive << ( tmp_fu_310_p2 );

    SC_METHOD(thread_storemerge1_fu_316_p3);
    sensitive << ( tmp_fu_310_p2 );

    SC_METHOD(thread_storemerge2_cast_cas_fu_333_p3);
    sensitive << ( tmp_fu_310_p2 );

    SC_METHOD(thread_storemerge_phi_fu_240_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_fu_413_p2 );
    sensitive << ( ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237 );
    sensitive << ( ap_condition_195 );
    sensitive << ( ap_condition_202 );

    SC_METHOD(thread_tmp_1_fu_280_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( max );
    sensitive << ( read_cnt );
    sensitive << ( reset_read_read_fu_110_p2 );

    SC_METHOD(thread_tmp_2_fu_436_p2);
    sensitive << ( mux );

    SC_METHOD(thread_tmp_3_fu_357_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( read_cnt );
    sensitive << ( reset_read_read_fu_110_p2 );
    sensitive << ( or_cond_2_fu_286_p2 );
    sensitive << ( max_loc_1_cast_fu_353_p1 );

    SC_METHOD(thread_tmp_4_fu_575_p2);
    sensitive << ( mem );

    SC_METHOD(thread_tmp_5_fu_391_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_tmp_6_fu_413_p2);
    sensitive << ( pos_r );

    SC_METHOD(thread_tmp_7_fu_369_p2);
    sensitive << ( read_cnt );

    SC_METHOD(thread_tmp_8_fu_270_p1);
    sensitive << ( max );

    SC_METHOD(thread_tmp_fu_310_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( block_V );
    sensitive << ( reset_read_read_fu_110_p2 );
    sensitive << ( zero_load_load_fu_262_p1 );

    SC_METHOD(thread_tmp_s_fu_407_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( pos_r );
    sensitive << ( trig );
    sensitive << ( reset_read_reg_587 );
    sensitive << ( or_cond_2_reg_599 );
    sensitive << ( or_cond1_3_reg_603 );

    SC_METHOD(thread_zero_load_load_fu_262_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zero );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    zero = "0";
    max = "0000010000000000";
    read_cnt = "0000000000000000";
    pos_r = "0000000000000000";
    trig = "0000000001111111";
    mem = "0000000000000000";
    mux = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LDPC_Out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_out, "(port)data_out");
    sc_trace(mVcdFile, data_out_ap_vld, "(port)data_out_ap_vld");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, cur_read_pos_V, "(port)cur_read_pos_V");
    sc_trace(mVcdFile, cur_read_pos_V_ap_vld, "(port)cur_read_pos_V_ap_vld");
    sc_trace(mVcdFile, block_V, "(port)block_V");
    sc_trace(mVcdFile, rd_clk_in, "(port)rd_clk_in");
    sc_trace(mVcdFile, rd_mux, "(port)rd_mux");
    sc_trace(mVcdFile, mem_out0_address0, "(port)mem_out0_address0");
    sc_trace(mVcdFile, mem_out0_ce0, "(port)mem_out0_ce0");
    sc_trace(mVcdFile, mem_out0_q0, "(port)mem_out0_q0");
    sc_trace(mVcdFile, mem_out1_address0, "(port)mem_out1_address0");
    sc_trace(mVcdFile, mem_out1_ce0, "(port)mem_out1_ce0");
    sc_trace(mVcdFile, mem_out1_q0, "(port)mem_out1_q0");
    sc_trace(mVcdFile, mem_out2_address0, "(port)mem_out2_address0");
    sc_trace(mVcdFile, mem_out2_ce0, "(port)mem_out2_ce0");
    sc_trace(mVcdFile, mem_out2_q0, "(port)mem_out2_q0");
    sc_trace(mVcdFile, mem_out3_address0, "(port)mem_out3_address0");
    sc_trace(mVcdFile, mem_out3_ce0, "(port)mem_out3_ce0");
    sc_trace(mVcdFile, mem_out3_q0, "(port)mem_out3_q0");
    sc_trace(mVcdFile, mem_out4_address0, "(port)mem_out4_address0");
    sc_trace(mVcdFile, mem_out4_ce0, "(port)mem_out4_ce0");
    sc_trace(mVcdFile, mem_out4_q0, "(port)mem_out4_q0");
    sc_trace(mVcdFile, mem_out5_address0, "(port)mem_out5_address0");
    sc_trace(mVcdFile, mem_out5_ce0, "(port)mem_out5_ce0");
    sc_trace(mVcdFile, mem_out5_q0, "(port)mem_out5_q0");
    sc_trace(mVcdFile, mem_out6_address0, "(port)mem_out6_address0");
    sc_trace(mVcdFile, mem_out6_ce0, "(port)mem_out6_ce0");
    sc_trace(mVcdFile, mem_out6_q0, "(port)mem_out6_q0");
    sc_trace(mVcdFile, mem_out7_address0, "(port)mem_out7_address0");
    sc_trace(mVcdFile, mem_out7_ce0, "(port)mem_out7_ce0");
    sc_trace(mVcdFile, mem_out7_q0, "(port)mem_out7_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, zero, "zero");
    sc_trace(mVcdFile, max, "max");
    sc_trace(mVcdFile, read_cnt, "read_cnt");
    sc_trace(mVcdFile, pos_r, "pos_r");
    sc_trace(mVcdFile, trig, "trig");
    sc_trace(mVcdFile, mem, "mem");
    sc_trace(mVcdFile, mux, "mux");
    sc_trace(mVcdFile, val_assign_reg_247, "val_assign_reg_247");
    sc_trace(mVcdFile, reset_read_read_fu_110_p2, "reset_read_read_fu_110_p2");
    sc_trace(mVcdFile, reset_read_reg_587, "reset_read_reg_587");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_reset_read_reg_587, "ap_pipeline_reg_pp0_iter1_reset_read_reg_587");
    sc_trace(mVcdFile, or_cond_2_fu_286_p2, "or_cond_2_fu_286_p2");
    sc_trace(mVcdFile, or_cond_2_reg_599, "or_cond_2_reg_599");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599, "ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599");
    sc_trace(mVcdFile, or_cond1_3_fu_363_p2, "or_cond1_3_fu_363_p2");
    sc_trace(mVcdFile, or_cond1_3_reg_603, "or_cond1_3_reg_603");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603, "ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603");
    sc_trace(mVcdFile, tmp_7_fu_369_p2, "tmp_7_fu_369_p2");
    sc_trace(mVcdFile, tmp_s_fu_407_p2, "tmp_s_fu_407_p2");
    sc_trace(mVcdFile, tmp_s_reg_652, "tmp_s_reg_652");
    sc_trace(mVcdFile, tmp_8_fu_270_p1, "tmp_8_fu_270_p1");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226, "ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226");
    sc_trace(mVcdFile, max_loc_1_phi_fu_229_p6, "max_loc_1_phi_fu_229_p6");
    sc_trace(mVcdFile, storemerge1_fu_316_p3, "storemerge1_fu_316_p3");
    sc_trace(mVcdFile, zero_load_load_fu_262_p1, "zero_load_load_fu_262_p1");
    sc_trace(mVcdFile, tmp_6_fu_413_p2, "tmp_6_fu_413_p2");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237, "ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237");
    sc_trace(mVcdFile, storemerge_phi_fu_240_p4, "storemerge_phi_fu_240_p4");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247, "ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247, "ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247");
    sc_trace(mVcdFile, tmp_5_fu_391_p1, "tmp_5_fu_391_p1");
    sc_trace(mVcdFile, storemerge1_cast_cas_fu_325_p3, "storemerge1_cast_cas_fu_325_p3");
    sc_trace(mVcdFile, storemerge2_cast_cas_fu_333_p3, "storemerge2_cast_cas_fu_333_p3");
    sc_trace(mVcdFile, tmp_4_fu_575_p2, "tmp_4_fu_575_p2");
    sc_trace(mVcdFile, tmp_2_fu_436_p2, "tmp_2_fu_436_p2");
    sc_trace(mVcdFile, tmp_1_fu_280_p2, "tmp_1_fu_280_p2");
    sc_trace(mVcdFile, tmp_fu_310_p2, "tmp_fu_310_p2");
    sc_trace(mVcdFile, max_loc_1_cast_fu_353_p1, "max_loc_1_cast_fu_353_p1");
    sc_trace(mVcdFile, tmp_3_fu_357_p2, "tmp_3_fu_357_p2");
    sc_trace(mVcdFile, or_cond1_3_fu_363_p1, "or_cond1_3_fu_363_p1");
    sc_trace(mVcdFile, sel_tmp3_fu_488_p2, "sel_tmp3_fu_488_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_482_p2, "sel_tmp1_fu_482_p2");
    sc_trace(mVcdFile, sel_tmp_fu_476_p2, "sel_tmp_fu_476_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_470_p2, "sel_tmp8_fu_470_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_464_p2, "sel_tmp6_fu_464_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_458_p2, "sel_tmp4_fu_458_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_452_p2, "sel_tmp2_fu_452_p2");
    sc_trace(mVcdFile, or_cond_fu_502_p2, "or_cond_fu_502_p2");
    sc_trace(mVcdFile, newSel_fu_494_p3, "newSel_fu_494_p3");
    sc_trace(mVcdFile, newSel1_fu_508_p3, "newSel1_fu_508_p3");
    sc_trace(mVcdFile, or_cond1_fu_516_p2, "or_cond1_fu_516_p2");
    sc_trace(mVcdFile, or_cond2_fu_530_p2, "or_cond2_fu_530_p2");
    sc_trace(mVcdFile, newSel2_fu_522_p3, "newSel2_fu_522_p3");
    sc_trace(mVcdFile, newSel3_fu_536_p3, "newSel3_fu_536_p3");
    sc_trace(mVcdFile, or_cond3_fu_552_p2, "or_cond3_fu_552_p2");
    sc_trace(mVcdFile, newSel4_fu_544_p3, "newSel4_fu_544_p3");
    sc_trace(mVcdFile, newSel5_fu_558_p3, "newSel5_fu_558_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
    sc_trace(mVcdFile, ap_condition_139, "ap_condition_139");
    sc_trace(mVcdFile, ap_condition_213, "ap_condition_213");
    sc_trace(mVcdFile, ap_condition_36, "ap_condition_36");
    sc_trace(mVcdFile, ap_condition_247, "ap_condition_247");
    sc_trace(mVcdFile, ap_condition_231, "ap_condition_231");
    sc_trace(mVcdFile, ap_condition_151, "ap_condition_151");
    sc_trace(mVcdFile, ap_condition_191, "ap_condition_191");
    sc_trace(mVcdFile, ap_condition_195, "ap_condition_195");
    sc_trace(mVcdFile, ap_condition_202, "ap_condition_202");
#endif

    }
    mHdltvinHandle.open("LDPC_Out.hdltvin.dat");
    mHdltvoutHandle.open("LDPC_Out.hdltvout.dat");
}

LDPC_Out::~LDPC_Out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void LDPC_Out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_36.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_213.read(), ap_const_boolean_1)) {
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 = read_cnt.read();
        } else if (esl_seteq<1,1,1>(ap_condition_139.read(), ap_const_boolean_1)) {
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 = tmp_7_fu_369_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read()))) {
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 = ap_const_lv16_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 = ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_231.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_247.read(), ap_const_boolean_1)) {
            mem = tmp_4_fu_575_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_587.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599.read()))) {
            mem = ap_const_lv16_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_191.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_151.read(), ap_const_boolean_1)) {
            pos_r = storemerge_phi_fu_240_p4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_587.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_reg_599.read()))) {
            pos_r = ap_const_lv16_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_36.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_139.read(), ap_const_boolean_1)) {
            read_cnt = tmp_7_fu_369_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read()))) {
            read_cnt = ap_const_lv16_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_36.read(), ap_const_boolean_1)) {
        if ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_262_p1.read()))) {
            zero = ap_const_lv1_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read()))) {
            zero = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 = or_cond1_3_reg_603.read();
        ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 = or_cond_2_reg_599.read();
        ap_pipeline_reg_pp0_iter1_reset_read_reg_587 = reset_read_reg_587.read();
        reset_read_reg_587 =  (sc_lv<1>) (reset.read());
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_262_p1.read()))) {
        max = storemerge1_cast_cas_fu_325_p3.read();
        trig = storemerge2_cast_cas_fu_333_p3.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_587.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599.read()))) {
        mux = tmp_2_fu_436_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && (!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) || 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read())))) {
        or_cond1_3_reg_603 = or_cond1_3_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()))) {
        or_cond_2_reg_599 = or_cond_2_fu_286_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_587.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read())) || 
  (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_reg_599.read()))))) {
        tmp_s_reg_652 = tmp_s_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        val_assign_reg_247 = ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247.read();
    }
}

void LDPC_Out::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void LDPC_Out::thread_ap_condition_139() {
    ap_condition_139 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_fu_363_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_fu_363_p2.read())));
}

void LDPC_Out::thread_ap_condition_151() {
    ap_condition_151 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_587.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_reg_599.read())));
}

void LDPC_Out::thread_ap_condition_191() {
    ap_condition_191 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()));
}

void LDPC_Out::thread_ap_condition_195() {
    ap_condition_195 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_587.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_407_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_reg_599.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_407_p2.read())));
}

void LDPC_Out::thread_ap_condition_202() {
    ap_condition_202 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_587.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_407_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_reg_603.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_reg_599.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_407_p2.read())));
}

void LDPC_Out::thread_ap_condition_213() {
    ap_condition_213 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_fu_363_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_3_fu_363_p2.read())));
}

void LDPC_Out::thread_ap_condition_231() {
    ap_condition_231 = (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()));
}

void LDPC_Out::thread_ap_condition_247() {
    ap_condition_247 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_587.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_652.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_652.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599.read())));
}

void LDPC_Out::thread_ap_condition_36() {
    ap_condition_36 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)));
}

void LDPC_Out::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void LDPC_Out::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void LDPC_Out::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void LDPC_Out::thread_ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226() {
    ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
}

void LDPC_Out::thread_ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247() {
    ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void LDPC_Out::thread_ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237() {
    ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void LDPC_Out::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void LDPC_Out::thread_cur_read_pos_V() {
    cur_read_pos_V = val_assign_reg_247.read();
}

void LDPC_Out::thread_cur_read_pos_V_ap_vld() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        cur_read_pos_V_ap_vld = ap_const_logic_1;
    } else {
        cur_read_pos_V_ap_vld = ap_const_logic_0;
    }
}

void LDPC_Out::thread_data_out() {
    data_out =  (sc_logic) ((!or_cond3_fu_552_p2.read()[0].is_01())? sc_lv<1>(): ((or_cond3_fu_552_p2.read()[0].to_bool())? newSel4_fu_544_p3.read()[0]: newSel5_fu_558_p3.read()[0]))[0];
}

void LDPC_Out::thread_data_out_ap_vld() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         ((!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_587.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599.read()))))) {
        data_out_ap_vld = ap_const_logic_1;
    } else {
        data_out_ap_vld = ap_const_logic_0;
    }
}

void LDPC_Out::thread_max_loc_1_cast_fu_353_p1() {
    max_loc_1_cast_fu_353_p1 = esl_zext<16,13>(max_loc_1_phi_fu_229_p6.read());
}

void LDPC_Out::thread_max_loc_1_phi_fu_229_p6() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_262_p1.read()))) {
        max_loc_1_phi_fu_229_p6 = storemerge1_fu_316_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_2_fu_286_p2.read())) || 
                (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_110_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_262_p1.read())))) {
        max_loc_1_phi_fu_229_p6 = tmp_8_fu_270_p1.read();
    } else {
        max_loc_1_phi_fu_229_p6 = ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226.read();
    }
}

void LDPC_Out::thread_mem_out0_address0() {
    mem_out0_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out0_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out0_ce0 = ap_const_logic_1;
    } else {
        mem_out0_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out1_address0() {
    mem_out1_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out1_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out1_ce0 = ap_const_logic_1;
    } else {
        mem_out1_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out2_address0() {
    mem_out2_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out2_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out2_ce0 = ap_const_logic_1;
    } else {
        mem_out2_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out3_address0() {
    mem_out3_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out3_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out3_ce0 = ap_const_logic_1;
    } else {
        mem_out3_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out4_address0() {
    mem_out4_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out4_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out4_ce0 = ap_const_logic_1;
    } else {
        mem_out4_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out5_address0() {
    mem_out5_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out5_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out5_ce0 = ap_const_logic_1;
    } else {
        mem_out5_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out6_address0() {
    mem_out6_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out6_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out6_ce0 = ap_const_logic_1;
    } else {
        mem_out6_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out7_address0() {
    mem_out7_address0 =  (sc_lv<9>) (tmp_5_fu_391_p1.read());
}

void LDPC_Out::thread_mem_out7_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out7_ce0 = ap_const_logic_1;
    } else {
        mem_out7_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_newSel1_fu_508_p3() {
    newSel1_fu_508_p3 = (!sel_tmp_fu_476_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp_fu_476_p2.read()[0].to_bool())? mem_out2_q0.read(): mem_out3_q0.read());
}

void LDPC_Out::thread_newSel2_fu_522_p3() {
    newSel2_fu_522_p3 = (!sel_tmp6_fu_464_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp6_fu_464_p2.read()[0].to_bool())? mem_out4_q0.read(): mem_out5_q0.read());
}

void LDPC_Out::thread_newSel3_fu_536_p3() {
    newSel3_fu_536_p3 = (!sel_tmp2_fu_452_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp2_fu_452_p2.read()[0].to_bool())? mem_out6_q0.read(): mem_out7_q0.read());
}

void LDPC_Out::thread_newSel4_fu_544_p3() {
    newSel4_fu_544_p3 = (!or_cond_fu_502_p2.read()[0].is_01())? sc_lv<1>(): ((or_cond_fu_502_p2.read()[0].to_bool())? newSel_fu_494_p3.read(): newSel1_fu_508_p3.read());
}

void LDPC_Out::thread_newSel5_fu_558_p3() {
    newSel5_fu_558_p3 = (!or_cond2_fu_530_p2.read()[0].is_01())? sc_lv<1>(): ((or_cond2_fu_530_p2.read()[0].to_bool())? newSel2_fu_522_p3.read(): newSel3_fu_536_p3.read());
}

void LDPC_Out::thread_newSel_fu_494_p3() {
    newSel_fu_494_p3 = (!sel_tmp3_fu_488_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp3_fu_488_p2.read()[0].to_bool())? mem_out0_q0.read(): mem_out1_q0.read());
}

void LDPC_Out::thread_or_cond1_3_fu_363_p1() {
    or_cond1_3_fu_363_p1 =  (sc_lv<1>) (rd_clk_in.read());
}

void LDPC_Out::thread_or_cond1_3_fu_363_p2() {
    or_cond1_3_fu_363_p2 = (tmp_3_fu_357_p2.read() & or_cond1_3_fu_363_p1.read());
}

void LDPC_Out::thread_or_cond1_fu_516_p2() {
    or_cond1_fu_516_p2 = (sel_tmp_fu_476_p2.read() | sel_tmp8_fu_470_p2.read());
}

void LDPC_Out::thread_or_cond2_fu_530_p2() {
    or_cond2_fu_530_p2 = (sel_tmp6_fu_464_p2.read() | sel_tmp4_fu_458_p2.read());
}

void LDPC_Out::thread_or_cond3_fu_552_p2() {
    or_cond3_fu_552_p2 = (or_cond_fu_502_p2.read() | or_cond1_fu_516_p2.read());
}

void LDPC_Out::thread_or_cond_2_fu_286_p2() {
    or_cond_2_fu_286_p2 = (zero.read() | tmp_1_fu_280_p2.read());
}

void LDPC_Out::thread_or_cond_fu_502_p2() {
    or_cond_fu_502_p2 = (sel_tmp3_fu_488_p2.read() | sel_tmp1_fu_482_p2.read());
}

void LDPC_Out::thread_reset_read_read_fu_110_p2() {
    reset_read_read_fu_110_p2 =  (sc_lv<1>) (reset.read());
}

void LDPC_Out::thread_sel_tmp1_fu_482_p2() {
    sel_tmp1_fu_482_p2 = (!mem.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_1);
}

void LDPC_Out::thread_sel_tmp2_fu_452_p2() {
    sel_tmp2_fu_452_p2 = (!mem.read().is_01() || !ap_const_lv16_6.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_6);
}

void LDPC_Out::thread_sel_tmp3_fu_488_p2() {
    sel_tmp3_fu_488_p2 = (!mem.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_0);
}

void LDPC_Out::thread_sel_tmp4_fu_458_p2() {
    sel_tmp4_fu_458_p2 = (!mem.read().is_01() || !ap_const_lv16_5.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_5);
}

void LDPC_Out::thread_sel_tmp6_fu_464_p2() {
    sel_tmp6_fu_464_p2 = (!mem.read().is_01() || !ap_const_lv16_4.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_4);
}

void LDPC_Out::thread_sel_tmp8_fu_470_p2() {
    sel_tmp8_fu_470_p2 = (!mem.read().is_01() || !ap_const_lv16_3.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_3);
}

void LDPC_Out::thread_sel_tmp_fu_476_p2() {
    sel_tmp_fu_476_p2 = (!mem.read().is_01() || !ap_const_lv16_2.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_2);
}

void LDPC_Out::thread_storemerge1_cast_cas_fu_325_p3() {
    storemerge1_cast_cas_fu_325_p3 = (!tmp_fu_310_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_fu_310_p2.read()[0].to_bool())? ap_const_lv16_400: ap_const_lv16_1000);
}

void LDPC_Out::thread_storemerge1_fu_316_p3() {
    storemerge1_fu_316_p3 = (!tmp_fu_310_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_fu_310_p2.read()[0].to_bool())? ap_const_lv13_400: ap_const_lv13_1000);
}

void LDPC_Out::thread_storemerge2_cast_cas_fu_333_p3() {
    storemerge2_cast_cas_fu_333_p3 = (!tmp_fu_310_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_fu_310_p2.read()[0].to_bool())? ap_const_lv16_7F: ap_const_lv16_1FF);
}

void LDPC_Out::thread_storemerge_phi_fu_240_p4() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        if (esl_seteq<1,1,1>(ap_condition_202.read(), ap_const_boolean_1)) {
            storemerge_phi_fu_240_p4 = ap_const_lv16_0;
        } else if (esl_seteq<1,1,1>(ap_condition_195.read(), ap_const_boolean_1)) {
            storemerge_phi_fu_240_p4 = tmp_6_fu_413_p2.read();
        } else {
            storemerge_phi_fu_240_p4 = ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237.read();
        }
    } else {
        storemerge_phi_fu_240_p4 = ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237.read();
    }
}

void LDPC_Out::thread_tmp_1_fu_280_p2() {
    tmp_1_fu_280_p2 = (!read_cnt.read().is_01() || !max.read().is_01())? sc_lv<1>(): (sc_bigint<16>(read_cnt.read()) < sc_bigint<16>(max.read()));
}

void LDPC_Out::thread_tmp_2_fu_436_p2() {
    tmp_2_fu_436_p2 = (mux.read() ^ ap_const_lv1_1);
}

void LDPC_Out::thread_tmp_3_fu_357_p2() {
    tmp_3_fu_357_p2 = (!read_cnt.read().is_01() || !max_loc_1_cast_fu_353_p1.read().is_01())? sc_lv<1>(): (sc_bigint<16>(read_cnt.read()) < sc_bigint<16>(max_loc_1_cast_fu_353_p1.read()));
}

void LDPC_Out::thread_tmp_4_fu_575_p2() {
    tmp_4_fu_575_p2 = (!mem.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(mem.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_tmp_5_fu_391_p1() {
    tmp_5_fu_391_p1 = esl_sext<32,16>(pos_r.read());
}

void LDPC_Out::thread_tmp_6_fu_413_p2() {
    tmp_6_fu_413_p2 = (!pos_r.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(pos_r.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_tmp_7_fu_369_p2() {
    tmp_7_fu_369_p2 = (!read_cnt.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(read_cnt.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_tmp_8_fu_270_p1() {
    tmp_8_fu_270_p1 = max.read().range(13-1, 0);
}

void LDPC_Out::thread_tmp_fu_310_p2() {
    tmp_fu_310_p2 = (!block_V.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(block_V.read() == ap_const_lv2_1);
}

void LDPC_Out::thread_tmp_s_fu_407_p2() {
    tmp_s_fu_407_p2 = (!pos_r.read().is_01() || !trig.read().is_01())? sc_lv<1>(): sc_lv<1>(pos_r.read() == trig.read());
}

void LDPC_Out::thread_zero_load_load_fu_262_p1() {
    zero_load_load_fu_262_p1 = zero.read();
}

void LDPC_Out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void LDPC_Out::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out\" :  \"" << data_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_ap_vld\" :  \"" << data_out_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"reset\" :  \"" << reset.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cur_read_pos_V\" :  \"" << cur_read_pos_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cur_read_pos_V_ap_vld\" :  \"" << cur_read_pos_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"block_V\" :  \"" << block_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rd_clk_in\" :  \"" << rd_clk_in.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rd_mux\" :  \"" << rd_mux.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out0_address0\" :  \"" << mem_out0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out0_ce0\" :  \"" << mem_out0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out0_q0\" :  \"" << mem_out0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out1_address0\" :  \"" << mem_out1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out1_ce0\" :  \"" << mem_out1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out1_q0\" :  \"" << mem_out1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out2_address0\" :  \"" << mem_out2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out2_ce0\" :  \"" << mem_out2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out2_q0\" :  \"" << mem_out2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out3_address0\" :  \"" << mem_out3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out3_ce0\" :  \"" << mem_out3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out3_q0\" :  \"" << mem_out3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out4_address0\" :  \"" << mem_out4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out4_ce0\" :  \"" << mem_out4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out4_q0\" :  \"" << mem_out4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out5_address0\" :  \"" << mem_out5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out5_ce0\" :  \"" << mem_out5_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out5_q0\" :  \"" << mem_out5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out6_address0\" :  \"" << mem_out6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out6_ce0\" :  \"" << mem_out6_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out6_q0\" :  \"" << mem_out6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out7_address0\" :  \"" << mem_out7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out7_ce0\" :  \"" << mem_out7_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out7_q0\" :  \"" << mem_out7_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

