

================================================================
== Vivado HLS Report for 'LDPC_Out'
================================================================
* Date:           Fri Mar 15 18:33:41 2019

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        LDPC_Out
* Solution:       solution2
* Product family: kintex7
* Target device:  xc7k160tfbg676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.96|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 6.96ns
ST_1: rd_clk_in_read (37)  [1/1] 0.00ns
:15  %rd_clk_in_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %rd_clk_in)

ST_1: block_V_read (38)  [1/1] 0.00ns
:16  %block_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %block_V)

ST_1: reset_read (39)  [1/1] 0.00ns
:17  %reset_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %reset)

ST_1: zero_load (41)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:39
:19  %zero_load = load i1* @zero, align 1

ST_1: max_load (42)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:54
:20  %max_load = load i16* @max, align 2

ST_1: tmp_8 (43)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:54
:21  %tmp_8 = trunc i16 %max_load to i13

ST_1: read_cnt_load (44)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:54
:22  %read_cnt_load = load i16* @read_cnt, align 2

ST_1: StgValue_11 (46)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:39
:24  br i1 %reset_read, label %1, label %.critedge

ST_1: tmp_1 (48)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:54
.critedge:0  %tmp_1 = icmp slt i16 %read_cnt_load, %max_load

ST_1: or_cond_2 (49)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:54
.critedge:1  %or_cond_2 = or i1 %zero_load, %tmp_1

ST_1: StgValue_14 (50)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:54
.critedge:2  br i1 %or_cond_2, label %.critedge._crit_edge, label %3

ST_1: StgValue_15 (53)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:57
:1  store i16 0, i16* @read_cnt, align 2

ST_1: StgValue_16 (55)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:59
:3  store i1 true, i1* @zero, align 1

ST_1: StgValue_17 (59)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:61
:7  br label %._crit_edge21

ST_1: StgValue_18 (61)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:39
:0  br i1 %zero_load, label %2, label %.critedge._crit_edge

ST_1: StgValue_19 (63)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:41
:0  store i1 false, i1* @zero, align 1

ST_1: tmp (64)  [1/1] 0.85ns  loc: LDPC_Out/LDPC_Out.cpp:42
:1  %tmp = icmp eq i2 %block_V_read, 1

ST_1: storemerge1 (65)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:42
:2  %storemerge1 = select i1 %tmp, i13 1024, i13 -4096

ST_1: storemerge1_cast_cas (66)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:42
:3  %storemerge1_cast_cas = select i1 %tmp, i16 1024, i16 4096

ST_1: storemerge2_cast_cas (67)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:42
:4  %storemerge2_cast_cas = select i1 %tmp, i16 127, i16 511

ST_1: StgValue_24 (68)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:49
:5  store i16 %storemerge1_cast_cas, i16* @max, align 2

ST_1: StgValue_25 (69)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:45
:6  store i16 %storemerge2_cast_cas, i16* @trig, align 2

ST_1: StgValue_26 (70)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:52
:7  br label %.critedge._crit_edge

ST_1: max_loc_1 (72)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:54
.critedge._crit_edge:0  %max_loc_1 = phi i13 [ %tmp_8, %.critedge ], [ %storemerge1, %2 ], [ %tmp_8, %1 ]

ST_1: max_loc_1_cast (73)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:62
.critedge._crit_edge:1  %max_loc_1_cast = zext i13 %max_loc_1 to i16

ST_1: tmp_3 (74)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:62
.critedge._crit_edge:2  %tmp_3 = icmp slt i16 %read_cnt_load, %max_loc_1_cast

ST_1: or_cond1_3 (75)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:62
.critedge._crit_edge:3  %or_cond1_3 = and i1 %tmp_3, %rd_clk_in_read

ST_1: StgValue_31 (76)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:62
.critedge._crit_edge:4  br i1 %or_cond1_3, label %_ifconv, label %._crit_edge21

ST_1: tmp_7 (128)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:110
:3  %tmp_7 = add i16 %read_cnt_load, 1

ST_1: StgValue_33 (129)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:110
:4  store i16 %tmp_7, i16* @read_cnt, align 2

ST_1: StgValue_34 (130)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:112
:5  br label %._crit_edge21


 <State 2>: 3.63ns
ST_2: pos_load (45)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:68
:23  %pos_load = load i16* @pos_r, align 2

ST_2: StgValue_36 (52)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:56
:0  store i16 0, i16* @pos_r, align 2

ST_2: tmp_5 (79)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:68
_ifconv:1  %tmp_5 = sext i16 %pos_load to i32

ST_2: mem_out0_addr (80)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:68
_ifconv:2  %mem_out0_addr = getelementptr [512 x i1]* %mem_out0, i32 0, i32 %tmp_5

ST_2: data (81)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:68
_ifconv:3  %data = load i1* %mem_out0_addr, align 1

ST_2: mem_out1_addr (82)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:72
_ifconv:4  %mem_out1_addr = getelementptr [512 x i1]* %mem_out1, i32 0, i32 %tmp_5

ST_2: data_1 (83)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:72
_ifconv:5  %data_1 = load i1* %mem_out1_addr, align 1

ST_2: mem_out2_addr (84)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:76
_ifconv:6  %mem_out2_addr = getelementptr [512 x i1]* %mem_out2, i32 0, i32 %tmp_5

ST_2: data_2 (85)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:76
_ifconv:7  %data_2 = load i1* %mem_out2_addr, align 1

ST_2: mem_out3_addr (86)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:80
_ifconv:8  %mem_out3_addr = getelementptr [512 x i1]* %mem_out3, i32 0, i32 %tmp_5

ST_2: data_3 (87)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:80
_ifconv:9  %data_3 = load i1* %mem_out3_addr, align 1

ST_2: mem_out4_addr (88)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:84
_ifconv:10  %mem_out4_addr = getelementptr [512 x i1]* %mem_out4, i32 0, i32 %tmp_5

ST_2: data_4 (89)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:84
_ifconv:11  %data_4 = load i1* %mem_out4_addr, align 1

ST_2: mem_out5_addr (90)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv:12  %mem_out5_addr = getelementptr [512 x i1]* %mem_out5, i32 0, i32 %tmp_5

ST_2: data_5 (91)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv:13  %data_5 = load i1* %mem_out5_addr, align 1

ST_2: mem_out6_addr (92)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:92
_ifconv:14  %mem_out6_addr = getelementptr [512 x i1]* %mem_out6, i32 0, i32 %tmp_5

ST_2: data_6 (93)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:92
_ifconv:15  %data_6 = load i1* %mem_out6_addr, align 1

ST_2: mem_out7_addr (94)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:96
_ifconv:16  %mem_out7_addr = getelementptr [512 x i1]* %mem_out7, i32 0, i32 %tmp_5

ST_2: data_7 (95)  [2/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:96
_ifconv:17  %data_7 = load i1* %mem_out7_addr, align 1

ST_2: trig_load (114)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:101
_ifconv:36  %trig_load = load i16* @trig, align 2

ST_2: tmp_s (115)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:101
_ifconv:37  %tmp_s = icmp eq i16 %pos_load, %trig_load

ST_2: StgValue_56 (116)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:101
_ifconv:38  br i1 %tmp_s, label %4, label %5

ST_2: tmp_6 (118)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:107
:0  %tmp_6 = add i16 %pos_load, 1

ST_2: StgValue_58 (119)  [1/1] 1.09ns
:1  br label %6

ST_2: StgValue_59 (123)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:105
:2  br label %6

ST_2: storemerge (125)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:107
:0  %storemerge = phi i16 [ %tmp_6, %5 ], [ 0, %4 ]

ST_2: StgValue_61 (126)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:104
:1  store i16 %storemerge, i16* @pos_r, align 2

ST_2: val_assign (132)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:110
._crit_edge21:0  %val_assign = phi i16 [ 0, %3 ], [ %tmp_7, %6 ], [ %read_cnt_load, %.critedge._crit_edge ]


 <State 3>: 4.91ns
ST_3: StgValue_63 (22)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i1* %data_out), !map !40

ST_3: StgValue_64 (23)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i1 %reset), !map !44

ST_3: StgValue_65 (24)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i16* %cur_read_pos_V), !map !50

ST_3: StgValue_66 (25)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i2 %block_V), !map !54

ST_3: StgValue_67 (26)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1 %rd_clk_in), !map !58

ST_3: StgValue_68 (27)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %rd_mux), !map !62

ST_3: StgValue_69 (28)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out0), !map !66

ST_3: StgValue_70 (29)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out1), !map !72

ST_3: StgValue_71 (30)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out2), !map !76

ST_3: StgValue_72 (31)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out3), !map !80

ST_3: StgValue_73 (32)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out4), !map !84

ST_3: StgValue_74 (33)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out5), !map !88

ST_3: StgValue_75 (34)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out6), !map !92

ST_3: StgValue_76 (35)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap([512 x i1]* %mem_out7), !map !96

ST_3: StgValue_77 (36)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @LDPC_Out_str) nounwind

ST_3: StgValue_78 (40)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:33
:18  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: StgValue_79 (54)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:58
:2  store i16 0, i16* @mem, align 2

ST_3: mux_load (56)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:60
:4  %mux_load = load i1* @mux, align 1

ST_3: tmp_2 (57)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:60
:5  %tmp_2 = xor i1 %mux_load, true

ST_3: StgValue_82 (58)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:60
:6  store i1 %tmp_2, i1* @mux, align 1

ST_3: mem_load (78)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:0  %mem_load = load i16* @mem, align 2

ST_3: data (81)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:68
_ifconv:3  %data = load i1* %mem_out0_addr, align 1

ST_3: data_1 (83)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:72
_ifconv:5  %data_1 = load i1* %mem_out1_addr, align 1

ST_3: data_2 (85)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:76
_ifconv:7  %data_2 = load i1* %mem_out2_addr, align 1

ST_3: data_3 (87)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:80
_ifconv:9  %data_3 = load i1* %mem_out3_addr, align 1

ST_3: data_4 (89)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:84
_ifconv:11  %data_4 = load i1* %mem_out4_addr, align 1

ST_3: data_5 (91)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv:13  %data_5 = load i1* %mem_out5_addr, align 1

ST_3: data_6 (93)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:92
_ifconv:15  %data_6 = load i1* %mem_out6_addr, align 1

ST_3: data_7 (95)  [1/2] 2.39ns  loc: LDPC_Out/LDPC_Out.cpp:96
_ifconv:17  %data_7 = load i1* %mem_out7_addr, align 1

ST_3: sel_tmp2 (96)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:18  %sel_tmp2 = icmp eq i16 %mem_load, 6

ST_3: sel_tmp4 (97)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:19  %sel_tmp4 = icmp eq i16 %mem_load, 5

ST_3: sel_tmp6 (98)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:20  %sel_tmp6 = icmp eq i16 %mem_load, 4

ST_3: sel_tmp8 (99)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:21  %sel_tmp8 = icmp eq i16 %mem_load, 3

ST_3: sel_tmp (100)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:22  %sel_tmp = icmp eq i16 %mem_load, 2

ST_3: sel_tmp1 (101)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:23  %sel_tmp1 = icmp eq i16 %mem_load, 1

ST_3: sel_tmp3 (102)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:24  %sel_tmp3 = icmp eq i16 %mem_load, 0

ST_3: newSel (103)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:65 (grouped into LUT with out node newSel4)
_ifconv:25  %newSel = select i1 %sel_tmp3, i1 %data, i1 %data_1

ST_3: or_cond (104)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:65
_ifconv:26  %or_cond = or i1 %sel_tmp3, %sel_tmp1

ST_3: newSel1 (105)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:65 (out node of the LUT)
_ifconv:27  %newSel1 = select i1 %sel_tmp, i1 %data_2, i1 %data_3

ST_3: or_cond1 (106)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:65 (grouped into LUT with out node data_8)
_ifconv:28  %or_cond1 = or i1 %sel_tmp, %sel_tmp8

ST_3: newSel2 (107)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:65 (grouped into LUT with out node newSel5)
_ifconv:29  %newSel2 = select i1 %sel_tmp6, i1 %data_4, i1 %data_5

ST_3: or_cond2 (108)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:65 (grouped into LUT with out node newSel5)
_ifconv:30  %or_cond2 = or i1 %sel_tmp6, %sel_tmp4

ST_3: newSel3 (109)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:65 (out node of the LUT)
_ifconv:31  %newSel3 = select i1 %sel_tmp2, i1 %data_6, i1 %data_7

ST_3: newSel4 (110)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:65 (out node of the LUT)
_ifconv:32  %newSel4 = select i1 %or_cond, i1 %newSel, i1 %newSel1

ST_3: or_cond3 (111)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:65 (grouped into LUT with out node data_8)
_ifconv:33  %or_cond3 = or i1 %or_cond, %or_cond1

ST_3: newSel5 (112)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:65 (out node of the LUT)
_ifconv:34  %newSel5 = select i1 %or_cond2, i1 %newSel2, i1 %newSel3

ST_3: data_8 (113)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:65 (out node of the LUT)
_ifconv:35  %data_8 = select i1 %or_cond3, i1 %newSel4, i1 %newSel5

ST_3: tmp_4 (121)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:103
:0  %tmp_4 = add i16 %mem_load, 1

ST_3: StgValue_111 (122)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:103
:1  store i16 %tmp_4, i16* @mem, align 2

ST_3: StgValue_112 (127)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:109
:2  call void @_ssdm_op_Write.ap_auto.i1P(i1* %data_out, i1 %data_8)

ST_3: StgValue_113 (133)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:117
._crit_edge21:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %cur_read_pos_V, i16 %val_assign)

ST_3: StgValue_114 (134)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:119
._crit_edge21:2  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.96ns
The critical path consists of the following:
	'load' operation ('max_load', LDPC_Out/LDPC_Out.cpp:54) on static variable 'max' [42]  (0 ns)
	'icmp' operation ('tmp_1', LDPC_Out/LDPC_Out.cpp:54) [48]  (1.55 ns)
	'or' operation ('or_cond_2', LDPC_Out/LDPC_Out.cpp:54) [49]  (0.84 ns)
	multiplexor before 'phi' operation ('max_loc_1', LDPC_Out/LDPC_Out.cpp:54) with incoming values : ('tmp_8', LDPC_Out/LDPC_Out.cpp:54) ('storemerge1', LDPC_Out/LDPC_Out.cpp:42) [72]  (1.09 ns)
	'phi' operation ('max_loc_1', LDPC_Out/LDPC_Out.cpp:54) with incoming values : ('tmp_8', LDPC_Out/LDPC_Out.cpp:54) ('storemerge1', LDPC_Out/LDPC_Out.cpp:42) [72]  (0 ns)
	'icmp' operation ('tmp_3', LDPC_Out/LDPC_Out.cpp:62) [74]  (1.55 ns)
	'and' operation ('or_cond1_3', LDPC_Out/LDPC_Out.cpp:62) [75]  (0.84 ns)
	multiplexor before 'phi' operation ('val', LDPC_Out/LDPC_Out.cpp:110) with incoming values : ('read_cnt_load', LDPC_Out/LDPC_Out.cpp:54) ('tmp_7', LDPC_Out/LDPC_Out.cpp:110) [132]  (1.09 ns)

 <State 2>: 3.63ns
The critical path consists of the following:
	'load' operation ('pos_load', LDPC_Out/LDPC_Out.cpp:68) on static variable 'pos_r' [45]  (0 ns)
	'add' operation ('tmp_6', LDPC_Out/LDPC_Out.cpp:107) [118]  (1.46 ns)
	multiplexor before 'phi' operation ('storemerge', LDPC_Out/LDPC_Out.cpp:107) with incoming values : ('tmp_6', LDPC_Out/LDPC_Out.cpp:107) [125]  (1.09 ns)
	'phi' operation ('storemerge', LDPC_Out/LDPC_Out.cpp:107) with incoming values : ('tmp_6', LDPC_Out/LDPC_Out.cpp:107) [125]  (0 ns)
	'store' operation (LDPC_Out/LDPC_Out.cpp:104) of variable 'storemerge', LDPC_Out/LDPC_Out.cpp:107 on static variable 'pos_r' [126]  (1.09 ns)

 <State 3>: 4.91ns
The critical path consists of the following:
	'load' operation ('data', LDPC_Out/LDPC_Out.cpp:76) on array 'mem_out2' [85]  (2.39 ns)
	'select' operation ('newSel1', LDPC_Out/LDPC_Out.cpp:65) [105]  (0.84 ns)
	'select' operation ('newSel4', LDPC_Out/LDPC_Out.cpp:65) [110]  (0.84 ns)
	'select' operation ('data', LDPC_Out/LDPC_Out.cpp:65) [113]  (0.84 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
