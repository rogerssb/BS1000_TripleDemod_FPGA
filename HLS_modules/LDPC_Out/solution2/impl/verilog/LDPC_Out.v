// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="LDPC_Out,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg676-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.958000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=96,HLS_SYN_LUT=262}" *)

module LDPC_Out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_out,
        data_out_ap_vld,
        reset,
        cur_read_pos_V,
        cur_read_pos_V_ap_vld,
        block_V,
        rd_clk_in,
        rd_mux,
        mem_out0_address0,
        mem_out0_ce0,
        mem_out0_q0,
        mem_out1_address0,
        mem_out1_ce0,
        mem_out1_q0,
        mem_out2_address0,
        mem_out2_ce0,
        mem_out2_q0,
        mem_out3_address0,
        mem_out3_ce0,
        mem_out3_q0,
        mem_out4_address0,
        mem_out4_ce0,
        mem_out4_q0,
        mem_out5_address0,
        mem_out5_ce0,
        mem_out5_q0,
        mem_out6_address0,
        mem_out6_ce0,
        mem_out6_q0,
        mem_out7_address0,
        mem_out7_ce0,
        mem_out7_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv16_400 = 16'b10000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_7F = 16'b1111111;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv13_400 = 13'b10000000000;
parameter    ap_const_lv13_1000 = 13'b1000000000000;
parameter    ap_const_lv16_1000 = 16'b1000000000000;
parameter    ap_const_lv16_1FF = 16'b111111111;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv16_6 = 16'b110;
parameter    ap_const_lv16_5 = 16'b101;
parameter    ap_const_lv16_4 = 16'b100;
parameter    ap_const_lv16_3 = 16'b11;
parameter    ap_const_lv16_2 = 16'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   data_out;
output   data_out_ap_vld;
input   reset;
output  [15:0] cur_read_pos_V;
output   cur_read_pos_V_ap_vld;
input  [1:0] block_V;
input   rd_clk_in;
input   rd_mux;
output  [8:0] mem_out0_address0;
output   mem_out0_ce0;
input  [0:0] mem_out0_q0;
output  [8:0] mem_out1_address0;
output   mem_out1_ce0;
input  [0:0] mem_out1_q0;
output  [8:0] mem_out2_address0;
output   mem_out2_ce0;
input  [0:0] mem_out2_q0;
output  [8:0] mem_out3_address0;
output   mem_out3_ce0;
input  [0:0] mem_out3_q0;
output  [8:0] mem_out4_address0;
output   mem_out4_ce0;
input  [0:0] mem_out4_q0;
output  [8:0] mem_out5_address0;
output   mem_out5_ce0;
input  [0:0] mem_out5_q0;
output  [8:0] mem_out6_address0;
output   mem_out6_ce0;
input  [0:0] mem_out6_q0;
output  [8:0] mem_out7_address0;
output   mem_out7_ce0;
input  [0:0] mem_out7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_out_ap_vld;
reg cur_read_pos_V_ap_vld;
reg mem_out0_ce0;
reg mem_out1_ce0;
reg mem_out2_ce0;
reg mem_out3_ce0;
reg mem_out4_ce0;
reg mem_out5_ce0;
reg mem_out6_ce0;
reg mem_out7_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] zero;
reg   [15:0] max;
reg   [15:0] read_cnt;
reg   [15:0] pos_r;
reg   [15:0] trig;
reg   [15:0] mem;
reg   [0:0] mux;
reg   [15:0] val_assign_reg_247;
wire   [0:0] reset_read_read_fu_110_p2;
reg   [0:0] reset_read_reg_587;
reg   [0:0] ap_pipeline_reg_pp0_iter1_reset_read_reg_587;
wire   [0:0] or_cond_2_fu_286_p2;
reg   [0:0] or_cond_2_reg_599;
reg   [0:0] ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599;
wire   [0:0] or_cond1_3_fu_363_p2;
reg   [0:0] or_cond1_3_reg_603;
reg   [0:0] ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603;
wire   [15:0] tmp_7_fu_369_p2;
wire   [0:0] tmp_s_fu_407_p2;
reg   [0:0] tmp_s_reg_652;
wire   [12:0] tmp_8_fu_270_p1;
wire   [12:0] ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226;
reg   [12:0] max_loc_1_phi_fu_229_p6;
wire   [12:0] storemerge1_fu_316_p3;
wire   [0:0] zero_load_load_fu_262_p1;
wire   [15:0] tmp_6_fu_413_p2;
wire   [15:0] ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237;
reg   [15:0] storemerge_phi_fu_240_p4;
wire   [15:0] ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247;
reg   [15:0] ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247;
wire  signed [31:0] tmp_5_fu_391_p1;
wire   [15:0] storemerge1_cast_cas_fu_325_p3;
wire   [15:0] storemerge2_cast_cas_fu_333_p3;
wire   [15:0] tmp_4_fu_575_p2;
wire   [0:0] tmp_2_fu_436_p2;
wire   [0:0] tmp_1_fu_280_p2;
wire   [0:0] tmp_fu_310_p2;
wire   [15:0] max_loc_1_cast_fu_353_p1;
wire   [0:0] tmp_3_fu_357_p2;
wire   [0:0] or_cond1_3_fu_363_p1;
wire   [0:0] sel_tmp3_fu_488_p2;
wire   [0:0] sel_tmp1_fu_482_p2;
wire   [0:0] sel_tmp_fu_476_p2;
wire   [0:0] sel_tmp8_fu_470_p2;
wire   [0:0] sel_tmp6_fu_464_p2;
wire   [0:0] sel_tmp4_fu_458_p2;
wire   [0:0] sel_tmp2_fu_452_p2;
wire   [0:0] or_cond_fu_502_p2;
wire   [0:0] newSel_fu_494_p3;
wire   [0:0] newSel1_fu_508_p3;
wire   [0:0] or_cond1_fu_516_p2;
wire   [0:0] or_cond2_fu_530_p2;
wire   [0:0] newSel2_fu_522_p3;
wire   [0:0] newSel3_fu_536_p3;
wire   [0:0] or_cond3_fu_552_p2;
wire   [0:0] newSel4_fu_544_p3;
wire   [0:0] newSel5_fu_558_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_pipeline_idle_pp0;
reg    ap_condition_139;
reg    ap_condition_213;
reg    ap_condition_36;
reg    ap_condition_247;
reg    ap_condition_231;
reg    ap_condition_151;
reg    ap_condition_191;
reg    ap_condition_195;
reg    ap_condition_202;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 zero = 1'b0;
#0 max = 16'b10000000000;
#0 read_cnt = 16'b0000000000000000;
#0 pos_r = 16'b0000000000000000;
#0 trig = 16'b1111111;
#0 mem = 16'b0000000000000000;
#0 mux = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_36 == 1'b1)) begin
        if ((ap_condition_213 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= read_cnt;
        end else if ((ap_condition_139 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= tmp_7_fu_369_p2;
        end else if (((1'b0 == reset_read_read_fu_110_p2) & (1'b0 == or_cond_2_fu_286_p2))) begin
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= ap_const_lv16_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_231 == 1'b1)) begin
        if ((ap_condition_247 == 1'b1)) begin
            mem <= tmp_4_fu_575_p2;
        end else if (((1'b0 == ap_pipeline_reg_pp0_iter1_reset_read_reg_587) & (1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599))) begin
            mem <= ap_const_lv16_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_191 == 1'b1)) begin
        if ((ap_condition_151 == 1'b1)) begin
            pos_r <= storemerge_phi_fu_240_p4;
        end else if (((1'b0 == reset_read_reg_587) & (1'b0 == or_cond_2_reg_599))) begin
            pos_r <= ap_const_lv16_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_36 == 1'b1)) begin
        if ((ap_condition_139 == 1'b1)) begin
            read_cnt <= tmp_7_fu_369_p2;
        end else if (((1'b0 == reset_read_read_fu_110_p2) & (1'b0 == or_cond_2_fu_286_p2))) begin
            read_cnt <= ap_const_lv16_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_36 == 1'b1)) begin
        if ((~(1'b0 == reset_read_read_fu_110_p2) & ~(1'b0 == zero_load_load_fu_262_p1))) begin
            zero <= 1'b0;
        end else if (((1'b0 == reset_read_read_fu_110_p2) & (1'b0 == or_cond_2_fu_286_p2))) begin
            zero <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)))) begin
        ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 <= or_cond1_3_reg_603;
        ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 <= or_cond_2_reg_599;
        ap_pipeline_reg_pp0_iter1_reset_read_reg_587 <= reset_read_reg_587;
        reset_read_reg_587 <= reset;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & ~(1'b0 == reset_read_read_fu_110_p2) & ~(1'b0 == zero_load_load_fu_262_p1))) begin
        max[10] <= storemerge1_cast_cas_fu_325_p3[10];
max[12] <= storemerge1_cast_cas_fu_325_p3[12];
        trig[8 : 7] <= storemerge2_cast_cas_fu_333_p3[8 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_pipeline_reg_pp0_iter1_reset_read_reg_587) & (1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599))) begin
        mux <= tmp_2_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (~(1'b0 == reset_read_read_fu_110_p2) | ~(1'b0 == or_cond_2_fu_286_p2)))) begin
        or_cond1_3_reg_603 <= or_cond1_3_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b0 == reset_read_read_fu_110_p2))) begin
        or_cond_2_reg_599 <= or_cond_2_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & ((~(1'b0 == reset_read_reg_587) & ~(1'b0 == or_cond1_3_reg_603)) | (~(1'b0 == or_cond1_3_reg_603) & ~(1'b0 == or_cond_2_reg_599))))) begin
        tmp_s_reg_652 <= tmp_s_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        val_assign_reg_247 <= ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_pipeline_idle_pp0 = 1'b1;
    end else begin
        ap_pipeline_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        cur_read_pos_V_ap_vld = 1'b1;
    end else begin
        cur_read_pos_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2) & ((~(1'b0 == ap_pipeline_reg_pp0_iter1_reset_read_reg_587) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603)) | (~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599))))) begin
        data_out_ap_vld = 1'b1;
    end else begin
        data_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == reset_read_read_fu_110_p2) & ~(1'b0 == zero_load_load_fu_262_p1))) begin
        max_loc_1_phi_fu_229_p6 = storemerge1_fu_316_p3;
    end else if ((((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == reset_read_read_fu_110_p2) & ~(1'b0 == or_cond_2_fu_286_p2)) | ((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == reset_read_read_fu_110_p2) & (1'b0 == zero_load_load_fu_262_p1)))) begin
        max_loc_1_phi_fu_229_p6 = tmp_8_fu_270_p1;
    end else begin
        max_loc_1_phi_fu_229_p6 = ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out0_ce0 = 1'b1;
    end else begin
        mem_out0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out1_ce0 = 1'b1;
    end else begin
        mem_out1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out2_ce0 = 1'b1;
    end else begin
        mem_out2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out3_ce0 = 1'b1;
    end else begin
        mem_out3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out4_ce0 = 1'b1;
    end else begin
        mem_out4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out5_ce0 = 1'b1;
    end else begin
        mem_out5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out6_ce0 = 1'b1;
    end else begin
        mem_out6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        mem_out7_ce0 = 1'b1;
    end else begin
        mem_out7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        if ((ap_condition_202 == 1'b1)) begin
            storemerge_phi_fu_240_p4 = ap_const_lv16_0;
        end else if ((ap_condition_195 == 1'b1)) begin
            storemerge_phi_fu_240_p4 = tmp_6_fu_413_p2;
        end else begin
            storemerge_phi_fu_240_p4 = ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237;
        end
    end else begin
        storemerge_phi_fu_240_p4 = ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_0];

always @ (*) begin
    ap_condition_139 = ((~(1'b0 == reset_read_read_fu_110_p2) & ~(1'b0 == or_cond1_3_fu_363_p2)) | (~(1'b0 == or_cond_2_fu_286_p2) & ~(1'b0 == or_cond1_3_fu_363_p2)));
end

always @ (*) begin
    ap_condition_151 = ((~(1'b0 == reset_read_reg_587) & ~(1'b0 == or_cond1_3_reg_603)) | (~(1'b0 == or_cond1_3_reg_603) & ~(1'b0 == or_cond_2_reg_599)));
end

always @ (*) begin
    ap_condition_191 = ((ap_CS_fsm_pp0_stage0 == 1'b1) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter1));
end

always @ (*) begin
    ap_condition_195 = ((~(1'b0 == reset_read_reg_587) & ~(1'b0 == or_cond1_3_reg_603) & (1'b0 == tmp_s_fu_407_p2)) | (~(1'b0 == or_cond1_3_reg_603) & ~(1'b0 == or_cond_2_reg_599) & (1'b0 == tmp_s_fu_407_p2)));
end

always @ (*) begin
    ap_condition_202 = ((~(1'b0 == reset_read_reg_587) & ~(1'b0 == or_cond1_3_reg_603) & ~(1'b0 == tmp_s_fu_407_p2)) | (~(1'b0 == or_cond1_3_reg_603) & ~(1'b0 == or_cond_2_reg_599) & ~(1'b0 == tmp_s_fu_407_p2)));
end

always @ (*) begin
    ap_condition_213 = ((~(1'b0 == reset_read_read_fu_110_p2) & (1'b0 == or_cond1_3_fu_363_p2)) | (~(1'b0 == or_cond_2_fu_286_p2) & (1'b0 == or_cond1_3_fu_363_p2)));
end

always @ (*) begin
    ap_condition_231 = (~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter2));
end

always @ (*) begin
    ap_condition_247 = ((~(1'b0 == ap_pipeline_reg_pp0_iter1_reset_read_reg_587) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603) & ~(1'b0 == tmp_s_reg_652)) | (~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603) & ~(1'b0 == tmp_s_reg_652) & ~(1'b0 == ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599)));
end

always @ (*) begin
    ap_condition_36 = ((ap_CS_fsm_pp0_stage0 == 1'b1) & (1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_start == 1'b0)));
end

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247 = 'bx;

assign ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237 = 'bx;

assign cur_read_pos_V = val_assign_reg_247;

assign data_out = ((or_cond3_fu_552_p2[0:0] === 1'b1) ? newSel4_fu_544_p3 : newSel5_fu_558_p3);

assign max_loc_1_cast_fu_353_p1 = max_loc_1_phi_fu_229_p6;

assign mem_out0_address0 = tmp_5_fu_391_p1;

assign mem_out1_address0 = tmp_5_fu_391_p1;

assign mem_out2_address0 = tmp_5_fu_391_p1;

assign mem_out3_address0 = tmp_5_fu_391_p1;

assign mem_out4_address0 = tmp_5_fu_391_p1;

assign mem_out5_address0 = tmp_5_fu_391_p1;

assign mem_out6_address0 = tmp_5_fu_391_p1;

assign mem_out7_address0 = tmp_5_fu_391_p1;

assign newSel1_fu_508_p3 = ((sel_tmp_fu_476_p2[0:0] === 1'b1) ? mem_out2_q0 : mem_out3_q0);

assign newSel2_fu_522_p3 = ((sel_tmp6_fu_464_p2[0:0] === 1'b1) ? mem_out4_q0 : mem_out5_q0);

assign newSel3_fu_536_p3 = ((sel_tmp2_fu_452_p2[0:0] === 1'b1) ? mem_out6_q0 : mem_out7_q0);

assign newSel4_fu_544_p3 = ((or_cond_fu_502_p2[0:0] === 1'b1) ? newSel_fu_494_p3 : newSel1_fu_508_p3);

assign newSel5_fu_558_p3 = ((or_cond2_fu_530_p2[0:0] === 1'b1) ? newSel2_fu_522_p3 : newSel3_fu_536_p3);

assign newSel_fu_494_p3 = ((sel_tmp3_fu_488_p2[0:0] === 1'b1) ? mem_out0_q0 : mem_out1_q0);

assign or_cond1_3_fu_363_p1 = rd_clk_in;

assign or_cond1_3_fu_363_p2 = (tmp_3_fu_357_p2 & or_cond1_3_fu_363_p1);

assign or_cond1_fu_516_p2 = (sel_tmp_fu_476_p2 | sel_tmp8_fu_470_p2);

assign or_cond2_fu_530_p2 = (sel_tmp6_fu_464_p2 | sel_tmp4_fu_458_p2);

assign or_cond3_fu_552_p2 = (or_cond_fu_502_p2 | or_cond1_fu_516_p2);

assign or_cond_2_fu_286_p2 = (zero | tmp_1_fu_280_p2);

assign or_cond_fu_502_p2 = (sel_tmp3_fu_488_p2 | sel_tmp1_fu_482_p2);

assign reset_read_read_fu_110_p2 = reset;

assign sel_tmp1_fu_482_p2 = ((mem == ap_const_lv16_1) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_452_p2 = ((mem == ap_const_lv16_6) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_488_p2 = ((mem == ap_const_lv16_0) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_458_p2 = ((mem == ap_const_lv16_5) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_464_p2 = ((mem == ap_const_lv16_4) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_470_p2 = ((mem == ap_const_lv16_3) ? 1'b1 : 1'b0);

assign sel_tmp_fu_476_p2 = ((mem == ap_const_lv16_2) ? 1'b1 : 1'b0);

assign storemerge1_cast_cas_fu_325_p3 = ((tmp_fu_310_p2[0:0] === 1'b1) ? ap_const_lv16_400 : ap_const_lv16_1000);

assign storemerge1_fu_316_p3 = ((tmp_fu_310_p2[0:0] === 1'b1) ? ap_const_lv13_400 : ap_const_lv13_1000);

assign storemerge2_cast_cas_fu_333_p3 = ((tmp_fu_310_p2[0:0] === 1'b1) ? ap_const_lv16_7F : ap_const_lv16_1FF);

assign tmp_1_fu_280_p2 = (($signed(read_cnt) < $signed(max)) ? 1'b1 : 1'b0);

assign tmp_2_fu_436_p2 = (mux ^ 1'b1);

assign tmp_3_fu_357_p2 = (($signed(read_cnt) < $signed(max_loc_1_cast_fu_353_p1)) ? 1'b1 : 1'b0);

assign tmp_4_fu_575_p2 = (mem + ap_const_lv16_1);

assign tmp_5_fu_391_p1 = $signed(pos_r);

assign tmp_6_fu_413_p2 = (pos_r + ap_const_lv16_1);

assign tmp_7_fu_369_p2 = (read_cnt + ap_const_lv16_1);

assign tmp_8_fu_270_p1 = max[12:0];

assign tmp_fu_310_p2 = ((block_V == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_s_fu_407_p2 = ((pos_r == trig) ? 1'b1 : 1'b0);

assign zero_load_load_fu_262_p1 = zero;

always @ (posedge ap_clk) begin
    max[9:0] <= 10'b0000000000;
    max[11:11] <= 1'b0;
    max[15:13] <= 3'b000;
    trig[6:0] <= 7'b1111111;
    trig[15:9] <= 7'b0000000;
end

endmodule //LDPC_Out
