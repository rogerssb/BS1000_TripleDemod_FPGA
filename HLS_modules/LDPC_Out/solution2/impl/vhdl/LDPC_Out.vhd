-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LDPC_Out is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_out : OUT STD_LOGIC;
    data_out_ap_vld : OUT STD_LOGIC;
    reset : IN STD_LOGIC;
    cur_read_pos_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    cur_read_pos_V_ap_vld : OUT STD_LOGIC;
    block_V : IN STD_LOGIC_VECTOR (1 downto 0);
    rd_clk_in : IN STD_LOGIC;
    rd_mux : IN STD_LOGIC;
    mem_out0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out0_ce0 : OUT STD_LOGIC;
    mem_out0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out1_ce0 : OUT STD_LOGIC;
    mem_out1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out2_ce0 : OUT STD_LOGIC;
    mem_out2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out3_ce0 : OUT STD_LOGIC;
    mem_out3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out4_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out4_ce0 : OUT STD_LOGIC;
    mem_out4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out5_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out5_ce0 : OUT STD_LOGIC;
    mem_out5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out6_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out6_ce0 : OUT STD_LOGIC;
    mem_out6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    mem_out7_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    mem_out7_ce0 : OUT STD_LOGIC;
    mem_out7_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of LDPC_Out is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "LDPC_Out,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg676-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.958000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=96,HLS_SYN_LUT=262}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_400 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_7F : STD_LOGIC_VECTOR (15 downto 0) := "0000000001111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_400 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv16_1000 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_const_lv16_1FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal zero : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal max : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    signal read_cnt : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal pos_r : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal trig : STD_LOGIC_VECTOR (15 downto 0) := "0000000001111111";
    signal mem : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal val_assign_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal reset_read_read_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reset_read_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_reset_read_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_2_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_2_reg_599 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_3_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_3_reg_603 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_369_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_652 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_270_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226 : STD_LOGIC_VECTOR (12 downto 0);
    signal max_loc_1_phi_fu_229_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal storemerge1_fu_316_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_load_load_fu_262_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_413_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge_phi_fu_240_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge1_cast_cas_fu_325_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge2_cast_cas_fu_333_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_575_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_loc_1_cast_fu_353_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_3_fu_363_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_fu_508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel5_fu_558_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_idle_pp0 : STD_LOGIC;
    signal ap_condition_139 : BOOLEAN;
    signal ap_condition_213 : BOOLEAN;
    signal ap_condition_36 : BOOLEAN;
    signal ap_condition_247 : BOOLEAN;
    signal ap_condition_231 : BOOLEAN;
    signal ap_condition_151 : BOOLEAN;
    signal ap_condition_191 : BOOLEAN;
    signal ap_condition_195 : BOOLEAN;
    signal ap_condition_202 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_36 = ap_const_boolean_1)) then
                if ((ap_condition_213 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= read_cnt;
                elsif ((ap_condition_139 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= tmp_7_fu_369_p2;
                elsif (((ap_const_lv1_0 = reset_read_read_fu_110_p2) and (ap_const_lv1_0 = or_cond_2_fu_286_p2))) then 
                    ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247 <= ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247;
                end if;
            end if; 
        end if;
    end process;

    mem_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_231 = ap_const_boolean_1)) then
                if ((ap_condition_247 = ap_const_boolean_1)) then 
                    mem <= tmp_4_fu_575_p2;
                elsif (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_reset_read_reg_587) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599))) then 
                    mem <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    pos_r_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_191 = ap_const_boolean_1)) then
                if ((ap_condition_151 = ap_const_boolean_1)) then 
                    pos_r <= storemerge_phi_fu_240_p4;
                elsif (((ap_const_lv1_0 = reset_read_reg_587) and (ap_const_lv1_0 = or_cond_2_reg_599))) then 
                    pos_r <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    read_cnt_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_36 = ap_const_boolean_1)) then
                if ((ap_condition_139 = ap_const_boolean_1)) then 
                    read_cnt <= tmp_7_fu_369_p2;
                elsif (((ap_const_lv1_0 = reset_read_read_fu_110_p2) and (ap_const_lv1_0 = or_cond_2_fu_286_p2))) then 
                    read_cnt <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    zero_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_36 = ap_const_boolean_1)) then
                if ((not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) and not((ap_const_lv1_0 = zero_load_load_fu_262_p1)))) then 
                    zero <= ap_const_lv1_0;
                elsif (((ap_const_lv1_0 = reset_read_read_fu_110_p2) and (ap_const_lv1_0 = or_cond_2_fu_286_p2))) then 
                    zero <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603 <= or_cond1_3_reg_603;
                ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599 <= or_cond_2_reg_599;
                ap_pipeline_reg_pp0_iter1_reset_read_reg_587 <= reset_read_reg_587;
                reset_read_reg_587 <= (0=>reset, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) and not((ap_const_lv1_0 = zero_load_load_fu_262_p1)))) then
                    max(10) <= storemerge1_cast_cas_fu_325_p3(10);    max(12) <= storemerge1_cast_cas_fu_325_p3(12);
                    trig(8 downto 7) <= storemerge2_cast_cas_fu_333_p3(8 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_reset_read_reg_587) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599))) then
                mux <= tmp_2_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) or not((ap_const_lv1_0 = or_cond_2_fu_286_p2))))) then
                or_cond1_3_reg_603 <= or_cond1_3_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_lv1_0 = reset_read_read_fu_110_p2))) then
                or_cond_2_reg_599 <= or_cond_2_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and ((not((ap_const_lv1_0 = reset_read_reg_587)) and not((ap_const_lv1_0 = or_cond1_3_reg_603))) or (not((ap_const_lv1_0 = or_cond1_3_reg_603)) and not((ap_const_lv1_0 = or_cond_2_reg_599)))))) then
                tmp_s_reg_652 <= tmp_s_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
                val_assign_reg_247 <= ap_phi_precharge_reg_pp0_iter1_val_assign_reg_247;
            end if;
        end if;
    end process;
    max(9 downto 0) <= "0000000000";
    max(11 downto 11) <= "0";
    max(15 downto 13) <= "000";
    trig(6 downto 0) <= "1111111";
    trig(15 downto 9) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_pipeline_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0 downto 0);

    ap_condition_139_assign_proc : process(reset_read_read_fu_110_p2, or_cond_2_fu_286_p2, or_cond1_3_fu_363_p2)
    begin
                ap_condition_139 <= ((not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) and not((ap_const_lv1_0 = or_cond1_3_fu_363_p2))) or (not((ap_const_lv1_0 = or_cond_2_fu_286_p2)) and not((ap_const_lv1_0 = or_cond1_3_fu_363_p2))));
    end process;


    ap_condition_151_assign_proc : process(reset_read_reg_587, or_cond_2_reg_599, or_cond1_3_reg_603)
    begin
                ap_condition_151 <= ((not((ap_const_lv1_0 = reset_read_reg_587)) and not((ap_const_lv1_0 = or_cond1_3_reg_603))) or (not((ap_const_lv1_0 = or_cond1_3_reg_603)) and not((ap_const_lv1_0 = or_cond_2_reg_599))));
    end process;


    ap_condition_191_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_191 <= ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1));
    end process;


    ap_condition_195_assign_proc : process(reset_read_reg_587, or_cond_2_reg_599, or_cond1_3_reg_603, tmp_s_fu_407_p2)
    begin
                ap_condition_195 <= ((not((ap_const_lv1_0 = reset_read_reg_587)) and not((ap_const_lv1_0 = or_cond1_3_reg_603)) and (ap_const_lv1_0 = tmp_s_fu_407_p2)) or (not((ap_const_lv1_0 = or_cond1_3_reg_603)) and not((ap_const_lv1_0 = or_cond_2_reg_599)) and (ap_const_lv1_0 = tmp_s_fu_407_p2)));
    end process;


    ap_condition_202_assign_proc : process(reset_read_reg_587, or_cond_2_reg_599, or_cond1_3_reg_603, tmp_s_fu_407_p2)
    begin
                ap_condition_202 <= ((not((ap_const_lv1_0 = reset_read_reg_587)) and not((ap_const_lv1_0 = or_cond1_3_reg_603)) and not((ap_const_lv1_0 = tmp_s_fu_407_p2))) or (not((ap_const_lv1_0 = or_cond1_3_reg_603)) and not((ap_const_lv1_0 = or_cond_2_reg_599)) and not((ap_const_lv1_0 = tmp_s_fu_407_p2))));
    end process;


    ap_condition_213_assign_proc : process(reset_read_read_fu_110_p2, or_cond_2_fu_286_p2, or_cond1_3_fu_363_p2)
    begin
                ap_condition_213 <= ((not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) and (ap_const_lv1_0 = or_cond1_3_fu_363_p2)) or (not((ap_const_lv1_0 = or_cond_2_fu_286_p2)) and (ap_const_lv1_0 = or_cond1_3_fu_363_p2)));
    end process;


    ap_condition_231_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_231 <= (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2));
    end process;


    ap_condition_247_assign_proc : process(ap_pipeline_reg_pp0_iter1_reset_read_reg_587, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603, tmp_s_reg_652)
    begin
                ap_condition_247 <= ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_reset_read_reg_587)) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603)) and not((ap_const_lv1_0 = tmp_s_reg_652))) or (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603)) and not((ap_const_lv1_0 = tmp_s_reg_652)) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599))));
    end process;


    ap_condition_36_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_36 <= ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))));
    end process;


    ap_done_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226 <= "XXXXXXXXXXXXX";
    ap_phi_precharge_reg_pp0_iter0_val_assign_reg_247 <= "XXXXXXXXXXXXXXXX";
    ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237 <= "XXXXXXXXXXXXXXXX";

    ap_pipeline_idle_pp0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_pipeline_idle_pp0 <= ap_const_logic_1;
        else 
            ap_pipeline_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cur_read_pos_V <= val_assign_reg_247;

    cur_read_pos_V_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            cur_read_pos_V_ap_vld <= ap_const_logic_1;
        else 
            cur_read_pos_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_out <= 
        newSel4_fu_544_p3(0) when (or_cond3_fu_552_p2(0) = '1') else 
        newSel5_fu_558_p3(0);

    data_out_ap_vld_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_reset_read_reg_587, ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599, ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603)
    begin
        if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and ((not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_reset_read_reg_587)) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603))) or (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond1_3_reg_603)) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_or_cond_2_reg_599)))))) then 
            data_out_ap_vld <= ap_const_logic_1;
        else 
            data_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    max_loc_1_cast_fu_353_p1 <= std_logic_vector(resize(unsigned(max_loc_1_phi_fu_229_p6),16));

    max_loc_1_phi_fu_229_p6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, reset_read_read_fu_110_p2, or_cond_2_fu_286_p2, tmp_8_fu_270_p1, ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226, storemerge1_fu_316_p3, zero_load_load_fu_262_p1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) and not((ap_const_lv1_0 = zero_load_load_fu_262_p1)))) then 
            max_loc_1_phi_fu_229_p6 <= storemerge1_fu_316_p3;
        elsif ((((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = reset_read_read_fu_110_p2) and not((ap_const_lv1_0 = or_cond_2_fu_286_p2))) or ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = reset_read_read_fu_110_p2)) and (ap_const_lv1_0 = zero_load_load_fu_262_p1)))) then 
            max_loc_1_phi_fu_229_p6 <= tmp_8_fu_270_p1;
        else 
            max_loc_1_phi_fu_229_p6 <= ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_226;
        end if; 
    end process;

    mem_out0_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out0_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out0_ce0 <= ap_const_logic_1;
        else 
            mem_out0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out1_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out1_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out1_ce0 <= ap_const_logic_1;
        else 
            mem_out1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out2_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out2_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out2_ce0 <= ap_const_logic_1;
        else 
            mem_out2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out3_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out3_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out3_ce0 <= ap_const_logic_1;
        else 
            mem_out3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out4_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out4_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out4_ce0 <= ap_const_logic_1;
        else 
            mem_out4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out5_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out5_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out5_ce0 <= ap_const_logic_1;
        else 
            mem_out5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out6_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out6_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out6_ce0 <= ap_const_logic_1;
        else 
            mem_out6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mem_out7_address0 <= tmp_5_fu_391_p1(9 - 1 downto 0);

    mem_out7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            mem_out7_ce0 <= ap_const_logic_1;
        else 
            mem_out7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    newSel1_fu_508_p3 <= 
        mem_out2_q0 when (sel_tmp_fu_476_p2(0) = '1') else 
        mem_out3_q0;
    newSel2_fu_522_p3 <= 
        mem_out4_q0 when (sel_tmp6_fu_464_p2(0) = '1') else 
        mem_out5_q0;
    newSel3_fu_536_p3 <= 
        mem_out6_q0 when (sel_tmp2_fu_452_p2(0) = '1') else 
        mem_out7_q0;
    newSel4_fu_544_p3 <= 
        newSel_fu_494_p3 when (or_cond_fu_502_p2(0) = '1') else 
        newSel1_fu_508_p3;
    newSel5_fu_558_p3 <= 
        newSel2_fu_522_p3 when (or_cond2_fu_530_p2(0) = '1') else 
        newSel3_fu_536_p3;
    newSel_fu_494_p3 <= 
        mem_out0_q0 when (sel_tmp3_fu_488_p2(0) = '1') else 
        mem_out1_q0;
    or_cond1_3_fu_363_p1 <= (0=>rd_clk_in, others=>'-');
    or_cond1_3_fu_363_p2 <= (tmp_3_fu_357_p2 and or_cond1_3_fu_363_p1);
    or_cond1_fu_516_p2 <= (sel_tmp_fu_476_p2 or sel_tmp8_fu_470_p2);
    or_cond2_fu_530_p2 <= (sel_tmp6_fu_464_p2 or sel_tmp4_fu_458_p2);
    or_cond3_fu_552_p2 <= (or_cond_fu_502_p2 or or_cond1_fu_516_p2);
    or_cond_2_fu_286_p2 <= (zero or tmp_1_fu_280_p2);
    or_cond_fu_502_p2 <= (sel_tmp3_fu_488_p2 or sel_tmp1_fu_482_p2);
    reset_read_read_fu_110_p2 <= (0=>reset, others=>'-');
    sel_tmp1_fu_482_p2 <= "1" when (mem = ap_const_lv16_1) else "0";
    sel_tmp2_fu_452_p2 <= "1" when (mem = ap_const_lv16_6) else "0";
    sel_tmp3_fu_488_p2 <= "1" when (mem = ap_const_lv16_0) else "0";
    sel_tmp4_fu_458_p2 <= "1" when (mem = ap_const_lv16_5) else "0";
    sel_tmp6_fu_464_p2 <= "1" when (mem = ap_const_lv16_4) else "0";
    sel_tmp8_fu_470_p2 <= "1" when (mem = ap_const_lv16_3) else "0";
    sel_tmp_fu_476_p2 <= "1" when (mem = ap_const_lv16_2) else "0";
    storemerge1_cast_cas_fu_325_p3 <= 
        ap_const_lv16_400 when (tmp_fu_310_p2(0) = '1') else 
        ap_const_lv16_1000;
    storemerge1_fu_316_p3 <= 
        ap_const_lv13_400 when (tmp_fu_310_p2(0) = '1') else 
        ap_const_lv13_1000;
    storemerge2_cast_cas_fu_333_p3 <= 
        ap_const_lv16_7F when (tmp_fu_310_p2(0) = '1') else 
        ap_const_lv16_1FF;

    storemerge_phi_fu_240_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_6_fu_413_p2, ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237, ap_condition_195, ap_condition_202)
    begin
        if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then
            if ((ap_condition_202 = ap_const_boolean_1)) then 
                storemerge_phi_fu_240_p4 <= ap_const_lv16_0;
            elsif ((ap_condition_195 = ap_const_boolean_1)) then 
                storemerge_phi_fu_240_p4 <= tmp_6_fu_413_p2;
            else 
                storemerge_phi_fu_240_p4 <= ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237;
            end if;
        else 
            storemerge_phi_fu_240_p4 <= ap_phi_precharge_reg_pp0_iter1_storemerge_reg_237;
        end if; 
    end process;

    tmp_1_fu_280_p2 <= "1" when (signed(read_cnt) < signed(max)) else "0";
    tmp_2_fu_436_p2 <= (mux xor ap_const_lv1_1);
    tmp_3_fu_357_p2 <= "1" when (signed(read_cnt) < signed(max_loc_1_cast_fu_353_p1)) else "0";
    tmp_4_fu_575_p2 <= std_logic_vector(unsigned(mem) + unsigned(ap_const_lv16_1));
        tmp_5_fu_391_p1 <= std_logic_vector(resize(signed(pos_r),32));

    tmp_6_fu_413_p2 <= std_logic_vector(unsigned(pos_r) + unsigned(ap_const_lv16_1));
    tmp_7_fu_369_p2 <= std_logic_vector(unsigned(read_cnt) + unsigned(ap_const_lv16_1));
    tmp_8_fu_270_p1 <= max(13 - 1 downto 0);
    tmp_fu_310_p2 <= "1" when (block_V = ap_const_lv2_1) else "0";
    tmp_s_fu_407_p2 <= "1" when (pos_r = trig) else "0";
    zero_load_load_fu_262_p1 <= zero;
end behav;
