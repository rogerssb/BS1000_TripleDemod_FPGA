// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LDPC_Out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LDPC_Out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LDPC_Out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> LDPC_Out::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> LDPC_Out::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> LDPC_Out::ap_const_lv1_1 = "1";
const sc_lv<1> LDPC_Out::ap_const_lv1_0 = "0";
const sc_lv<16> LDPC_Out::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> LDPC_Out::ap_const_lv16_500 = "10100000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_1400 = "1010000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_600 = "11000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_1800 = "1100000000000";
const sc_lv<16> LDPC_Out::ap_const_lv16_2000 = "10000000000000";
const sc_lv<13> LDPC_Out::ap_const_lv13_1000 = "1000000000000";
const sc_lv<13> LDPC_Out::ap_const_lv13_400 = "10000000000";
const sc_lv<10> LDPC_Out::ap_const_lv10_3FF = "1111111111";
const sc_lv<10> LDPC_Out::ap_const_lv10_FF = "11111111";
const sc_lv<10> LDPC_Out::ap_const_lv10_1FF = "111111111";
const sc_lv<10> LDPC_Out::ap_const_lv10_7F = "1111111";
const sc_lv<11> LDPC_Out::ap_const_lv11_7FF = "11111111111";
const sc_lv<11> LDPC_Out::ap_const_lv11_1FF = "111111111";
const sc_lv<32> LDPC_Out::ap_const_lv32_F = "1111";
const sc_lv<16> LDPC_Out::ap_const_lv16_1 = "1";
const sc_lv<16> LDPC_Out::ap_const_lv16_6 = "110";
const sc_lv<16> LDPC_Out::ap_const_lv16_5 = "101";
const sc_lv<16> LDPC_Out::ap_const_lv16_4 = "100";
const sc_lv<16> LDPC_Out::ap_const_lv16_3 = "11";
const sc_lv<16> LDPC_Out::ap_const_lv16_2 = "10";
const bool LDPC_Out::ap_const_boolean_1 = true;

LDPC_Out::LDPC_Out(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_151);
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( or_cond_fu_314_p2 );
    sensitive << ( or_cond1_fu_555_p2 );
    sensitive << ( tmp_16_fu_565_p3 );

    SC_METHOD(thread_ap_condition_166);
    sensitive << ( reset_read_reg_804 );
    sensitive << ( or_cond_reg_817 );
    sensitive << ( or_cond1_reg_821 );
    sensitive << ( tmp_16_reg_825 );

    SC_METHOD(thread_ap_condition_206);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_condition_210);
    sensitive << ( reset_read_reg_804 );
    sensitive << ( or_cond_reg_817 );
    sensitive << ( or_cond1_reg_821 );
    sensitive << ( tmp_16_reg_825 );
    sensitive << ( tmp_12_fu_623_p2 );

    SC_METHOD(thread_ap_condition_217);
    sensitive << ( reset_read_reg_804 );
    sensitive << ( or_cond_reg_817 );
    sensitive << ( or_cond1_reg_821 );
    sensitive << ( tmp_16_reg_825 );
    sensitive << ( tmp_12_fu_623_p2 );

    SC_METHOD(thread_ap_condition_223);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_condition_257);
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( or_cond_fu_314_p2 );
    sensitive << ( or_cond1_fu_555_p2 );
    sensitive << ( tmp_16_fu_565_p3 );

    SC_METHOD(thread_ap_condition_280);
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );
    sensitive << ( tmp_12_reg_874 );

    SC_METHOD(thread_ap_condition_36);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253);

    SC_METHOD(thread_ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264);

    SC_METHOD(thread_ap_phi_precharge_reg_pp0_iter1_val_assign_reg_274);

    SC_METHOD(thread_ap_pipeline_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_cur_read_pos_V);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274 );

    SC_METHOD(thread_cur_read_pos_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_data_out);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );
    sensitive << ( or_cond6_fu_769_p2 );
    sensitive << ( newSel6_fu_761_p3 );
    sensitive << ( newSel7_fu_775_p3 );

    SC_METHOD(thread_data_out_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_max_loc_1_cast_fu_545_p1);
    sensitive << ( max_loc_1_phi_fu_256_p6 );

    SC_METHOD(thread_max_loc_1_phi_fu_256_p6);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( or_cond_fu_314_p2 );
    sensitive << ( tmp_8_fu_298_p1 );
    sensitive << ( ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253 );
    sensitive << ( storemerge3_fu_466_p3 );
    sensitive << ( zero_load_load_fu_290_p1 );

    SC_METHOD(thread_mem_out0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out3_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out4_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out5_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out6_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_mem_out7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_10_fu_607_p1 );

    SC_METHOD(thread_mem_out7_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_newSel1_fu_521_p3);
    sensitive << ( or_cond2_fu_515_p2 );
    sensitive << ( newSel53_cast_fu_511_p1 );
    sensitive << ( newSel51_cast_cast_fu_495_p3 );

    SC_METHOD(thread_newSel2_fu_711_p3);
    sensitive << ( mem_out0_q0 );
    sensitive << ( mem_out1_q0 );
    sensitive << ( sel_tmp15_fu_705_p2 );

    SC_METHOD(thread_newSel3_fu_725_p3);
    sensitive << ( mem_out2_q0 );
    sensitive << ( mem_out3_q0 );
    sensitive << ( sel_tmp13_fu_693_p2 );

    SC_METHOD(thread_newSel49_cast_cast_fu_487_p3);
    sensitive << ( sel_tmp2_fu_388_p2 );

    SC_METHOD(thread_newSel4_fu_739_p3);
    sensitive << ( mem_out4_q0 );
    sensitive << ( mem_out5_q0 );
    sensitive << ( sel_tmp11_fu_681_p2 );

    SC_METHOD(thread_newSel51_cast_cast_fu_495_p3);
    sensitive << ( tmp_6_fu_368_p2 );

    SC_METHOD(thread_newSel53_cast_fu_511_p1);
    sensitive << ( newSel_fu_503_p3 );

    SC_METHOD(thread_newSel55_cast_fu_529_p1);
    sensitive << ( newSel1_fu_521_p3 );

    SC_METHOD(thread_newSel5_fu_753_p3);
    sensitive << ( mem_out6_q0 );
    sensitive << ( mem_out7_q0 );
    sensitive << ( sel_tmp9_fu_669_p2 );

    SC_METHOD(thread_newSel6_fu_761_p3);
    sensitive << ( or_cond3_fu_719_p2 );
    sensitive << ( newSel2_fu_711_p3 );
    sensitive << ( newSel3_fu_725_p3 );

    SC_METHOD(thread_newSel7_fu_775_p3);
    sensitive << ( or_cond5_fu_747_p2 );
    sensitive << ( newSel4_fu_739_p3 );
    sensitive << ( newSel5_fu_753_p3 );

    SC_METHOD(thread_newSel_cast_cast_fu_479_p3);
    sensitive << ( sel_tmp5_fu_446_p2 );

    SC_METHOD(thread_newSel_fu_503_p3);
    sensitive << ( tmp_11_fu_460_p2 );
    sensitive << ( newSel_cast_cast_fu_479_p3 );
    sensitive << ( newSel49_cast_cast_fu_487_p3 );

    SC_METHOD(thread_or_cond1_fu_555_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( rd_clk_in );

    SC_METHOD(thread_or_cond1_fu_555_p2);
    sensitive << ( tmp_7_fu_549_p2 );
    sensitive << ( or_cond1_fu_555_p1 );

    SC_METHOD(thread_or_cond2_fu_515_p2);
    sensitive << ( tmp_9_fu_402_p2 );
    sensitive << ( tmp_11_fu_460_p2 );

    SC_METHOD(thread_or_cond3_fu_719_p2);
    sensitive << ( sel_tmp15_fu_705_p2 );
    sensitive << ( sel_tmp14_fu_699_p2 );

    SC_METHOD(thread_or_cond4_fu_733_p2);
    sensitive << ( sel_tmp13_fu_693_p2 );
    sensitive << ( sel_tmp12_fu_687_p2 );

    SC_METHOD(thread_or_cond5_fu_747_p2);
    sensitive << ( sel_tmp11_fu_681_p2 );
    sensitive << ( sel_tmp10_fu_675_p2 );

    SC_METHOD(thread_or_cond6_fu_769_p2);
    sensitive << ( or_cond3_fu_719_p2 );
    sensitive << ( or_cond4_fu_733_p2 );

    SC_METHOD(thread_or_cond_fu_314_p2);
    sensitive << ( zero );
    sensitive << ( tmp_1_fu_308_p2 );

    SC_METHOD(thread_rd_mux);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mux );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );

    SC_METHOD(thread_rd_mux_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );

    SC_METHOD(thread_reset_read_read_fu_130_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reset );

    SC_METHOD(thread_sel_tmp10_fu_675_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp11_fu_681_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp12_fu_687_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp13_demorgan_fu_434_p2);
    sensitive << ( sel_tmp6_demorgan_fu_416_p2 );
    sensitive << ( tmp_4_fu_356_p2 );

    SC_METHOD(thread_sel_tmp13_fu_693_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp14_fu_699_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp15_fu_705_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp1_fu_382_p2);
    sensitive << ( tmp_fu_344_p2 );

    SC_METHOD(thread_sel_tmp2_fu_388_p2);
    sensitive << ( tmp_2_fu_350_p2 );
    sensitive << ( sel_tmp1_fu_382_p2 );

    SC_METHOD(thread_sel_tmp3_fu_408_p3);
    sensitive << ( tmp_9_fu_402_p2 );
    sensitive << ( sel_tmp_fu_394_p3 );
    sensitive << ( storemerge1_fu_374_p3 );

    SC_METHOD(thread_sel_tmp4_fu_440_p2);
    sensitive << ( sel_tmp13_demorgan_fu_434_p2 );

    SC_METHOD(thread_sel_tmp5_fu_446_p2);
    sensitive << ( tmp_5_fu_362_p2 );
    sensitive << ( sel_tmp4_fu_440_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_416_p2);
    sensitive << ( tmp_fu_344_p2 );
    sensitive << ( tmp_2_fu_350_p2 );

    SC_METHOD(thread_sel_tmp6_fu_422_p2);
    sensitive << ( sel_tmp6_demorgan_fu_416_p2 );

    SC_METHOD(thread_sel_tmp7_fu_428_p2);
    sensitive << ( tmp_4_fu_356_p2 );
    sensitive << ( sel_tmp6_fu_422_p2 );

    SC_METHOD(thread_sel_tmp8_fu_452_p3);
    sensitive << ( sel_tmp5_fu_446_p2 );

    SC_METHOD(thread_sel_tmp9_fu_669_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( mem );
    sensitive << ( ap_pipeline_reg_pp0_iter1_reset_read_reg_804 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond_reg_817 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 );

    SC_METHOD(thread_sel_tmp_fu_394_p3);
    sensitive << ( sel_tmp2_fu_388_p2 );

    SC_METHOD(thread_storemerge1_fu_374_p3);
    sensitive << ( tmp_6_fu_368_p2 );

    SC_METHOD(thread_storemerge3_cast_fu_475_p1);
    sensitive << ( storemerge3_fu_466_p3 );

    SC_METHOD(thread_storemerge3_fu_466_p3);
    sensitive << ( tmp_11_fu_460_p2 );
    sensitive << ( sel_tmp8_fu_452_p3 );
    sensitive << ( sel_tmp3_fu_408_p3 );

    SC_METHOD(thread_storemerge_phi_fu_267_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_14_fu_629_p2 );
    sensitive << ( ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264 );
    sensitive << ( ap_condition_210 );
    sensitive << ( ap_condition_217 );

    SC_METHOD(thread_tmp_10_fu_607_p1);
    sensitive << ( pos_r );

    SC_METHOD(thread_tmp_11_fu_460_p2);
    sensitive << ( sel_tmp5_fu_446_p2 );
    sensitive << ( sel_tmp7_fu_428_p2 );

    SC_METHOD(thread_tmp_12_fu_623_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( pos_r );
    sensitive << ( trig );
    sensitive << ( reset_read_reg_804 );
    sensitive << ( or_cond_reg_817 );
    sensitive << ( or_cond1_reg_821 );
    sensitive << ( tmp_16_reg_825 );

    SC_METHOD(thread_tmp_13_fu_792_p2);
    sensitive << ( mem );

    SC_METHOD(thread_tmp_14_fu_629_p2);
    sensitive << ( pos_r );

    SC_METHOD(thread_tmp_15_fu_573_p2);
    sensitive << ( read_cnt );

    SC_METHOD(thread_tmp_16_fu_565_p3);
    sensitive << ( read_cnt_start );

    SC_METHOD(thread_tmp_1_fu_308_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( max );
    sensitive << ( read_cnt );
    sensitive << ( reset_read_read_fu_130_p2 );

    SC_METHOD(thread_tmp_2_fu_350_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( numbits_V );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( zero_load_load_fu_290_p1 );

    SC_METHOD(thread_tmp_3_fu_652_p2);
    sensitive << ( mux );

    SC_METHOD(thread_tmp_4_fu_356_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( numbits_V );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( zero_load_load_fu_290_p1 );

    SC_METHOD(thread_tmp_5_fu_362_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( numbits_V );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( zero_load_load_fu_290_p1 );

    SC_METHOD(thread_tmp_6_fu_368_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( numbits_V );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( zero_load_load_fu_290_p1 );

    SC_METHOD(thread_tmp_7_fu_549_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( read_cnt );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( or_cond_fu_314_p2 );
    sensitive << ( max_loc_1_cast_fu_545_p1 );

    SC_METHOD(thread_tmp_8_fu_298_p1);
    sensitive << ( max );

    SC_METHOD(thread_tmp_9_fu_402_p2);
    sensitive << ( tmp_fu_344_p2 );
    sensitive << ( sel_tmp2_fu_388_p2 );

    SC_METHOD(thread_tmp_fu_344_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( numbits_V );
    sensitive << ( reset_read_read_fu_130_p2 );
    sensitive << ( zero_load_load_fu_290_p1 );

    SC_METHOD(thread_tmp_s_fu_585_p2);
    sensitive << ( read_cnt_start );

    SC_METHOD(thread_zero_load_load_fu_290_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zero );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_pipeline_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    zero = "0";
    max = "0000010000000000";
    read_cnt = "0000000000000000";
    pos_r = "0000000000000000";
    trig = "0000000001111111";
    read_cnt_start = "1111111111111111";
    mem = "0000000000000000";
    mux = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LDPC_Out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_out, "(port)data_out");
    sc_trace(mVcdFile, data_out_ap_vld, "(port)data_out_ap_vld");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, cur_read_pos_V, "(port)cur_read_pos_V");
    sc_trace(mVcdFile, cur_read_pos_V_ap_vld, "(port)cur_read_pos_V_ap_vld");
    sc_trace(mVcdFile, numbits_V, "(port)numbits_V");
    sc_trace(mVcdFile, rd_clk_in, "(port)rd_clk_in");
    sc_trace(mVcdFile, rd_mux, "(port)rd_mux");
    sc_trace(mVcdFile, rd_mux_ap_vld, "(port)rd_mux_ap_vld");
    sc_trace(mVcdFile, mem_out0_address0, "(port)mem_out0_address0");
    sc_trace(mVcdFile, mem_out0_ce0, "(port)mem_out0_ce0");
    sc_trace(mVcdFile, mem_out0_q0, "(port)mem_out0_q0");
    sc_trace(mVcdFile, mem_out1_address0, "(port)mem_out1_address0");
    sc_trace(mVcdFile, mem_out1_ce0, "(port)mem_out1_ce0");
    sc_trace(mVcdFile, mem_out1_q0, "(port)mem_out1_q0");
    sc_trace(mVcdFile, mem_out2_address0, "(port)mem_out2_address0");
    sc_trace(mVcdFile, mem_out2_ce0, "(port)mem_out2_ce0");
    sc_trace(mVcdFile, mem_out2_q0, "(port)mem_out2_q0");
    sc_trace(mVcdFile, mem_out3_address0, "(port)mem_out3_address0");
    sc_trace(mVcdFile, mem_out3_ce0, "(port)mem_out3_ce0");
    sc_trace(mVcdFile, mem_out3_q0, "(port)mem_out3_q0");
    sc_trace(mVcdFile, mem_out4_address0, "(port)mem_out4_address0");
    sc_trace(mVcdFile, mem_out4_ce0, "(port)mem_out4_ce0");
    sc_trace(mVcdFile, mem_out4_q0, "(port)mem_out4_q0");
    sc_trace(mVcdFile, mem_out5_address0, "(port)mem_out5_address0");
    sc_trace(mVcdFile, mem_out5_ce0, "(port)mem_out5_ce0");
    sc_trace(mVcdFile, mem_out5_q0, "(port)mem_out5_q0");
    sc_trace(mVcdFile, mem_out6_address0, "(port)mem_out6_address0");
    sc_trace(mVcdFile, mem_out6_ce0, "(port)mem_out6_ce0");
    sc_trace(mVcdFile, mem_out6_q0, "(port)mem_out6_q0");
    sc_trace(mVcdFile, mem_out7_address0, "(port)mem_out7_address0");
    sc_trace(mVcdFile, mem_out7_ce0, "(port)mem_out7_ce0");
    sc_trace(mVcdFile, mem_out7_q0, "(port)mem_out7_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, zero, "zero");
    sc_trace(mVcdFile, max, "max");
    sc_trace(mVcdFile, read_cnt, "read_cnt");
    sc_trace(mVcdFile, pos_r, "pos_r");
    sc_trace(mVcdFile, trig, "trig");
    sc_trace(mVcdFile, read_cnt_start, "read_cnt_start");
    sc_trace(mVcdFile, mem, "mem");
    sc_trace(mVcdFile, mux, "mux");
    sc_trace(mVcdFile, reset_read_read_fu_130_p2, "reset_read_read_fu_130_p2");
    sc_trace(mVcdFile, reset_read_reg_804, "reset_read_reg_804");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_reset_read_reg_804, "ap_pipeline_reg_pp0_iter1_reset_read_reg_804");
    sc_trace(mVcdFile, read_cnt_load_reg_811, "read_cnt_load_reg_811");
    sc_trace(mVcdFile, or_cond_fu_314_p2, "or_cond_fu_314_p2");
    sc_trace(mVcdFile, or_cond_reg_817, "or_cond_reg_817");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_or_cond_reg_817, "ap_pipeline_reg_pp0_iter1_or_cond_reg_817");
    sc_trace(mVcdFile, or_cond1_fu_555_p2, "or_cond1_fu_555_p2");
    sc_trace(mVcdFile, or_cond1_reg_821, "or_cond1_reg_821");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_or_cond1_reg_821, "ap_pipeline_reg_pp0_iter1_or_cond1_reg_821");
    sc_trace(mVcdFile, tmp_16_fu_565_p3, "tmp_16_fu_565_p3");
    sc_trace(mVcdFile, tmp_16_reg_825, "tmp_16_reg_825");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_tmp_16_reg_825, "ap_pipeline_reg_pp0_iter1_tmp_16_reg_825");
    sc_trace(mVcdFile, tmp_15_fu_573_p2, "tmp_15_fu_573_p2");
    sc_trace(mVcdFile, tmp_15_reg_829, "tmp_15_reg_829");
    sc_trace(mVcdFile, tmp_12_fu_623_p2, "tmp_12_fu_623_p2");
    sc_trace(mVcdFile, tmp_12_reg_874, "tmp_12_reg_874");
    sc_trace(mVcdFile, tmp_8_fu_298_p1, "tmp_8_fu_298_p1");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253, "ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253");
    sc_trace(mVcdFile, max_loc_1_phi_fu_256_p6, "max_loc_1_phi_fu_256_p6");
    sc_trace(mVcdFile, storemerge3_fu_466_p3, "storemerge3_fu_466_p3");
    sc_trace(mVcdFile, zero_load_load_fu_290_p1, "zero_load_load_fu_290_p1");
    sc_trace(mVcdFile, tmp_14_fu_629_p2, "tmp_14_fu_629_p2");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264, "ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264");
    sc_trace(mVcdFile, storemerge_phi_fu_267_p4, "storemerge_phi_fu_267_p4");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter1_val_assign_reg_274, "ap_phi_precharge_reg_pp0_iter1_val_assign_reg_274");
    sc_trace(mVcdFile, ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274, "ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274");
    sc_trace(mVcdFile, tmp_10_fu_607_p1, "tmp_10_fu_607_p1");
    sc_trace(mVcdFile, storemerge3_cast_fu_475_p1, "storemerge3_cast_fu_475_p1");
    sc_trace(mVcdFile, newSel55_cast_fu_529_p1, "newSel55_cast_fu_529_p1");
    sc_trace(mVcdFile, tmp_s_fu_585_p2, "tmp_s_fu_585_p2");
    sc_trace(mVcdFile, tmp_13_fu_792_p2, "tmp_13_fu_792_p2");
    sc_trace(mVcdFile, tmp_3_fu_652_p2, "tmp_3_fu_652_p2");
    sc_trace(mVcdFile, tmp_1_fu_308_p2, "tmp_1_fu_308_p2");
    sc_trace(mVcdFile, tmp_6_fu_368_p2, "tmp_6_fu_368_p2");
    sc_trace(mVcdFile, tmp_fu_344_p2, "tmp_fu_344_p2");
    sc_trace(mVcdFile, tmp_2_fu_350_p2, "tmp_2_fu_350_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_382_p2, "sel_tmp1_fu_382_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_388_p2, "sel_tmp2_fu_388_p2");
    sc_trace(mVcdFile, tmp_9_fu_402_p2, "tmp_9_fu_402_p2");
    sc_trace(mVcdFile, sel_tmp_fu_394_p3, "sel_tmp_fu_394_p3");
    sc_trace(mVcdFile, storemerge1_fu_374_p3, "storemerge1_fu_374_p3");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_416_p2, "sel_tmp6_demorgan_fu_416_p2");
    sc_trace(mVcdFile, tmp_4_fu_356_p2, "tmp_4_fu_356_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_422_p2, "sel_tmp6_fu_422_p2");
    sc_trace(mVcdFile, sel_tmp13_demorgan_fu_434_p2, "sel_tmp13_demorgan_fu_434_p2");
    sc_trace(mVcdFile, tmp_5_fu_362_p2, "tmp_5_fu_362_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_440_p2, "sel_tmp4_fu_440_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_446_p2, "sel_tmp5_fu_446_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_428_p2, "sel_tmp7_fu_428_p2");
    sc_trace(mVcdFile, tmp_11_fu_460_p2, "tmp_11_fu_460_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_452_p3, "sel_tmp8_fu_452_p3");
    sc_trace(mVcdFile, sel_tmp3_fu_408_p3, "sel_tmp3_fu_408_p3");
    sc_trace(mVcdFile, newSel_cast_cast_fu_479_p3, "newSel_cast_cast_fu_479_p3");
    sc_trace(mVcdFile, newSel49_cast_cast_fu_487_p3, "newSel49_cast_cast_fu_487_p3");
    sc_trace(mVcdFile, newSel_fu_503_p3, "newSel_fu_503_p3");
    sc_trace(mVcdFile, or_cond2_fu_515_p2, "or_cond2_fu_515_p2");
    sc_trace(mVcdFile, newSel53_cast_fu_511_p1, "newSel53_cast_fu_511_p1");
    sc_trace(mVcdFile, newSel51_cast_cast_fu_495_p3, "newSel51_cast_cast_fu_495_p3");
    sc_trace(mVcdFile, newSel1_fu_521_p3, "newSel1_fu_521_p3");
    sc_trace(mVcdFile, max_loc_1_cast_fu_545_p1, "max_loc_1_cast_fu_545_p1");
    sc_trace(mVcdFile, tmp_7_fu_549_p2, "tmp_7_fu_549_p2");
    sc_trace(mVcdFile, or_cond1_fu_555_p1, "or_cond1_fu_555_p1");
    sc_trace(mVcdFile, sel_tmp15_fu_705_p2, "sel_tmp15_fu_705_p2");
    sc_trace(mVcdFile, sel_tmp14_fu_699_p2, "sel_tmp14_fu_699_p2");
    sc_trace(mVcdFile, sel_tmp13_fu_693_p2, "sel_tmp13_fu_693_p2");
    sc_trace(mVcdFile, sel_tmp12_fu_687_p2, "sel_tmp12_fu_687_p2");
    sc_trace(mVcdFile, sel_tmp11_fu_681_p2, "sel_tmp11_fu_681_p2");
    sc_trace(mVcdFile, sel_tmp10_fu_675_p2, "sel_tmp10_fu_675_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_669_p2, "sel_tmp9_fu_669_p2");
    sc_trace(mVcdFile, or_cond3_fu_719_p2, "or_cond3_fu_719_p2");
    sc_trace(mVcdFile, newSel2_fu_711_p3, "newSel2_fu_711_p3");
    sc_trace(mVcdFile, newSel3_fu_725_p3, "newSel3_fu_725_p3");
    sc_trace(mVcdFile, or_cond4_fu_733_p2, "or_cond4_fu_733_p2");
    sc_trace(mVcdFile, or_cond5_fu_747_p2, "or_cond5_fu_747_p2");
    sc_trace(mVcdFile, newSel4_fu_739_p3, "newSel4_fu_739_p3");
    sc_trace(mVcdFile, newSel5_fu_753_p3, "newSel5_fu_753_p3");
    sc_trace(mVcdFile, or_cond6_fu_769_p2, "or_cond6_fu_769_p2");
    sc_trace(mVcdFile, newSel6_fu_761_p3, "newSel6_fu_761_p3");
    sc_trace(mVcdFile, newSel7_fu_775_p3, "newSel7_fu_775_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_pipeline_idle_pp0, "ap_pipeline_idle_pp0");
    sc_trace(mVcdFile, ap_condition_280, "ap_condition_280");
    sc_trace(mVcdFile, ap_condition_223, "ap_condition_223");
    sc_trace(mVcdFile, ap_condition_166, "ap_condition_166");
    sc_trace(mVcdFile, ap_condition_206, "ap_condition_206");
    sc_trace(mVcdFile, ap_condition_151, "ap_condition_151");
    sc_trace(mVcdFile, ap_condition_36, "ap_condition_36");
    sc_trace(mVcdFile, ap_condition_257, "ap_condition_257");
    sc_trace(mVcdFile, ap_condition_210, "ap_condition_210");
    sc_trace(mVcdFile, ap_condition_217, "ap_condition_217");
#endif

    }
    mHdltvinHandle.open("LDPC_Out.hdltvin.dat");
    mHdltvoutHandle.open("LDPC_Out.hdltvout.dat");
}

LDPC_Out::~LDPC_Out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void LDPC_Out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274 = tmp_15_reg_829.read();
    } else if (((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read())) || 
                  (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
                   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read())))) || 
                (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
                   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
                   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read())) || 
                  (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
                   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()) && 
                   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read())))))) {
        ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274 = read_cnt_load_reg_811.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274 = ap_phi_precharge_reg_pp0_iter1_val_assign_reg_274.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_223.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_280.read(), ap_const_boolean_1)) {
            mem = tmp_13_fu_792_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_804.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_reg_817.read()))) {
            mem = ap_const_lv16_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_206.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_166.read(), ap_const_boolean_1)) {
            pos_r = storemerge_phi_fu_267_p4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()))) {
            pos_r = ap_const_lv16_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_36.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_151.read(), ap_const_boolean_1)) {
            read_cnt = tmp_15_fu_573_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()))) {
            read_cnt = ap_const_lv16_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_36.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_257.read(), ap_const_boolean_1)) {
            read_cnt_start = tmp_s_fu_585_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()))) {
            read_cnt_start = ap_const_lv16_FFFF;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_36.read(), ap_const_boolean_1)) {
        if ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_290_p1.read()))) {
            zero = ap_const_lv1_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()))) {
            zero = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_pipeline_reg_pp0_iter1_or_cond1_reg_821 = or_cond1_reg_821.read();
        ap_pipeline_reg_pp0_iter1_or_cond_reg_817 = or_cond_reg_817.read();
        ap_pipeline_reg_pp0_iter1_reset_read_reg_804 = reset_read_reg_804.read();
        ap_pipeline_reg_pp0_iter1_tmp_16_reg_825 = tmp_16_reg_825.read();
        read_cnt_load_reg_811 = read_cnt.read();
        reset_read_reg_804 =  (sc_lv<1>) (reset.read());
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_290_p1.read()))) {
        max = storemerge3_cast_fu_475_p1.read();
        trig = newSel55_cast_fu_529_p1.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_804.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_reg_817.read()))) {
        mux = tmp_3_fu_652_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && (!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) || 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read())))) {
        or_cond1_reg_821 = or_cond1_fu_555_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()))) {
        or_cond_reg_817 = or_cond_fu_314_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read())) || 
  (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()))))) {
        tmp_12_reg_874 = tmp_12_fu_623_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_565_p3.read())) || 
  (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_565_p3.read()))))) {
        tmp_15_reg_829 = tmp_15_fu_573_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read())) || 
  (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()))))) {
        tmp_16_reg_825 = read_cnt_start.read().range(15, 15);
    }
}

void LDPC_Out::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(0, 0);
}

void LDPC_Out::thread_ap_condition_151() {
    ap_condition_151 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_565_p3.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_565_p3.read())));
}

void LDPC_Out::thread_ap_condition_166() {
    ap_condition_166 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read())));
}

void LDPC_Out::thread_ap_condition_206() {
    ap_condition_206 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()));
}

void LDPC_Out::thread_ap_condition_210() {
    ap_condition_210 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_623_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_623_p2.read())));
}

void LDPC_Out::thread_ap_condition_217() {
    ap_condition_217 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_reg_804.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_623_p2.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_reg_825.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_817.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_623_p2.read())));
}

void LDPC_Out::thread_ap_condition_223() {
    ap_condition_223 = (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()));
}

void LDPC_Out::thread_ap_condition_257() {
    ap_condition_257 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_565_p3.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_555_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_565_p3.read())));
}

void LDPC_Out::thread_ap_condition_280() {
    ap_condition_280 = ((!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_804.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_16_reg_825.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_874.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_reg_821.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_16_reg_825.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_874.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_reg_817.read())));
}

void LDPC_Out::thread_ap_condition_36() {
    ap_condition_36 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)));
}

void LDPC_Out::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void LDPC_Out::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void LDPC_Out::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void LDPC_Out::thread_ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253() {
    ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
}

void LDPC_Out::thread_ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264() {
    ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void LDPC_Out::thread_ap_phi_precharge_reg_pp0_iter1_val_assign_reg_274() {
    ap_phi_precharge_reg_pp0_iter1_val_assign_reg_274 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void LDPC_Out::thread_ap_pipeline_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_pipeline_idle_pp0 = ap_const_logic_1;
    } else {
        ap_pipeline_idle_pp0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void LDPC_Out::thread_cur_read_pos_V() {
    cur_read_pos_V = ap_phi_precharge_reg_pp0_iter2_val_assign_reg_274.read();
}

void LDPC_Out::thread_cur_read_pos_V_ap_vld() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        cur_read_pos_V_ap_vld = ap_const_logic_1;
    } else {
        cur_read_pos_V_ap_vld = ap_const_logic_0;
    }
}

void LDPC_Out::thread_data_out() {
    data_out =  (sc_logic) ((!or_cond6_fu_769_p2.read()[0].is_01())? sc_lv<1>(): ((or_cond6_fu_769_p2.read()[0].to_bool())? newSel6_fu_761_p3.read()[0]: newSel7_fu_775_p3.read()[0]))[0];
}

void LDPC_Out::thread_data_out_ap_vld() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         ((!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_804.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_reg_821.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_16_reg_825.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond1_reg_821.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_tmp_16_reg_825.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_reg_817.read()))))) {
        data_out_ap_vld = ap_const_logic_1;
    } else {
        data_out_ap_vld = ap_const_logic_0;
    }
}

void LDPC_Out::thread_max_loc_1_cast_fu_545_p1() {
    max_loc_1_cast_fu_545_p1 = esl_zext<16,13>(max_loc_1_phi_fu_256_p6.read());
}

void LDPC_Out::thread_max_loc_1_phi_fu_256_p6() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_290_p1.read()))) {
        max_loc_1_phi_fu_256_p6 = storemerge3_fu_466_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_314_p2.read())) || 
                (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, reset_read_read_fu_130_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, zero_load_load_fu_290_p1.read())))) {
        max_loc_1_phi_fu_256_p6 = tmp_8_fu_298_p1.read();
    } else {
        max_loc_1_phi_fu_256_p6 = ap_phi_precharge_reg_pp0_iter0_max_loc_1_reg_253.read();
    }
}

void LDPC_Out::thread_mem_out0_address0() {
    mem_out0_address0 =  (sc_lv<11>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out0_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out0_ce0 = ap_const_logic_1;
    } else {
        mem_out0_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out1_address0() {
    mem_out1_address0 =  (sc_lv<11>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out1_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out1_ce0 = ap_const_logic_1;
    } else {
        mem_out1_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out2_address0() {
    mem_out2_address0 =  (sc_lv<10>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out2_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out2_ce0 = ap_const_logic_1;
    } else {
        mem_out2_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out3_address0() {
    mem_out3_address0 =  (sc_lv<10>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out3_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out3_ce0 = ap_const_logic_1;
    } else {
        mem_out3_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out4_address0() {
    mem_out4_address0 =  (sc_lv<10>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out4_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out4_ce0 = ap_const_logic_1;
    } else {
        mem_out4_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out5_address0() {
    mem_out5_address0 =  (sc_lv<10>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out5_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out5_ce0 = ap_const_logic_1;
    } else {
        mem_out5_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out6_address0() {
    mem_out6_address0 =  (sc_lv<10>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out6_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out6_ce0 = ap_const_logic_1;
    } else {
        mem_out6_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_mem_out7_address0() {
    mem_out7_address0 =  (sc_lv<10>) (tmp_10_fu_607_p1.read());
}

void LDPC_Out::thread_mem_out7_ce0() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mem_out7_ce0 = ap_const_logic_1;
    } else {
        mem_out7_ce0 = ap_const_logic_0;
    }
}

void LDPC_Out::thread_newSel1_fu_521_p3() {
    newSel1_fu_521_p3 = (!or_cond2_fu_515_p2.read()[0].is_01())? sc_lv<11>(): ((or_cond2_fu_515_p2.read()[0].to_bool())? newSel53_cast_fu_511_p1.read(): newSel51_cast_cast_fu_495_p3.read());
}

void LDPC_Out::thread_newSel2_fu_711_p3() {
    newSel2_fu_711_p3 = (!sel_tmp15_fu_705_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp15_fu_705_p2.read()[0].to_bool())? mem_out0_q0.read(): mem_out1_q0.read());
}

void LDPC_Out::thread_newSel3_fu_725_p3() {
    newSel3_fu_725_p3 = (!sel_tmp13_fu_693_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp13_fu_693_p2.read()[0].to_bool())? mem_out2_q0.read(): mem_out3_q0.read());
}

void LDPC_Out::thread_newSel49_cast_cast_fu_487_p3() {
    newSel49_cast_cast_fu_487_p3 = (!sel_tmp2_fu_388_p2.read()[0].is_01())? sc_lv<10>(): ((sel_tmp2_fu_388_p2.read()[0].to_bool())? ap_const_lv10_1FF: ap_const_lv10_7F);
}

void LDPC_Out::thread_newSel4_fu_739_p3() {
    newSel4_fu_739_p3 = (!sel_tmp11_fu_681_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp11_fu_681_p2.read()[0].to_bool())? mem_out4_q0.read(): mem_out5_q0.read());
}

void LDPC_Out::thread_newSel51_cast_cast_fu_495_p3() {
    newSel51_cast_cast_fu_495_p3 = (!tmp_6_fu_368_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_6_fu_368_p2.read()[0].to_bool())? ap_const_lv11_7FF: ap_const_lv11_1FF);
}

void LDPC_Out::thread_newSel53_cast_fu_511_p1() {
    newSel53_cast_fu_511_p1 = esl_zext<11,10>(newSel_fu_503_p3.read());
}

void LDPC_Out::thread_newSel55_cast_fu_529_p1() {
    newSel55_cast_fu_529_p1 = esl_zext<16,11>(newSel1_fu_521_p3.read());
}

void LDPC_Out::thread_newSel5_fu_753_p3() {
    newSel5_fu_753_p3 = (!sel_tmp9_fu_669_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp9_fu_669_p2.read()[0].to_bool())? mem_out6_q0.read(): mem_out7_q0.read());
}

void LDPC_Out::thread_newSel6_fu_761_p3() {
    newSel6_fu_761_p3 = (!or_cond3_fu_719_p2.read()[0].is_01())? sc_lv<1>(): ((or_cond3_fu_719_p2.read()[0].to_bool())? newSel2_fu_711_p3.read(): newSel3_fu_725_p3.read());
}

void LDPC_Out::thread_newSel7_fu_775_p3() {
    newSel7_fu_775_p3 = (!or_cond5_fu_747_p2.read()[0].is_01())? sc_lv<1>(): ((or_cond5_fu_747_p2.read()[0].to_bool())? newSel4_fu_739_p3.read(): newSel5_fu_753_p3.read());
}

void LDPC_Out::thread_newSel_cast_cast_fu_479_p3() {
    newSel_cast_cast_fu_479_p3 = (!sel_tmp5_fu_446_p2.read()[0].is_01())? sc_lv<10>(): ((sel_tmp5_fu_446_p2.read()[0].to_bool())? ap_const_lv10_3FF: ap_const_lv10_FF);
}

void LDPC_Out::thread_newSel_fu_503_p3() {
    newSel_fu_503_p3 = (!tmp_11_fu_460_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_11_fu_460_p2.read()[0].to_bool())? newSel_cast_cast_fu_479_p3.read(): newSel49_cast_cast_fu_487_p3.read());
}

void LDPC_Out::thread_or_cond1_fu_555_p1() {
    or_cond1_fu_555_p1 =  (sc_lv<1>) (rd_clk_in.read());
}

void LDPC_Out::thread_or_cond1_fu_555_p2() {
    or_cond1_fu_555_p2 = (tmp_7_fu_549_p2.read() & or_cond1_fu_555_p1.read());
}

void LDPC_Out::thread_or_cond2_fu_515_p2() {
    or_cond2_fu_515_p2 = (tmp_11_fu_460_p2.read() | tmp_9_fu_402_p2.read());
}

void LDPC_Out::thread_or_cond3_fu_719_p2() {
    or_cond3_fu_719_p2 = (sel_tmp15_fu_705_p2.read() | sel_tmp14_fu_699_p2.read());
}

void LDPC_Out::thread_or_cond4_fu_733_p2() {
    or_cond4_fu_733_p2 = (sel_tmp13_fu_693_p2.read() | sel_tmp12_fu_687_p2.read());
}

void LDPC_Out::thread_or_cond5_fu_747_p2() {
    or_cond5_fu_747_p2 = (sel_tmp11_fu_681_p2.read() | sel_tmp10_fu_675_p2.read());
}

void LDPC_Out::thread_or_cond6_fu_769_p2() {
    or_cond6_fu_769_p2 = (or_cond3_fu_719_p2.read() | or_cond4_fu_733_p2.read());
}

void LDPC_Out::thread_or_cond_fu_314_p2() {
    or_cond_fu_314_p2 = (zero.read() | tmp_1_fu_308_p2.read());
}

void LDPC_Out::thread_rd_mux() {
    rd_mux =  (sc_logic) ((mux.read() ^ ap_const_lv1_1))[0];
}

void LDPC_Out::thread_rd_mux_ap_vld() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_reset_read_reg_804.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter1_or_cond_reg_817.read()))) {
        rd_mux_ap_vld = ap_const_logic_1;
    } else {
        rd_mux_ap_vld = ap_const_logic_0;
    }
}

void LDPC_Out::thread_reset_read_read_fu_130_p2() {
    reset_read_read_fu_130_p2 =  (sc_lv<1>) (reset.read());
}

void LDPC_Out::thread_sel_tmp10_fu_675_p2() {
    sel_tmp10_fu_675_p2 = (!mem.read().is_01() || !ap_const_lv16_5.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_5);
}

void LDPC_Out::thread_sel_tmp11_fu_681_p2() {
    sel_tmp11_fu_681_p2 = (!mem.read().is_01() || !ap_const_lv16_4.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_4);
}

void LDPC_Out::thread_sel_tmp12_fu_687_p2() {
    sel_tmp12_fu_687_p2 = (!mem.read().is_01() || !ap_const_lv16_3.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_3);
}

void LDPC_Out::thread_sel_tmp13_demorgan_fu_434_p2() {
    sel_tmp13_demorgan_fu_434_p2 = (sel_tmp6_demorgan_fu_416_p2.read() | tmp_4_fu_356_p2.read());
}

void LDPC_Out::thread_sel_tmp13_fu_693_p2() {
    sel_tmp13_fu_693_p2 = (!mem.read().is_01() || !ap_const_lv16_2.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_2);
}

void LDPC_Out::thread_sel_tmp14_fu_699_p2() {
    sel_tmp14_fu_699_p2 = (!mem.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_1);
}

void LDPC_Out::thread_sel_tmp15_fu_705_p2() {
    sel_tmp15_fu_705_p2 = (!mem.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_0);
}

void LDPC_Out::thread_sel_tmp1_fu_382_p2() {
    sel_tmp1_fu_382_p2 = (tmp_fu_344_p2.read() ^ ap_const_lv1_1);
}

void LDPC_Out::thread_sel_tmp2_fu_388_p2() {
    sel_tmp2_fu_388_p2 = (tmp_2_fu_350_p2.read() & sel_tmp1_fu_382_p2.read());
}

void LDPC_Out::thread_sel_tmp3_fu_408_p3() {
    sel_tmp3_fu_408_p3 = (!tmp_9_fu_402_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_9_fu_402_p2.read()[0].to_bool())? sel_tmp_fu_394_p3.read(): storemerge1_fu_374_p3.read());
}

void LDPC_Out::thread_sel_tmp4_fu_440_p2() {
    sel_tmp4_fu_440_p2 = (sel_tmp13_demorgan_fu_434_p2.read() ^ ap_const_lv1_1);
}

void LDPC_Out::thread_sel_tmp5_fu_446_p2() {
    sel_tmp5_fu_446_p2 = (tmp_5_fu_362_p2.read() & sel_tmp4_fu_440_p2.read());
}

void LDPC_Out::thread_sel_tmp6_demorgan_fu_416_p2() {
    sel_tmp6_demorgan_fu_416_p2 = (tmp_fu_344_p2.read() | tmp_2_fu_350_p2.read());
}

void LDPC_Out::thread_sel_tmp6_fu_422_p2() {
    sel_tmp6_fu_422_p2 = (sel_tmp6_demorgan_fu_416_p2.read() ^ ap_const_lv1_1);
}

void LDPC_Out::thread_sel_tmp7_fu_428_p2() {
    sel_tmp7_fu_428_p2 = (tmp_4_fu_356_p2.read() & sel_tmp6_fu_422_p2.read());
}

void LDPC_Out::thread_sel_tmp8_fu_452_p3() {
    sel_tmp8_fu_452_p3 = (!sel_tmp5_fu_446_p2.read()[0].is_01())? sc_lv<13>(): ((sel_tmp5_fu_446_p2.read()[0].to_bool())? ap_const_lv13_1000: ap_const_lv13_400);
}

void LDPC_Out::thread_sel_tmp9_fu_669_p2() {
    sel_tmp9_fu_669_p2 = (!mem.read().is_01() || !ap_const_lv16_6.is_01())? sc_lv<1>(): sc_lv<1>(mem.read() == ap_const_lv16_6);
}

void LDPC_Out::thread_sel_tmp_fu_394_p3() {
    sel_tmp_fu_394_p3 = (!sel_tmp2_fu_388_p2.read()[0].is_01())? sc_lv<13>(): ((sel_tmp2_fu_388_p2.read()[0].to_bool())? ap_const_lv13_1000: ap_const_lv13_400);
}

void LDPC_Out::thread_storemerge1_fu_374_p3() {
    storemerge1_fu_374_p3 = (!tmp_6_fu_368_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_6_fu_368_p2.read()[0].to_bool())? ap_const_lv13_1000: ap_const_lv13_400);
}

void LDPC_Out::thread_storemerge3_cast_fu_475_p1() {
    storemerge3_cast_fu_475_p1 = esl_zext<16,13>(storemerge3_fu_466_p3.read());
}

void LDPC_Out::thread_storemerge3_fu_466_p3() {
    storemerge3_fu_466_p3 = (!tmp_11_fu_460_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_11_fu_460_p2.read()[0].to_bool())? sel_tmp8_fu_452_p3.read(): sel_tmp3_fu_408_p3.read());
}

void LDPC_Out::thread_storemerge_phi_fu_267_p4() {
    if ((esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        if (esl_seteq<1,1,1>(ap_condition_217.read(), ap_const_boolean_1)) {
            storemerge_phi_fu_267_p4 = ap_const_lv16_0;
        } else if (esl_seteq<1,1,1>(ap_condition_210.read(), ap_const_boolean_1)) {
            storemerge_phi_fu_267_p4 = tmp_14_fu_629_p2.read();
        } else {
            storemerge_phi_fu_267_p4 = ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264.read();
        }
    } else {
        storemerge_phi_fu_267_p4 = ap_phi_precharge_reg_pp0_iter1_storemerge_reg_264.read();
    }
}

void LDPC_Out::thread_tmp_10_fu_607_p1() {
    tmp_10_fu_607_p1 = esl_sext<32,16>(pos_r.read());
}

void LDPC_Out::thread_tmp_11_fu_460_p2() {
    tmp_11_fu_460_p2 = (sel_tmp5_fu_446_p2.read() | sel_tmp7_fu_428_p2.read());
}

void LDPC_Out::thread_tmp_12_fu_623_p2() {
    tmp_12_fu_623_p2 = (!pos_r.read().is_01() || !trig.read().is_01())? sc_lv<1>(): sc_lv<1>(pos_r.read() == trig.read());
}

void LDPC_Out::thread_tmp_13_fu_792_p2() {
    tmp_13_fu_792_p2 = (!mem.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(mem.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_tmp_14_fu_629_p2() {
    tmp_14_fu_629_p2 = (!pos_r.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(pos_r.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_tmp_15_fu_573_p2() {
    tmp_15_fu_573_p2 = (!read_cnt.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(read_cnt.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_tmp_16_fu_565_p3() {
    tmp_16_fu_565_p3 = read_cnt_start.read().range(15, 15);
}

void LDPC_Out::thread_tmp_1_fu_308_p2() {
    tmp_1_fu_308_p2 = (!read_cnt.read().is_01() || !max.read().is_01())? sc_lv<1>(): (sc_bigint<16>(read_cnt.read()) < sc_bigint<16>(max.read()));
}

void LDPC_Out::thread_tmp_2_fu_350_p2() {
    tmp_2_fu_350_p2 = (!numbits_V.read().is_01() || !ap_const_lv16_1400.is_01())? sc_lv<1>(): sc_lv<1>(numbits_V.read() == ap_const_lv16_1400);
}

void LDPC_Out::thread_tmp_3_fu_652_p2() {
    tmp_3_fu_652_p2 = (mux.read() ^ ap_const_lv1_1);
}

void LDPC_Out::thread_tmp_4_fu_356_p2() {
    tmp_4_fu_356_p2 = (!numbits_V.read().is_01() || !ap_const_lv16_600.is_01())? sc_lv<1>(): sc_lv<1>(numbits_V.read() == ap_const_lv16_600);
}

void LDPC_Out::thread_tmp_5_fu_362_p2() {
    tmp_5_fu_362_p2 = (!numbits_V.read().is_01() || !ap_const_lv16_1800.is_01())? sc_lv<1>(): sc_lv<1>(numbits_V.read() == ap_const_lv16_1800);
}

void LDPC_Out::thread_tmp_6_fu_368_p2() {
    tmp_6_fu_368_p2 = (!numbits_V.read().is_01() || !ap_const_lv16_2000.is_01())? sc_lv<1>(): sc_lv<1>(numbits_V.read() == ap_const_lv16_2000);
}

void LDPC_Out::thread_tmp_7_fu_549_p2() {
    tmp_7_fu_549_p2 = (!read_cnt.read().is_01() || !max_loc_1_cast_fu_545_p1.read().is_01())? sc_lv<1>(): (sc_bigint<16>(read_cnt.read()) < sc_bigint<16>(max_loc_1_cast_fu_545_p1.read()));
}

void LDPC_Out::thread_tmp_8_fu_298_p1() {
    tmp_8_fu_298_p1 = max.read().range(13-1, 0);
}

void LDPC_Out::thread_tmp_9_fu_402_p2() {
    tmp_9_fu_402_p2 = (sel_tmp2_fu_388_p2.read() | tmp_fu_344_p2.read());
}

void LDPC_Out::thread_tmp_fu_344_p2() {
    tmp_fu_344_p2 = (!numbits_V.read().is_01() || !ap_const_lv16_500.is_01())? sc_lv<1>(): sc_lv<1>(numbits_V.read() == ap_const_lv16_500);
}

void LDPC_Out::thread_tmp_s_fu_585_p2() {
    tmp_s_fu_585_p2 = (!read_cnt_start.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(read_cnt_start.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void LDPC_Out::thread_zero_load_load_fu_290_p1() {
    zero_load_load_fu_290_p1 = zero.read();
}

void LDPC_Out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void LDPC_Out::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out\" :  \"" << data_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_ap_vld\" :  \"" << data_out_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"reset\" :  \"" << reset.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cur_read_pos_V\" :  \"" << cur_read_pos_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cur_read_pos_V_ap_vld\" :  \"" << cur_read_pos_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"numbits_V\" :  \"" << numbits_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rd_clk_in\" :  \"" << rd_clk_in.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"rd_mux\" :  \"" << rd_mux.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"rd_mux_ap_vld\" :  \"" << rd_mux_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out0_address0\" :  \"" << mem_out0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out0_ce0\" :  \"" << mem_out0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out0_q0\" :  \"" << mem_out0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out1_address0\" :  \"" << mem_out1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out1_ce0\" :  \"" << mem_out1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out1_q0\" :  \"" << mem_out1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out2_address0\" :  \"" << mem_out2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out2_ce0\" :  \"" << mem_out2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out2_q0\" :  \"" << mem_out2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out3_address0\" :  \"" << mem_out3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out3_ce0\" :  \"" << mem_out3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out3_q0\" :  \"" << mem_out3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out4_address0\" :  \"" << mem_out4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out4_ce0\" :  \"" << mem_out4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out4_q0\" :  \"" << mem_out4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out5_address0\" :  \"" << mem_out5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out5_ce0\" :  \"" << mem_out5_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out5_q0\" :  \"" << mem_out5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out6_address0\" :  \"" << mem_out6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out6_ce0\" :  \"" << mem_out6_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out6_q0\" :  \"" << mem_out6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out7_address0\" :  \"" << mem_out7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mem_out7_ce0\" :  \"" << mem_out7_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mem_out7_q0\" :  \"" << mem_out7_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

