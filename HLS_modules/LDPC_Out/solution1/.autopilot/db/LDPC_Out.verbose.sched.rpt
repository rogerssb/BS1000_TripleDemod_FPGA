

================================================================
== Vivado HLS Report for 'LDPC_Out'
================================================================
* Date:           Thu Oct 10 20:34:08 2019

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        LDPC_Out
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.39|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 8.39ns
ST_1: rd_clk_in_read (38)  [1/1] 0.00ns
:15  %rd_clk_in_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %rd_clk_in)

ST_1: numbits_V_read (39)  [1/1] 0.00ns
:16  %numbits_V_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %numbits_V)

ST_1: reset_read (40)  [1/1] 0.00ns
:17  %reset_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %reset)

ST_1: zero_load (42)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:39
:19  %zero_load = load i1* @zero, align 1

ST_1: max_load (43)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:74
:20  %max_load = load i16* @max, align 2

ST_1: tmp_8 (44)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:74
:21  %tmp_8 = trunc i16 %max_load to i13

ST_1: read_cnt_load (45)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:74
:22  %read_cnt_load = load i16* @read_cnt, align 2

ST_1: StgValue_11 (47)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:39
:24  br i1 %reset_read, label %1, label %.critedge

ST_1: tmp_1 (49)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:74
.critedge:0  %tmp_1 = icmp slt i16 %read_cnt_load, %max_load

ST_1: or_cond (50)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:74
.critedge:1  %or_cond = or i1 %zero_load, %tmp_1

ST_1: StgValue_14 (51)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:74
.critedge:2  br i1 %or_cond, label %.critedge._crit_edge, label %2

ST_1: StgValue_15 (54)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:77
:1  store i16 0, i16* @read_cnt, align 2

ST_1: StgValue_16 (55)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:78
:2  store i16 -1, i16* @read_cnt_start, align 2

ST_1: StgValue_17 (57)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:80
:4  store i1 true, i1* @zero, align 1

ST_1: StgValue_18 (64)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:39
:0  br i1 %zero_load, label %_ifconv, label %.critedge._crit_edge

ST_1: StgValue_19 (66)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:41
_ifconv:0  store i1 false, i1* @zero, align 1

ST_1: tmp (67)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:42
_ifconv:1  %tmp = icmp eq i16 %numbits_V_read, 1280

ST_1: tmp_2 (68)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:47
_ifconv:2  %tmp_2 = icmp eq i16 %numbits_V_read, 5120

ST_1: tmp_4 (69)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:52
_ifconv:3  %tmp_4 = icmp eq i16 %numbits_V_read, 1536

ST_1: tmp_5 (70)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:57
_ifconv:4  %tmp_5 = icmp eq i16 %numbits_V_read, 6144

ST_1: tmp_6 (71)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:62
_ifconv:5  %tmp_6 = icmp eq i16 %numbits_V_read, 8192

ST_1: storemerge1 (72)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:62 (grouped into LUT with out node storemerge3)
_ifconv:6  %storemerge1 = select i1 %tmp_6, i13 -4096, i13 1024

ST_1: sel_tmp1 (73)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:42 (grouped into LUT with out node sel_tmp2)
_ifconv:7  %sel_tmp1 = xor i1 %tmp, true

ST_1: sel_tmp2 (74)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:47 (out node of the LUT)
_ifconv:8  %sel_tmp2 = and i1 %tmp_2, %sel_tmp1

ST_1: sel_tmp (75)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:47 (grouped into LUT with out node storemerge3)
_ifconv:9  %sel_tmp = select i1 %sel_tmp2, i13 -4096, i13 1024

ST_1: tmp_9 (76)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:47
_ifconv:10  %tmp_9 = or i1 %sel_tmp2, %tmp

ST_1: sel_tmp3 (77)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:47 (grouped into LUT with out node storemerge3)
_ifconv:11  %sel_tmp3 = select i1 %tmp_9, i13 %sel_tmp, i13 %storemerge1

ST_1: sel_tmp6_demorgan (78)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:42
_ifconv:12  %sel_tmp6_demorgan = or i1 %tmp, %tmp_2

ST_1: sel_tmp6 (79)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:42 (grouped into LUT with out node tmp_11)
_ifconv:13  %sel_tmp6 = xor i1 %sel_tmp6_demorgan, true

ST_1: sel_tmp7 (80)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:52 (grouped into LUT with out node tmp_11)
_ifconv:14  %sel_tmp7 = and i1 %tmp_4, %sel_tmp6

ST_1: sel_tmp13_demorgan (81)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:42 (grouped into LUT with out node sel_tmp5)
_ifconv:15  %sel_tmp13_demorgan = or i1 %sel_tmp6_demorgan, %tmp_4

ST_1: sel_tmp4 (82)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:42 (grouped into LUT with out node sel_tmp5)
_ifconv:16  %sel_tmp4 = xor i1 %sel_tmp13_demorgan, true

ST_1: sel_tmp5 (83)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:57 (out node of the LUT)
_ifconv:17  %sel_tmp5 = and i1 %tmp_5, %sel_tmp4

ST_1: sel_tmp8 (84)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57 (grouped into LUT with out node storemerge3)
_ifconv:18  %sel_tmp8 = select i1 %sel_tmp5, i13 -4096, i13 1024

ST_1: tmp_11 (85)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:57 (out node of the LUT)
_ifconv:19  %tmp_11 = or i1 %sel_tmp5, %sel_tmp7

ST_1: storemerge3 (86)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:57 (out node of the LUT)
_ifconv:20  %storemerge3 = select i1 %tmp_11, i13 %sel_tmp8, i13 %sel_tmp3

ST_1: storemerge3_cast (87)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57
_ifconv:21  %storemerge3_cast = zext i13 %storemerge3 to i16

ST_1: newSel_cast_cast (88)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57 (grouped into LUT with out node newSel1)
_ifconv:22  %newSel_cast_cast = select i1 %sel_tmp5, i10 -1, i10 255

ST_1: newSel49_cast_cast (89)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:47 (grouped into LUT with out node newSel1)
_ifconv:23  %newSel49_cast_cast = select i1 %sel_tmp2, i10 511, i10 127

ST_1: newSel51_cast_cast (90)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:62 (grouped into LUT with out node newSel1)
_ifconv:24  %newSel51_cast_cast = select i1 %tmp_6, i11 -1, i11 511

ST_1: newSel (91)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57 (grouped into LUT with out node newSel1)
_ifconv:25  %newSel = select i1 %tmp_11, i10 %newSel_cast_cast, i10 %newSel49_cast_cast

ST_1: newSel53_cast (92)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57 (grouped into LUT with out node newSel1)
_ifconv:26  %newSel53_cast = zext i10 %newSel to i11

ST_1: or_cond2 (93)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57 (grouped into LUT with out node newSel1)
_ifconv:27  %or_cond2 = or i1 %tmp_11, %tmp_9

ST_1: newSel1 (94)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:57 (out node of the LUT)
_ifconv:28  %newSel1 = select i1 %or_cond2, i11 %newSel53_cast, i11 %newSel51_cast_cast

ST_1: newSel55_cast (95)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:57
_ifconv:29  %newSel55_cast = zext i11 %newSel1 to i16

ST_1: StgValue_49 (96)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:44
_ifconv:30  store i16 %storemerge3_cast, i16* @max, align 2

ST_1: StgValue_50 (97)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:45
_ifconv:31  store i16 %newSel55_cast, i16* @trig, align 2

ST_1: StgValue_51 (98)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:72
_ifconv:32  br label %.critedge._crit_edge

ST_1: max_loc_1 (100)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:74
.critedge._crit_edge:0  %max_loc_1 = phi i13 [ %tmp_8, %.critedge ], [ %storemerge3, %_ifconv ], [ %tmp_8, %1 ]

ST_1: max_loc_1_cast (101)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:84
.critedge._crit_edge:1  %max_loc_1_cast = zext i13 %max_loc_1 to i16

ST_1: tmp_7 (102)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:84
.critedge._crit_edge:2  %tmp_7 = icmp slt i16 %read_cnt_load, %max_loc_1_cast

ST_1: or_cond1 (103)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:84
.critedge._crit_edge:3  %or_cond1 = and i1 %tmp_7, %rd_clk_in_read

ST_1: read_cnt_start_load (106)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:86
:0  %read_cnt_start_load = load i16* @read_cnt_start, align 2

ST_1: tmp_16 (107)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:86
:1  %tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %read_cnt_start_load, i32 15)

ST_1: StgValue_58 (108)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:86
:2  br i1 %tmp_16, label %7, label %_ifconv32

ST_1: tmp_15 (160)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:133
:3  %tmp_15 = add i16 %read_cnt_load, 1

ST_1: StgValue_60 (161)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:133
:4  store i16 %tmp_15, i16* @read_cnt, align 2

ST_1: tmp_s (164)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:136
:0  %tmp_s = add i16 %read_cnt_start_load, 1

ST_1: StgValue_62 (165)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:136
:1  store i16 %tmp_s, i16* @read_cnt_start, align 2


 <State 2>: 3.63ns
ST_2: pos_load (46)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:91
:23  %pos_load = load i16* @pos_r, align 2

ST_2: StgValue_64 (53)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:76
:0  store i16 0, i16* @pos_r, align 2

ST_2: StgValue_65 (62)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:83
:9  br label %._crit_edge63

ST_2: StgValue_66 (104)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:84
.critedge._crit_edge:4  br i1 %or_cond1, label %3, label %._crit_edge63

ST_2: tmp_10 (111)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:91
_ifconv32:1  %tmp_10 = sext i16 %pos_load to i32

ST_2: mem_out0_addr (112)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:91
_ifconv32:2  %mem_out0_addr = getelementptr [2048 x i1]* %mem_out0, i32 0, i32 %tmp_10

ST_2: data (113)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:91
_ifconv32:3  %data = load i1* %mem_out0_addr, align 1

ST_2: mem_out1_addr (114)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:95
_ifconv32:4  %mem_out1_addr = getelementptr [2048 x i1]* %mem_out1, i32 0, i32 %tmp_10

ST_2: data_1 (115)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:95
_ifconv32:5  %data_1 = load i1* %mem_out1_addr, align 1

ST_2: mem_out2_addr (116)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:99
_ifconv32:6  %mem_out2_addr = getelementptr [1024 x i1]* %mem_out2, i32 0, i32 %tmp_10

ST_2: data_2 (117)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:99
_ifconv32:7  %data_2 = load i1* %mem_out2_addr, align 1

ST_2: mem_out3_addr (118)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:103
_ifconv32:8  %mem_out3_addr = getelementptr [1024 x i1]* %mem_out3, i32 0, i32 %tmp_10

ST_2: data_3 (119)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:103
_ifconv32:9  %data_3 = load i1* %mem_out3_addr, align 1

ST_2: mem_out4_addr (120)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:107
_ifconv32:10  %mem_out4_addr = getelementptr [1024 x i1]* %mem_out4, i32 0, i32 %tmp_10

ST_2: data_4 (121)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:107
_ifconv32:11  %data_4 = load i1* %mem_out4_addr, align 1

ST_2: mem_out5_addr (122)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:111
_ifconv32:12  %mem_out5_addr = getelementptr [1024 x i1]* %mem_out5, i32 0, i32 %tmp_10

ST_2: data_5 (123)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:111
_ifconv32:13  %data_5 = load i1* %mem_out5_addr, align 1

ST_2: mem_out6_addr (124)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:115
_ifconv32:14  %mem_out6_addr = getelementptr [1024 x i1]* %mem_out6, i32 0, i32 %tmp_10

ST_2: data_6 (125)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:115
_ifconv32:15  %data_6 = load i1* %mem_out6_addr, align 1

ST_2: mem_out7_addr (126)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:119
_ifconv32:16  %mem_out7_addr = getelementptr [1024 x i1]* %mem_out7, i32 0, i32 %tmp_10

ST_2: data_7 (127)  [2/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:119
_ifconv32:17  %data_7 = load i1* %mem_out7_addr, align 1

ST_2: trig_load (146)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:124
_ifconv32:36  %trig_load = load i16* @trig, align 2

ST_2: tmp_12 (147)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:124
_ifconv32:37  %tmp_12 = icmp eq i16 %pos_load, %trig_load

ST_2: StgValue_86 (148)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:124
_ifconv32:38  br i1 %tmp_12, label %4, label %5

ST_2: tmp_14 (150)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:130
:0  %tmp_14 = add i16 %pos_load, 1

ST_2: StgValue_88 (151)  [1/1] 1.09ns
:1  br label %6

ST_2: StgValue_89 (155)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:128
:2  br label %6

ST_2: storemerge (157)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:130
:0  %storemerge = phi i16 [ %tmp_14, %5 ], [ 0, %4 ]

ST_2: StgValue_91 (158)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:127
:1  store i16 %storemerge, i16* @pos_r, align 2

ST_2: StgValue_92 (162)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:134
:5  br label %._crit_edge63

ST_2: StgValue_93 (166)  [1/1] 1.09ns
:2  br label %._crit_edge63


 <State 3>: 4.85ns
ST_3: StgValue_94 (23)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i1* %data_out), !map !40

ST_3: StgValue_95 (24)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i1 %reset), !map !44

ST_3: StgValue_96 (25)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i16* %cur_read_pos_V), !map !50

ST_3: StgValue_97 (26)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i16 %numbits_V), !map !54

ST_3: StgValue_98 (27)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1 %rd_clk_in), !map !58

ST_3: StgValue_99 (28)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %rd_mux), !map !62

ST_3: StgValue_100 (29)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap([2048 x i1]* %mem_out0), !map !66

ST_3: StgValue_101 (30)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap([2048 x i1]* %mem_out1), !map !72

ST_3: StgValue_102 (31)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i1]* %mem_out2), !map !76

ST_3: StgValue_103 (32)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i1]* %mem_out3), !map !82

ST_3: StgValue_104 (33)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i1]* %mem_out4), !map !86

ST_3: StgValue_105 (34)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i1]* %mem_out5), !map !90

ST_3: StgValue_106 (35)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i1]* %mem_out6), !map !94

ST_3: StgValue_107 (36)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap([1024 x i1]* %mem_out7), !map !98

ST_3: StgValue_108 (37)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @LDPC_Out_str) nounwind

ST_3: StgValue_109 (41)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:33
:18  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_3: StgValue_110 (56)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:79
:3  store i16 0, i16* @mem, align 2

ST_3: mux_load (58)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:81
:5  %mux_load = load i1* @mux, align 1

ST_3: tmp_3 (59)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:81
:6  %tmp_3 = xor i1 %mux_load, true

ST_3: StgValue_113 (60)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:81
:7  store i1 %tmp_3, i1* @mux, align 1

ST_3: StgValue_114 (61)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:82
:8  call void @_ssdm_op_Write.ap_auto.i1P(i1* %rd_mux, i1 %tmp_3)

ST_3: mem_load (110)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:0  %mem_load = load i16* @mem, align 2

ST_3: data (113)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:91
_ifconv32:3  %data = load i1* %mem_out0_addr, align 1

ST_3: data_1 (115)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:95
_ifconv32:5  %data_1 = load i1* %mem_out1_addr, align 1

ST_3: data_2 (117)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:99
_ifconv32:7  %data_2 = load i1* %mem_out2_addr, align 1

ST_3: data_3 (119)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:103
_ifconv32:9  %data_3 = load i1* %mem_out3_addr, align 1

ST_3: data_4 (121)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:107
_ifconv32:11  %data_4 = load i1* %mem_out4_addr, align 1

ST_3: data_5 (123)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:111
_ifconv32:13  %data_5 = load i1* %mem_out5_addr, align 1

ST_3: data_6 (125)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:115
_ifconv32:15  %data_6 = load i1* %mem_out6_addr, align 1

ST_3: data_7 (127)  [1/2] 2.33ns  loc: LDPC_Out/LDPC_Out.cpp:119
_ifconv32:17  %data_7 = load i1* %mem_out7_addr, align 1

ST_3: sel_tmp9 (128)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:18  %sel_tmp9 = icmp eq i16 %mem_load, 6

ST_3: sel_tmp10 (129)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:19  %sel_tmp10 = icmp eq i16 %mem_load, 5

ST_3: sel_tmp11 (130)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:20  %sel_tmp11 = icmp eq i16 %mem_load, 4

ST_3: sel_tmp12 (131)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:21  %sel_tmp12 = icmp eq i16 %mem_load, 3

ST_3: sel_tmp13 (132)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:22  %sel_tmp13 = icmp eq i16 %mem_load, 2

ST_3: sel_tmp14 (133)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:23  %sel_tmp14 = icmp eq i16 %mem_load, 1

ST_3: sel_tmp15 (134)  [1/1] 1.55ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:24  %sel_tmp15 = icmp eq i16 %mem_load, 0

ST_3: newSel2 (135)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88 (grouped into LUT with out node newSel6)
_ifconv32:25  %newSel2 = select i1 %sel_tmp15, i1 %data, i1 %data_1

ST_3: or_cond3 (136)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:88
_ifconv32:26  %or_cond3 = or i1 %sel_tmp15, %sel_tmp14

ST_3: newSel3 (137)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:88 (out node of the LUT)
_ifconv32:27  %newSel3 = select i1 %sel_tmp13, i1 %data_2, i1 %data_3

ST_3: or_cond4 (138)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88 (grouped into LUT with out node data_8)
_ifconv32:28  %or_cond4 = or i1 %sel_tmp13, %sel_tmp12

ST_3: newSel4 (139)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88 (grouped into LUT with out node newSel7)
_ifconv32:29  %newSel4 = select i1 %sel_tmp11, i1 %data_4, i1 %data_5

ST_3: or_cond5 (140)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88 (grouped into LUT with out node newSel7)
_ifconv32:30  %or_cond5 = or i1 %sel_tmp11, %sel_tmp10

ST_3: newSel5 (141)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:88 (out node of the LUT)
_ifconv32:31  %newSel5 = select i1 %sel_tmp9, i1 %data_6, i1 %data_7

ST_3: newSel6 (142)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:88 (out node of the LUT)
_ifconv32:32  %newSel6 = select i1 %or_cond3, i1 %newSel2, i1 %newSel3

ST_3: or_cond6 (143)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:88 (grouped into LUT with out node data_8)
_ifconv32:33  %or_cond6 = or i1 %or_cond3, %or_cond4

ST_3: newSel7 (144)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:88 (out node of the LUT)
_ifconv32:34  %newSel7 = select i1 %or_cond5, i1 %newSel4, i1 %newSel5

ST_3: data_8 (145)  [1/1] 0.84ns  loc: LDPC_Out/LDPC_Out.cpp:88 (out node of the LUT)
_ifconv32:35  %data_8 = select i1 %or_cond6, i1 %newSel6, i1 %newSel7

ST_3: tmp_13 (153)  [1/1] 1.46ns  loc: LDPC_Out/LDPC_Out.cpp:126
:0  %tmp_13 = add i16 %mem_load, 1

ST_3: StgValue_143 (154)  [1/1] 1.09ns  loc: LDPC_Out/LDPC_Out.cpp:126
:1  store i16 %tmp_13, i16* @mem, align 2

ST_3: StgValue_144 (159)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:132
:2  call void @_ssdm_op_Write.ap_auto.i1P(i1* %data_out, i1 %data_8)

ST_3: val_assign (168)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:74
._crit_edge63:0  %val_assign = phi i16 [ 0, %2 ], [ %read_cnt_load, %.critedge._crit_edge ], [ %tmp_15, %6 ], [ %read_cnt_load, %7 ]

ST_3: StgValue_146 (169)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:143
._crit_edge63:1  call void @_ssdm_op_Write.ap_auto.i16P(i16* %cur_read_pos_V, i16 %val_assign)

ST_3: StgValue_147 (170)  [1/1] 0.00ns  loc: LDPC_Out/LDPC_Out.cpp:145
._crit_edge63:2  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.39ns
The critical path consists of the following:
	wire read on port 'numbits_V' [39]  (0 ns)
	'icmp' operation ('tmp_2', LDPC_Out/LDPC_Out.cpp:47) [68]  (1.55 ns)
	'or' operation ('sel_tmp6_demorgan', LDPC_Out/LDPC_Out.cpp:42) [78]  (0.84 ns)
	'or' operation ('sel_tmp13_demorgan', LDPC_Out/LDPC_Out.cpp:42) [81]  (0 ns)
	'xor' operation ('sel_tmp4', LDPC_Out/LDPC_Out.cpp:42) [82]  (0 ns)
	'and' operation ('sel_tmp5', LDPC_Out/LDPC_Out.cpp:57) [83]  (0.84 ns)
	'or' operation ('tmp_11', LDPC_Out/LDPC_Out.cpp:57) [85]  (0.84 ns)
	'select' operation ('storemerge3', LDPC_Out/LDPC_Out.cpp:57) [86]  (0.84 ns)
	multiplexor before 'phi' operation ('max_loc_1', LDPC_Out/LDPC_Out.cpp:74) with incoming values : ('tmp_8', LDPC_Out/LDPC_Out.cpp:74) ('storemerge3', LDPC_Out/LDPC_Out.cpp:57) [100]  (1.09 ns)
	'phi' operation ('max_loc_1', LDPC_Out/LDPC_Out.cpp:74) with incoming values : ('tmp_8', LDPC_Out/LDPC_Out.cpp:74) ('storemerge3', LDPC_Out/LDPC_Out.cpp:57) [100]  (0 ns)
	'icmp' operation ('tmp_7', LDPC_Out/LDPC_Out.cpp:84) [102]  (1.55 ns)
	'and' operation ('or_cond1', LDPC_Out/LDPC_Out.cpp:84) [103]  (0.84 ns)

 <State 2>: 3.63ns
The critical path consists of the following:
	'load' operation ('pos_load', LDPC_Out/LDPC_Out.cpp:91) on static variable 'pos_r' [46]  (0 ns)
	'add' operation ('tmp_14', LDPC_Out/LDPC_Out.cpp:130) [150]  (1.46 ns)
	multiplexor before 'phi' operation ('storemerge', LDPC_Out/LDPC_Out.cpp:130) with incoming values : ('tmp_14', LDPC_Out/LDPC_Out.cpp:130) [157]  (1.09 ns)
	'phi' operation ('storemerge', LDPC_Out/LDPC_Out.cpp:130) with incoming values : ('tmp_14', LDPC_Out/LDPC_Out.cpp:130) [157]  (0 ns)
	'store' operation (LDPC_Out/LDPC_Out.cpp:127) of variable 'storemerge', LDPC_Out/LDPC_Out.cpp:130 on static variable 'pos_r' [158]  (1.09 ns)

 <State 3>: 4.85ns
The critical path consists of the following:
	'load' operation ('data', LDPC_Out/LDPC_Out.cpp:99) on array 'mem_out2' [117]  (2.33 ns)
	'select' operation ('newSel3', LDPC_Out/LDPC_Out.cpp:88) [137]  (0.84 ns)
	'select' operation ('newSel6', LDPC_Out/LDPC_Out.cpp:88) [142]  (0.84 ns)
	'select' operation ('data', LDPC_Out/LDPC_Out.cpp:88) [145]  (0.84 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
