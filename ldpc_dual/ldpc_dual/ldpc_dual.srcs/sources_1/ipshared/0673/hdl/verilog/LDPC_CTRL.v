// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="LDPC_CTRL,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tffv676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.474000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=17,HLS_SYN_LUT=39}" *)

module LDPC_CTRL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        block_V,
        code_V,
        run,
        init_start,
        init_start_ap_vld,
        init_done,
        init_ready,
        buff_start,
        buff_start_ap_vld,
        status_V,
        status_V_ap_vld,
        err_code,
        err_code_ap_vld,
        size_V,
        size_V_ap_vld,
        rate_V,
        rate_V_ap_vld,
        buff_reset,
        buff_reset_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv16_2 = 16'b10;
parameter    ap_const_lv16_3 = 16'b11;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv6_A = 6'b1010;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] block_V;
input  [1:0] code_V;
input   run;
output   init_start;
output   init_start_ap_vld;
input   init_done;
input   init_ready;
output   buff_start;
output   buff_start_ap_vld;
output  [1:0] status_V;
output   status_V_ap_vld;
output  [15:0] err_code;
output   err_code_ap_vld;
output  [1:0] size_V;
output   size_V_ap_vld;
output  [1:0] rate_V;
output   rate_V_ap_vld;
output   buff_reset;
output   buff_reset_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg init_start;
reg init_start_ap_vld;
reg buff_start;
reg buff_start_ap_vld;
reg[1:0] status_V;
reg status_V_ap_vld;
reg[15:0] err_code;
reg err_code_ap_vld;
reg[1:0] size_V;
reg size_V_ap_vld;
reg[1:0] rate_V;
reg rate_V_ap_vld;
reg buff_reset;
reg buff_reset_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [15:0] state;
wire   [0:0] run_read_read_fu_84_p2;
reg   [0:0] state_flag_6_phi_fu_168_p20;
wire   [15:0] state_load_load_fu_235_p1;
wire   [0:0] or_cond1_fu_263_p2;
wire   [0:0] init_ready_read_read_fu_72_p2;
wire   [0:0] init_done_read_read_fu_78_p2;
reg   [5:0] state_new_6_phi_fu_203_p20;
wire  signed [15:0] state_new_6_cast_fu_269_p1;
wire   [0:0] notrhs_fu_245_p2;
wire   [0:0] notlhs_fu_239_p2;
wire   [0:0] or_cond_not_fu_251_p2;
wire   [0:0] tmp_3_fu_257_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_condition_65;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 state = 16'b1010;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_flag_6_phi_fu_168_p20 == 1'b0))) begin
        state <= state_new_6_cast_fu_269_p1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        if ((ap_condition_65 == 1'b1)) begin
            buff_reset = 1'b1;
        end else if (((state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0))) begin
            buff_reset = 1'b0;
        end else begin
            buff_reset = 'bx;
        end
    end else begin
        buff_reset = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0)))) begin
        buff_reset_ap_vld = 1'b1;
    end else begin
        buff_reset_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(1'b0 == init_done_read_read_fu_78_p2) & ~(1'b0 == init_ready_read_read_fu_72_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(1'b0 == init_done_read_read_fu_78_p2)))) begin
        buff_start = 1'b1;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_3) & (run_read_read_fu_84_p2 == 1'b0)))) begin
        buff_start = 1'b0;
    end else begin
        buff_start = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(1'b0 == init_done_read_read_fu_78_p2) & ~(1'b0 == init_ready_read_read_fu_72_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(1'b0 == init_done_read_read_fu_78_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_3) & (run_read_read_fu_84_p2 == 1'b0)))) begin
        buff_start_ap_vld = 1'b1;
    end else begin
        buff_start_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        if ((ap_condition_65 == 1'b1)) begin
            err_code = ap_const_lv16_0;
        end else if (((state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(or_cond1_fu_263_p2 == 1'b0))) begin
            err_code = ap_const_lv16_3;
        end else begin
            err_code = 'bx;
        end
    end else begin
        err_code = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(or_cond1_fu_263_p2 == 1'b0)))) begin
        err_code_ap_vld = 1'b1;
    end else begin
        err_code_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0))) begin
        init_start = 1'b1;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(1'b0 == init_ready_read_read_fu_72_p2)))) begin
        init_start = 1'b0;
    end else begin
        init_start = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(1'b0 == init_ready_read_read_fu_72_p2)))) begin
        init_start_ap_vld = 1'b1;
    end else begin
        init_start_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        if ((ap_condition_65 == 1'b1)) begin
            rate_V = ap_const_lv2_0;
        end else if (((state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0))) begin
            rate_V = code_V;
        end else begin
            rate_V = 'bx;
        end
    end else begin
        rate_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0)))) begin
        rate_V_ap_vld = 1'b1;
    end else begin
        rate_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        if ((ap_condition_65 == 1'b1)) begin
            size_V = ap_const_lv2_0;
        end else if (((state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0))) begin
            size_V = block_V;
        end else begin
            size_V = 'bx;
        end
    end else begin
        size_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0)))) begin
        size_V_ap_vld = 1'b1;
    end else begin
        size_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & (1'b0 == init_ready_read_read_fu_72_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_2) & (1'b0 == init_done_read_read_fu_78_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_3) & ~(run_read_read_fu_84_p2 == 1'b0)))) begin
        state_flag_6_phi_fu_168_p20 = 1'b0;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(or_cond1_fu_263_p2 == 1'b0)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(1'b0 == init_done_read_read_fu_78_p2) & ~(1'b0 == init_ready_read_read_fu_72_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & (1'b0 == init_done_read_read_fu_78_p2) & ~(1'b0 == init_ready_read_read_fu_72_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(1'b0 == init_done_read_read_fu_78_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_3) & (run_read_read_fu_84_p2 == 1'b0)))) begin
        state_flag_6_phi_fu_168_p20 = 1'b1;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3))) begin
        state_flag_6_phi_fu_168_p20 = run;
    end else begin
        state_flag_6_phi_fu_168_p20 = 'bx;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & (1'b0 == init_done_read_read_fu_78_p2) & ~(1'b0 == init_ready_read_read_fu_72_p2))) begin
        state_new_6_phi_fu_203_p20 = ap_const_lv6_2;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(1'b0 == init_done_read_read_fu_78_p2) & ~(1'b0 == init_ready_read_read_fu_72_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(1'b0 == init_done_read_read_fu_78_p2)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_2) & (1'b0 == init_done_read_read_fu_78_p2)))) begin
        state_new_6_phi_fu_203_p20 = ap_const_lv6_3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0))) begin
        state_new_6_phi_fu_203_p20 = ap_const_lv6_1;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(or_cond1_fu_263_p2 == 1'b0)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_3) & ~(run_read_read_fu_84_p2 == 1'b0)) | ((ap_CS_fsm_state1 == 1'b1) & (state_load_load_fu_235_p1 == ap_const_lv16_3) & (run_read_read_fu_84_p2 == 1'b0)))) begin
        state_new_6_phi_fu_203_p20 = ap_const_lv6_A;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3))) begin
        state_new_6_phi_fu_203_p20 = ap_const_lv6_0;
    end else begin
        state_new_6_phi_fu_203_p20 = 'bx;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        if ((ap_condition_65 == 1'b1)) begin
            status_V = ap_const_lv2_0;
        end else if (((state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0))) begin
            status_V = ap_const_lv2_1;
        end else begin
            status_V = 'bx;
        end
    end else begin
        status_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (state_load_load_fu_235_p1 == ap_const_lv16_0) & (or_cond1_fu_263_p2 == 1'b0)))) begin
        status_V_ap_vld = 1'b1;
    end else begin
        status_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

always @ (*) begin
    ap_condition_65 = (~(state_load_load_fu_235_p1 == ap_const_lv16_0) & ~(state_load_load_fu_235_p1 == ap_const_lv16_1) & ~(state_load_load_fu_235_p1 == ap_const_lv16_2) & ~(state_load_load_fu_235_p1 == ap_const_lv16_3));
end

assign init_done_read_read_fu_78_p2 = init_done;

assign init_ready_read_read_fu_72_p2 = init_ready;

assign notlhs_fu_239_p2 = ((block_V != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign notrhs_fu_245_p2 = ((block_V != ap_const_lv2_2) ? 1'b1 : 1'b0);

assign or_cond1_fu_263_p2 = (or_cond_not_fu_251_p2 | tmp_3_fu_257_p2);

assign or_cond_not_fu_251_p2 = (notrhs_fu_245_p2 & notlhs_fu_239_p2);

assign run_read_read_fu_84_p2 = run;

assign state_load_load_fu_235_p1 = state;

assign state_new_6_cast_fu_269_p1 = $signed(state_new_6_phi_fu_203_p20);

assign tmp_3_fu_257_p2 = ((code_V == ap_const_lv2_0) ? 1'b1 : 1'b0);

endmodule //LDPC_CTRL
